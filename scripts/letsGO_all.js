/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./TwProjectBot.js":
/*!*************************!*\
  !*** ./TwProjectBot.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _general_version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/version */ \"../general/version.js\");\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _requests__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./requests */ \"./requests.js\");\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n/* harmony import */ var _general_util_tw__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../general/util_tw */ \"../general/util_tw.js\");\n/* harmony import */ var _interfaces_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../interfaces/components */ \"../interfaces/components.js\");\n/* harmony import */ var _Train_train_export__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Train/train_export */ \"../Train/train_export.js\");\n/* harmony import */ var _Main_main_export__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Main/main-export */ \"../Main/main-export.js\");\n/* harmony import */ var _schedules__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./schedules */ \"./schedules.js\");\n/* harmony import */ var _general_translator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../general/translator */ \"../general/translator.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'use strict'\r\n\r\nif ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.n_aldeias == 0 ) end()\r\n\r\n// --- player\r\nif ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ] ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ] = {}\r\n// --- ids das vilas\r\nif ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villageIDs ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villageIDs = []\r\n// --- vilas\r\nif ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages = {}\r\n// --- programações\r\nif ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules = {}\r\n// --- configurações\r\nif ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs = {\r\n        n_loop : 0,\r\n        n_atk : 0,\r\n        active : true,\r\n        farm : { active: true, season: 150, timer: 30 },\r\n        msg : { place : true },\r\n        scav: true,\r\n        main: true,\r\n        train: true,\r\n        command : true,\r\n        overview : 60,\r\n        map : 60,\r\n        report : 60,\r\n        mail : 120,\r\n        market : 60,\r\n        ranking: 60,\r\n        ally: 60,\r\n        forum : 120,\r\n        info_player : 60,\r\n        mentor : 120,\r\n        premium : 60,\r\n        transfer : 300,\r\n        settings : 60,\r\n        place_command : 60,\r\n        place: 60,\r\n        event : 150\r\n    }\r\n// --- mercado premium\r\nif ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].market_premium == undefined ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].market_premium = {}\r\n// --- config mercado premium\r\nif ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].market_premium.config == undefined ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].market_premium.config = {\r\n    active : false,\r\n    option : 2,\r\n    sell : {\r\n        active: true,\r\n        storage_res: { \r\n            wood: 1000,\r\n            stone: 1000,\r\n            iron: 1000\r\n        }, \r\n        sell_rate: {\r\n            active: false,\r\n            wood: 64,\r\n            stone: 64,\r\n            iron: 64\r\n        }\r\n    },\r\n    buy : { \r\n        active: true,\r\n        storage_max: 30,\r\n        buy_max: 1000,\r\n        buy_rate: {\r\n            active: false,\r\n            wood: 64,\r\n            stone: 64,\r\n            iron: 64\r\n        }\r\n    }\r\n}\r\n// --- taxas diárias mercado premium\r\nif ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].market_premium.rate_daily == undefined ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].market_premium.rate_daily = {}\r\n// --- salva depois que cria\r\nlocalStorage.setItem( \"players\", JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n\r\n// --- obj das configurações para cada screen\r\nconst objScreens = {}\r\nfunction newObjScreen( name, screen, title, img, active ) {\r\n    screen, title, img, active\r\n    objScreens[ name ] = {\r\n        screen: screen,\r\n        title: title,\r\n        img: img,\r\n        active\r\n    }\r\n}\r\nnewObjScreen( \"main\", \"main\", \"Evolução\", \"https://dsbr.innogamescdn.com/asset/ed983c12/graphic/buildings/main.png\", true )\r\nnewObjScreen( 'train', 'train', 'Recrutamento de tropas', \"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/barracks.png\",  game_data.village.buildings.barracks > 0 )\r\nnewObjScreen( 'farm', \"am_farm\", 'Assistente de saque', \"https://dsbr.innogamescdn.com/asset/ed983c12/graphic/icons/farm_assistent.png\", _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.farm_active )\r\nnewObjScreen( 'scav', \"place&mode=scavenge\", 'Coleta de recursos', \"https://dsbr.innogamescdn.com/asset/e2454ccc/graphic/buildings/storage.png\", _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.scav_active )\r\n\r\nasync function doSomething() {\r\n\r\n    console.info( \"DOM carregado!\" )\r\n\r\n    console.timeEnd( \"Init time\" )\r\n\r\n    // --- perder foco pausa , voltar o foco, roda... ainda testando\r\n    window.addEventListener( 'blur', _general_util_tw__WEBPACK_IMPORTED_MODULE_4__.doPlay )\r\n    // window.addEventListener( 'focus', doPlay )\r\n\r\n    await (0,_requests__WEBPACK_IMPORTED_MODULE_2__.fetch_scavenge)()\r\n    await (0,_requests__WEBPACK_IMPORTED_MODULE_2__.fetch_players)()\r\n    await (0,_requests__WEBPACK_IMPORTED_MODULE_2__.fetch_world_config)()\r\n\r\n    const scav_active = localStorage.scav_active == 'true' ? true : false\r\n    const world_speed = Number( localStorage.world_speed )\r\n    const units_speed = Number( localStorage.units_speed )\r\n    const world_delay = Number( localStorage.world_delay )\r\n    const loyalty_per_hour = Number( localStorage.loyalty_per_hour )\r\n    const fake_limit = Number( localStorage.fake_limit )\r\n\r\n    const players = JSON.parse( localStorage.getItem( \"players\" ) )\r\n\r\n    // --- apresenta status\r\n    ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( players[ game_data.player.id ].configs.active )\r\n\r\n    let villages = players[ game_data.player.id ].villages\r\n    let ids = players[ game_data.player.id ].villageIDs\r\n    // --- elimina aldeia nobladas do objeto\r\n    for (const key in villages) {\r\n        if (Object.hasOwnProperty.call(villages, key)) {\r\n            if ( ids.indexOf( key ) == -1 ) delete villages[ key ]\r\n        }\r\n    }\r\n    players[ game_data.player.id ].villages = villages\r\n    // --- retorna as unidades de todas as vilas\r\n    for ( const key in villages ) {\r\n        if ( Object.hasOwnProperty.call( villages, key ) ) {\r\n            if ( !villages[ key ].units || villages[ key ].units == {} ) await units_not_premium( key )\r\n        }\r\n    }\r\n    // --- somente informações no console\r\n    if ( players[ game_data.player.id ].configs.n_loop == 0 ) {\r\n        let audio = document.createElement('audio')\r\n        document.querySelector('tbody').append(audio)\r\n        audio.src = 'https://www.vemtranquilo.host/VT/sonsdosbots/introducãoaobotbonner.mp3'\r\n        //audio.play()\r\n    }\r\n    players[ game_data.player.id ].configs.n_loop = Number( players[ game_data.player.id ].configs.n_loop ) + 1\r\n\r\n    localStorage.setItem( 'players', JSON.stringify( players ) )\r\n    console.log( `Let's Go!!\\nCount: ${ Number( players[ game_data.player.id ].configs.n_loop ) } loop's` )\r\n    console.log( 'Scavenge: ' + scav_active )\r\n    console.info( players[ game_data.player.id ].villageIDs )\r\n    let obj_log = { 'world_speed': world_speed, 'units_speed': units_speed, 'loyalty_per_hour': loyalty_per_hour, 'world_delay': world_delay, 'fake_limit' : fake_limit }\r\n    console.table( obj_log )\r\n    console.table( players[ game_data.player.id ].villages, [ 'coord', 'farm', 'scav', 'train', 'main' ] )\r\n\r\n    // --- check paused\r\n    check_paused( players[ game_data.player.id ].configs.active )\r\n    // --- bonus diário\r\n    daily_bonus()\r\n    // --- listeener para edições dos tickets\r\n    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.premium_active && ( ( document.querySelector(\"#quickedit-rename\") ) || ( document.querySelector( \"#commands_incomings\" ) ) || ( game_data.screen == 'overview_villages' && game_data.mode == 'incomings' ) ) ) document.addEventListener( 'change', editTicket )\r\n    // --- Etiqueta ataques nas visualizações\r\n    await TagAttacksInOverviews()\r\n    // --- Verifica se entrou novos ataques\r\n    check_for_new_attacks()\r\n    // --- academia\r\n    if ( game_data.screen == 'snob' ) console.log(\"Em construção\")\r\n    // --- visualização geral da aldeia\r\n    if ( game_data.screen == 'overview' && !game_data.mode ) console.log(\"Em construção\")\r\n    // --- executa pesquisa no ferreiro\r\n    if ( game_data.screen == 'smith' ) run_search()\r\n    // --- recrutamento\r\n    if ( game_data.screen == 'train' && !game_data.mode ) run_train()\r\n    // --- coleta\r\n    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual == \"place&mode=scavenge\" || ( game_data.screen == \"place\" && game_data.mode == \"scavenge\" ) ) {\r\n        console.log( 'Scavenging...' )\r\n        setTimeout(() => unlocks_Scav(), 3500, 4500 )\r\n        setTimeout(() => {\r\n            if ( next_scav() != null ) (0,_schedules__WEBPACK_IMPORTED_MODULE_8__.saveSchedules)( next_scav() + 5251, game_data.village.id, _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual )\r\n            if ( players[ game_data.player.id ].market_premium.config.active == true && players[ game_data.player.id ].configs.active == true ) self.location = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia + \"market&mode=exchange\"\r\n        }, 4500, 4500 )\r\n\r\n    }\r\n    // --- praça\r\n    if ( ( game_data.screen == \"place\" && !game_data.mode ) || ( game_data.screen == \"place\" && game_data.mode == \"command\" ) ) run_place()\r\n    if ( document.querySelector(\"#place_confirm_units\") && jQuery ) {\r\n        CommandSender.init();\r\n    }\r\n    // --- mapa\r\n    if ( game_data.screen == \"map\" ) {\r\n        const intMap = setInterval( function(){\r\n            if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.verConnection ) location.reload()\r\n            if ( ( document.getElementById( 'command-data-form' ) && document.querySelector(\"#command-data-form\").name == \"\" ) && jQuery ) {\r\n                clearInterval( intMap )\r\n                CommandSender.init()\r\n            }\r\n        }, 1000 )   \r\n    }\r\n    // --- resolve inatividade e cria relatório para apresentação\r\n    await resolve_idle( idle_e( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens, sche_e() ) )\r\n\r\n    let schedulesKeys = [], sortSchedules = {}\r\n        \r\n    schedulesKeys = Object.keys( players[ game_data.player.id ].schedules ).sort()\r\n\r\n    if ( schedulesKeys.length > 0 ) {\r\n        // --- apresentação console\r\n        sortSchedules = {}\r\n        for (const key_obj in schedulesKeys) {\r\n            if (Object.hasOwnProperty.call(schedulesKeys, key_obj)) {\r\n                sortSchedules[ schedulesKeys[ key_obj ] ] = players[ game_data.player.id ].schedules[ schedulesKeys[ key_obj ] ]\r\n            }\r\n        }\r\n        console.table( sortSchedules, [ 'date', 'screen', 'villageID', 'time', 'ms', 'status' ] )\r\n        // --- exclui eventos cancelados e/ou duplicados\r\n        del_all_schedules()\r\n        // --- verifica e executa eventos agendados\r\n        run_schedule()\r\n    } else {\r\n        console.log( \"Schedeules's not!\" )\r\n    }\r\n}\r\n\r\nconst daily_bonus = ( config_time = '00:01:00' ) => {\r\n    let scr = 'info_player&mode=daily_bonus'\r\n    if ( document.querySelector(\"#daily_bonus_content\") ) {\r\n        const dailyInt = setInterval(() => {\r\n            let btn = document.querySelector(\"#daily_bonus_content\").querySelector(\"a.btn.btn-default\")\r\n            if ( btn ) { \r\n                btn.click()\r\n            } else {\r\n                if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].market_premium.config.active == true && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.active == true ) {\r\n                    clearInterval(dailyInt)\r\n                    self.location = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia + \"market&mode=exchange\"\r\n                }\r\n            }\r\n        }, 1000 + (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.setMillis)( 500 ) );\r\n    }\r\n    if ( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.strTimeToSec)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) >= (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.strTimeToSec)( config_time ) && (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.strTimeToSec)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) < ( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.strTimeToSec)( config_time ) + 300 ) &&  _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual != scr ) {\r\n        if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].daily_bonus ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].daily_bonus = null\r\n        if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].daily_bonus == (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)() ) return\r\n        _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].daily_bonus = (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)()\r\n        localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ))\r\n        self.location = `${ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia }info_player&mode=daily_bonus`\r\n    }\r\n}\r\n\r\n/*/**\r\n    * etiqueta ataques\r\n    * parametros elem = html , ticket = string\r\n    * */\r\nconst updating_ticket = async ( elem, ticket, timer ) => {\r\n    setTimeout(() => {\r\n        if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.premium_active ) {\r\n            if ( elem.innerText.trim() == 'Ataque' ) {\r\n                elem.querySelector(\"a.rename-icon\").click()\r\n                elem.querySelector(\"input[type=text]\").value = ticket\r\n                elem.querySelector(\"input.btn\").click()\r\n            }\r\n        } else {\r\n            if ( elem.textContent.trim() != ticket ) {\r\n                elem.textContent = ticket\r\n            }\r\n        }\r\n    }, (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.random)( 20, 50 ) + timer )\r\n}\r\n\r\n// --- se fizer edição do ticket salva no storage\r\nfunction editTicket( e ) {\r\n    if ( e.path[2].className == 'quickedit' ) {\r\n        console.log( e.path[ 2 ].dataset.id, e.target.value )\r\n        let villages = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages\r\n        for ( let k in villages ) {\r\n            if ( villages[ k ].comingAttack ) {\r\n                if ( villages[ k ].comingAttack[ e.path[ 2 ].dataset.id ] ) {\r\n                    villages[ k ].comingAttack[ e.path[ 2 ].dataset.id ].ticket = e.target.value\r\n                }\r\n            }\r\n        }\r\n        _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages = villages\r\n        localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ))\r\n    }\r\n}\r\n\r\n// --- etiqueta ataques nas visualizações\r\nconst TagAttacksInOverviews = async () => {\r\n    let id, comingAttack, rows, elem\r\n    if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.premium_active ) {\r\n        comingAttack = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].comingAttack\r\n        if ( document.querySelector(\"#quickedit-rename\") ) {\r\n            elem = document.querySelector(\"#quickedit-rename\")\r\n            if ( comingAttack ) {\r\n                id = elem.dataset.id\r\n                if ( comingAttack [ id ].ticket ) {\r\n                    await updating_ticket( elem, comingAttack[ id ].ticket, (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.setMillis)(250) )\r\n                } else {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        if ( document.querySelector( \"#commands_incomings\" ) ) {\r\n            if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].comingAttack ) {\r\n                //players[game_data.player.id].villages[game_data.village.id].n_atk = document.querySelector(\"span.commands-command-count\").innerText.match(/[0-9]/ig)[0]\r\n                rows = Array.from( document.querySelector( \"#commands_incomings\" ).querySelectorAll( 'tr.command-row' ) )\r\n                for ( let r = 0; r < rows.length; r++ ) {\r\n                    id = rows[ r ].querySelector('span.quickedit').dataset.id\r\n                    if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.premium_active ) elem = rows[ r ].querySelector(\"span.quickedit-label\")\r\n                    if ( comingAttack[ id ] ) {\r\n                        if ( comingAttack [ id ].ticket ) {\r\n                            await updating_ticket( elem, comingAttack[ id ].ticket, (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.setMillis)(250) )\r\n                        } else {\r\n                            return true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }    \r\n    } else {\r\n        if ( game_data.screen == 'overview_villages' && game_data.mode == 'incomings' ) {\r\n            if ( !document.querySelector( \"#incomings_table\" ) ) return false\r\n            let villages = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages\r\n            let cols, def_id, coord_defender\r\n            rows = Array.from( document.querySelector( \"#incomings_table\" ).querySelectorAll( \"tr.nowrap\" ))\r\n            for ( let row = 0; row < rows.length; row++ ) {\r\n                cols = Array.from( rows[ row ].querySelectorAll( \"td\" ) )\r\n                id = cols[0].querySelector('span.quickedit').dataset.id\r\n                coord_defender = cols[1].innerText.match(/\\d+\\|\\d+/ig)\r\n                coord_defender = coord_defender[ coord_defender.length - 1 ]\r\n                for( let k in villages ) {\r\n                    if ( villages[ k ].coord == coord_defender ) def_id = k\r\n                }\r\n                comingAttack = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack\r\n                if ( comingAttack[ id ]) {\r\n                    if ( comingAttack[ id ].ticket ) {\r\n                        await updating_ticket( cols[ 0 ], comingAttack[ id ].ticket, (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.setMillis)(250) )\r\n                    } else {\r\n                        return true\r\n                    }\r\n                }\r\n            }\r\n        }    \r\n    }\r\n    return false\r\n}\r\n\r\n// --- obj com tradução dos nomes das unidades e pop gasta para 1 unidade recrutada\r\nconst trans_units = {\r\n    'spear': { trans: 'Lanceiro', pop: 1 },\r\n    'sword': { trans: 'Espada', pop: 1 },\r\n    'axe': { trans: 'Bárbaro', pop: 1 },\r\n    'archer': { trans: 'Arqueiro', pop: 1 },\r\n    'spy': { trans: 'Explorador', pop: 2 },\r\n    'light': { trans: 'Cavalaria Leve', pop: 4 },\r\n    'marcher': { trans: 'Arqueiro a cavalo', pop: 5 },\r\n    'heavy': { trans: 'Cavalaria pesada', pop: 6 },\r\n    'ram': { trans: 'Ariete', pop: 5 },\r\n    'catapult': { trans: 'Catapulta', pop: 8 },\r\n    'knight': { trans: 'Paladino', pop: 10 },\r\n    'snob': { trans: 'Nobre', pop: 100 },\r\n}\r\n\r\n// --- base de cálculo das unidades( ofensivas ) e velocidade por campo( usada para renomear ataques chegando )\r\nconst baseUnitSpeed = {\r\n    \"Nobre\" : 35,\r\n    \"Aríete\" : 30,\r\n    \"Espada\" : 22,\r\n    \"Bárbaro\" : 18,\r\n    \"Cavalaria Pesada\" : 11,\r\n    \"Cavalaria Leve\" : 10,\r\n    \"Explorador\" : 9\r\n}\r\n\r\n// --- base de cálculo das unidades( todas ) e velicidade por campo ( usada para o planejamento de comandos )\r\nconst baseUnitSpeed2 = {\r\n    \"snob\" : 35,\r\n    \"catapult\" : 30,\r\n    \"ram\" : 30,\r\n    \"sword\" : 22,\r\n    \"axe\" : 18,\r\n    \"spear\" : 18,\r\n    \"archer\" : 18,\r\n    \"heavy\" : 11,\r\n    \"light\" : 10,\r\n    \"marcher\" : 10,\r\n    \"knight\" : 10,\r\n    \"spy\" : 9\r\n}\r\n\r\n// --- retorna distância\r\nconst getDistance = ( coord_attacker, coord_defender ) => {\r\n    let coordAtt = coord_attacker.split(\"|\");\r\n    let coordDef = coord_defender.split(\"|\");\r\n    let exactDistance = Math.sqrt( Math.pow( parseInt( Number( coordAtt[ 0 ] ) ) - parseInt( Number( coordDef[ 0 ] ) ), 2 ) + Math.pow( parseInt( Number( coordAtt[ 1 ] ) ) - parseInt( Number( coordDef[ 1 ] ) ), 2 ) );\r\n    return exactDistance;\r\n}\r\n\r\n// --- retorna tempo de viagem\r\nconst getTravelTimeInSecond = ( distance, unit, base = baseUnitSpeed ) => {\r\n    const world_speed = Number( localStorage.world_speed )\r\n    const units_speed = Number( localStorage.units_speed )\r\n    let travel_time = Math.round( Number( distance ) * ( 60 * Number( base[ unit ] ) / world_speed / units_speed ) )\r\n    return Number( travel_time )\r\n}\r\n\r\n// --- retorna unidade mais lenta\r\nconst findAttackSpeed = ( arrival_time, coord_attacker, coord_defender ) => {\r\n    let TimeLeft = (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.strTimeToSec)( arrival_time );\r\n    let distance = getDistance( coord_attacker, coord_defender );\r\n    let previousUnit = \"Nobre\";\r\n\r\n    for ( var unit in baseUnitSpeed ){\r\n        if( getTravelTimeInSecond( distance, unit ) < TimeLeft ) return previousUnit;\r\n        previousUnit = unit;\r\n    }\r\n    return \"Explorador\";\r\n}\r\n\r\n// --- retorna backTime\r\nconst getBackTime = ( travel, arrival ) => {\r\n    let strDateTime = new Date( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( arrival[ 0 ], arrival[ 1 ] ) + ( travel * 1000 ) ).toLocaleString()\r\n    let arrDateTime = strDateTime.split( ' ' )\r\n    return `${ arrDateTime[ 0 ].substring( 0, 5 ) } - ${ arrDateTime[ 1 ] }`\r\n}\r\n\r\n// --- retorna lançamento\r\nconst getLaunchTime = ( travel, arrival ) => {\r\n    let strDateTime = new Date( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( arrival[ 0 ], arrival[ 1 ] ) - ( travel * 1000 ) ).toLocaleString()\r\n    let arrDateTime = strDateTime.split( ' ' )\r\n    return `${ arrDateTime[ 0 ].substring( 0, 5 ) } - ${ arrDateTime[ 1 ] }`\r\n}\r\n\r\n/**\r\n * Configurações de timer do Let's Go\r\n * @returns\r\n */\r\nconst settings_go = () => {\r\n    if ( game_data.screen == \"settings\" && !game_data.mode || game_data.mode == \"settings\" ) {\r\n        if ( !document.querySelector(\"#content_value > table > tbody > tr > td:nth-child(2)\") ) return\r\n        let configs = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[game_data.player.id].configs\r\n        let newElem = document.createElement('div')\r\n        document.querySelector(\"#content_value > table > tbody > tr > td:nth-child(2)\").prepend( newElem )\r\n        let html = `<h3>Let's Go! - Configurações Gerais</h3><div class=\"info_box\"><p>Let's Go! foi programado para jogar com vc! Para utilizá-lo você não precisa e nem deve abrir várias abas do navegador, ele irá navegar hora certa aonde precisa e, se passar da hora, irá executar as tarefas assim que for possível. Não se preocupe. É boa prática não abusar de sua utilização evitando problemas. Para não atrapalhar a sua jogabilidade, Let's Go! vem ajustado com tempos de pausa para diversas paginas do jogo que vc navega. Isso é proposital, se por acaso você deixar sair e deixar o jogo no fórum, por exemplo, depois desse tempo Let's Go! volta a executar suas tarefas! Caso sinta nescessidade você pode alterar esses tempos abaixo:</p></div><table class =\"vis settings\" style=\"width: 100%;\"><tbody><tr><th colspan=\"5\"> Configurações - Pausas de min: 30s / max: 600s ( segundos )</th></tr>`\r\n        html += `<tr><td><label for=\"timer_overview\"><input type=\"number\" id=\"timer_overview\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" autofocus> Visualizações</label></td><td><label for=\"timer_map\"><input type=\"number\" id=\"timer_map\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Mapa</label><td><td><label for=\"timer_report\"><input type=\"number\" id=\"timer_report\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Relatórios</label></td><td><label for=\"timer_mail\"><input type=\"number\" id=\"timer_mail\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Mensagens</label></td></tr>`\r\n        html += `<tr><td><label for=\"timer_ranking\"><input type=\"number\" id=\"timer_ranking\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Classificações</label></td><td><label for=\"timer_ally\"><input type=\"number\" id=\"timer_ally\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Tribo</label><td><td><label for=\"timer_forum\"><input type=\"number\" id=\"timer_forum\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Fórum</label></td><td><label for=\"timer_info_player\"><input type=\"number\" id=\"timer_info_player\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Perfil</label></td></tr>`\r\n        html += `<tr><td><label for=\"timer_mentor\"><input type=\"number\" id=\"timer_mentor\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Mentor</label></td><td><label for=\"timer_premium\"><input type=\"number\" id=\"timer_premium\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Premium</label><td><td><label for=\"timer_transfer\"><input type=\"number\" id=\"timer_transfer\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Transfências Premium</label></td><td><label for=\"timer_settings\"><input type=\"number\" id=\"timer_settings\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Configurações</label></td></tr>`\r\n        html += `<tr><td><label for=\"timer_market\"><input type=\"number\" id=\"timer_market\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Mercado</label></td><td><label for=\"timer_place\"><input type=\"number\" id=\"timer_place\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Praça de reunião</label><td><td><label for=\"timer_command\"><input type=\"number\" id=\"timer_command\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Comandos</label></td><td><label for=\"timer_event\"><input type=\"number\" id=\"timer_event\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Eventos</label></td></tr><tr><td colspan=\"5\"><input id=\"btn_go_config\" class=\"btn\" style=\"margin: 4px\" type=\"\" value=\"Salvar Mudanças\"></td></tr></tbody></table>`\r\n        newElem.innerHTML = html\r\n        document.querySelector(\"#timer_overview\").value = Number(configs.overview)\r\n        document.querySelector(\"#timer_map\").value = Number(configs.map)\r\n        document.querySelector(\"#timer_report\").value = Number(configs.report)\r\n        document.querySelector(\"#timer_mail\").value = Number(configs.mail)\r\n        document.querySelector(\"#timer_ranking\").value = Number(configs.ranking)\r\n        document.querySelector(\"#timer_ally\").value = Number(configs.ally)\r\n        document.querySelector(\"#timer_forum\").value = Number(configs.forum)\r\n        document.querySelector(\"#timer_info_player\").value = Number(configs.info_player)\r\n        document.querySelector(\"#timer_mentor\").value = Number(configs.mentor)\r\n        document.querySelector(\"#timer_premium\").value = Number(configs.premium)\r\n        document.querySelector(\"#timer_transfer\").value = Number(configs.transfer)\r\n        document.querySelector(\"#timer_settings\").value = Number(configs.settings)\r\n        document.querySelector(\"#timer_market\").value = Number(configs.market)\r\n        document.querySelector(\"#timer_place\").value = Number(configs.place)\r\n        document.querySelector(\"#timer_command\").value = Number(configs.place_command)\r\n        document.querySelector(\"#timer_event\").value = Number(configs.event)\r\n        document.querySelector(\"#btn_go_config\").addEventListener('click', () => {\r\n            configs.overview = document.querySelector(\"#timer_overview\").value\r\n            configs.map = document.querySelector(\"#timer_map\").value\r\n            configs.report = document.querySelector(\"#timer_report\").value\r\n            configs.mail = document.querySelector(\"#timer_mail\").value\r\n            configs.ranking = document.querySelector(\"#timer_ranking\").value\r\n            configs.ally = document.querySelector(\"#timer_ally\").value\r\n            configs.forum = document.querySelector(\"#timer_forum\").value\r\n            configs.info_player = document.querySelector(\"#timer_info_player\").value\r\n            configs.mentor = document.querySelector(\"#timer_mentor\").value\r\n            configs.premium = document.querySelector(\"#timer_premium\").value\r\n            configs.transfer = document.querySelector(\"#timer_transfer\").value\r\n            configs.settings = document.querySelector(\"#timer_settings\").value\r\n            configs.market = document.querySelector(\"#timer_market\").value\r\n            configs.place = document.querySelector(\"#timer_place\").value\r\n            configs.place_command = document.querySelector(\"#timer_command\").value\r\n            configs.event = document.querySelector(\"#timer_event\").value\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[game_data.player.id].configs = configs\r\n            localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n            UI.SuccessMessage( `Let's Go! - Configurações salvas!`, 2000 )\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Uso geral\r\n * @returns true quando está editando modelos ou nas configurações\r\n */\r\nconst check_config_go = () => {\r\n    // --- editando modelo de construção\r\n    if ( game_data.screen == \"main\" ) {\r\n        if ( document.querySelector( \"#div_building\" ).hidden == false ) return true\r\n    }\r\n    // --- editando modelo de tropas\r\n    if ( game_data.screen == \"train\" && game_data.mode != \"mass\" ) {\r\n        if ( document.querySelector(\"#div_recrutar\").hidden == false ) return true\r\n    }\r\n    return false\r\n}\r\n\r\n/**\r\n * Uso geral\r\n * retorna verdadeiro( pausa BOT ) quando está executando determinadas ações:\r\n * para não prejudicar a jogabilidade pausa tb renomear ataques\r\n */\r\nconst check_paused = active => {\r\n    // --- não pausa na coleta\r\n    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual == \"place&mode=scavenge\" || ( game_data.screen == \"place\" && game_data.mode == \"scavenge\" ) ) {\r\n        (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( active )\r\n        return false\r\n    }\r\n    // --- pausa o BOT quando está etiquetando e salvando novos ataques\r\n    if ( document.querySelector( '#audio_atk' ) ) return true\r\n    let check = false\r\n    let n_loop = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.n_loop\r\n    // --- se passar a segunda vez irá retornar falso e BOT volta a funcionar\r\n    function check_( check ) {\r\n        if ( check == true ) {\r\n            !localStorage.pause\r\n            ? localStorage.setItem( 'pause', n_loop )\r\n            : localStorage.pause == n_loop\r\n            ? check = true\r\n            : check = false\r\n        }\r\n        if ( check == false && localStorage.pause != undefined ) delete localStorage.pause\r\n        return check\r\n    }\r\n    // --- enviando comando no mapa\r\n    if ( document.querySelector( \"#popup_box_popup_command\" ) ) {\r\n        check = true\r\n        document.querySelector( \"#ds_body\" ).addEventListener( 'click', function( e ) {\r\n            console.log( `Target: ${e.target.id} ${e.target.className}` )\r\n            if ( e.target.id === document.querySelector(\"#ds_body\").id\r\n            || e.target.id == \"troop_confirm_submit\"\r\n            || e.target.className == \"popup_box_close tooltip-delayed\"\r\n            || e.target.className == \"fader\" ) {\r\n                check = false\r\n            }\r\n        })\r\n    }\r\n    // --- verifica telas de edições configurações do BOT\r\n    if ( check_config_go() ) check = check_config_go()\r\n    // --- determina status e quando não for nenhuma das anteriores retorna falso\r\n    check_( check )\r\n    ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( check == true ? \"await\" : active )\r\n    return check\r\n}\r\n\r\n// --- configura na visualização geral da aldeia ativar farm, coleta, construção e recrutamento\r\nconst jig_overview = () => {\r\n    if ( !game_data.mode ) {\r\n        let village = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ]\r\n        let elemNode, newElem\r\n        ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.insert_toggle)()\r\n        elemNode = document.querySelector(\"#rightcolumn\")\r\n        newElem = document.createElement( 'div' )\r\n        elemNode.prepend(newElem)\r\n        newElem.id = \"show_config\"\r\n        newElem.className = \"vis moveable widget \"\r\n        newElem.innerHTML = `<h4 class=\"head with-button ui-sortable-handle\"><img class=\"widget-button\" onclick=\"return VillageOverview.toggleWidget( 'show_config', this );\" src=\"graphic/minus.png\">\t\tLet's Go - Configuração</h4><div class=\"widget_content\" style=\"display: block;\"><table id=\"tab_config\"  width=\" 100%\"><tbody></tbody></table><div style=\"margin: 3px;\" ><a href=\"/game.php?village=${ game_data.village.id }&amp;screen=overview_villages\" title=\"Ativar/desativar de todas as aldeias\">» configurar todas</a><div></div>`\r\n        elemNode = document.querySelector(\"#tab_config > tbody\")\r\n        function check_on_of(check, txt, col1) {\r\n            check.checked ? txt.textContent = \" on\" : txt.textContent = \" off\"\r\n            check.checked ? col1.style.color = \"#13bf11\" : col1.style.color = \"red\"\r\n        }\r\n        function replace_menu( villa_c, screen_c, text_c, src_c ) {\r\n            newElem = document.createElement('tr')\r\n            elemNode.appendChild( newElem )\r\n            newElem.innerHTML = `<td><input id=\"active_${ screen_c }\" class=\"toggle\" type=\"checkbox\" checked><label id=\"ofn_${ screen_c }\" for=\"active_${ screen_c }\" style=\"color: #13bf11;\"> on</label></td><td><label id=\"lb_${ screen_c }\" title=\"Ativar/desativar auto-${  text_c.toLowerCase() } desta aldeia\" for=\"active_${ screen_c }\" \"><img src=\"${ src_c }\" style=\"font-size: 10pt;\" > ${ text_c }</label></td>`\r\n            elemNode.className =\r\n            document.querySelector(`#active_${ screen_c }`).checked = !village ? true : villa_c ? true : villa_c\r\n            check_on_of( document.querySelector(`#active_${ screen_c }`), document.querySelector(`#ofn_${ screen_c }`), document.querySelector(`#ofn_${ screen_c }`) )\r\n            document.querySelector(`#active_${ screen_c }`).addEventListener('click', () => {\r\n                check_on_of( document.querySelector(`#active_${ screen_c }`), document.querySelector(`#ofn_${ screen_c }`), document.querySelector(`#ofn_${ screen_c }`) )\r\n                save_menu_c( document.querySelector(`#active_${ screen_c }`).checked, screen_c )\r\n            })\r\n        }\r\n        function save_menu_c( check, screen_c ) {\r\n            if ( screen_c == \"farm\" ) village.farm = check\r\n            if ( screen_c == \"scav\" ) village.scav = check\r\n            if ( screen_c == \"main\" ) village.main = check\r\n            if ( screen_c == \"train\" ) village.train = check\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ] = village\r\n            localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n        }\r\n        replace_menu( !village ? true : village.main, 'main', 'Evolução da Aldeia', \"https://dsbr.innogamescdn.com/asset/ed983c12/graphic/buildings/main.png\" )\r\n        if ( game_data.village.buildings.barracks > 0 ) replace_menu( !village ? true : village.train, 'train', 'Recrutamento de tropas', \"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/barracks.png\" )\r\n        if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.farm_active ) replace_menu( !village ? true : village.farm, 'farm', 'Assistente de saque', \"https://dsbr.innogamescdn.com/asset/ed983c12/graphic/icons/farm_assistent.png\" )\r\n        if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.scav_active ) replace_menu( !village ? true : village.scav, 'scav', 'Coleta de recursos', \"https://dsbr.innogamescdn.com/asset/e2454ccc/graphic/buildings/storage.png\" )\r\n    }\r\n}\r\n\r\n// --- configura na visualização produção ativar ou desativar para todas as aldeias a auto evoluçao\r\nconst jig_over_villages = () => {\r\n    let screen = game_data.screen\r\n    let mode = game_data.mode\r\n    if ( ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual == 'overview_villages&intro' ) ) {\r\n        daily_bonus()\r\n        return\r\n    }\r\n    if ( ( screen == 'overview_villages' && !mode ) || ( screen == 'overview_villages' && mode == 'prod' ) ) {\r\n        let table = document.querySelector( \"#production_table\" )\r\n        const villages = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages\r\n        const thead = table.querySelector( \"thead tr\")\r\n        const trs = Array.from( table.querySelectorAll( \"tr.nowrap\" ) )\r\n        const ids = Array.from( table.querySelectorAll( 'span.quickedit-vn' ) ).map( ( e, i, a ) => e.dataset.id  )\r\n\r\n        function count_on( scr ) {\r\n            let count = 0\r\n            for ( const i in ids ) {\r\n                count += villages[ ids[ i ] ][ scr ] ? 1 : 0\r\n            }\r\n            return count\r\n        }\r\n\r\n        function repl_check( tr, id, check, scr , title ) {\r\n            let td = document.createElement( 'td' )\r\n            let html_td = `<input id=\"active_${ scr }\" data-id=\"${ id }\" type=\"checkbox\" title=\"Ativar/Desativar Auto-${ title } desta aldeia\" checked>`\r\n            tr.appendChild( td )\r\n            td.innerHTML = html_td\r\n            td.querySelector(`input`).checked = check\r\n            td.querySelector(`input`).addEventListener('click', () => {\r\n                villages[ id ][ scr ] = td.querySelector(`input`).checked\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ id ] = villages[ id ]\r\n                console.log( `${id}: ${_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ id ][ scr ]}` )\r\n                localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n                let th = document.querySelector( `#active_${ scr }_all` )\r\n                th.checked = ( count_on( scr ) / trs.length ) * 100 > 50 ? true : false\r\n                console.log( 'on:' + ( ( count_on( scr ) / trs.length ) * 100 ) )\r\n            })\r\n        }\r\n\r\n        for ( let i = 0; i < ids.length; i++ ) {\r\n            let arrScr = Object.keys( objScreens )\r\n            for ( const ind in arrScr ) {\r\n                if ( objScreens[ arrScr[ ind ] ].active ) {\r\n                    console.log( trs[ i ] , ids[ i ], villages[ ids[ i ] ][ arrScr[ ind ] ] == undefined ? true : villages[ ids[ i ] ][ arrScr[ ind ] ] , arrScr[ ind ], objScreens[ arrScr[ ind ] ].title )\r\n                    repl_check( trs[ i ] , ids[ i ], villages[ ids[ i ] ][ arrScr[ ind ] ] == undefined ? true : villages[ ids[ i ] ][ arrScr[ ind ] ] , arrScr[ ind ], objScreens[ arrScr[ ind ] ].title )\r\n                }\r\n            }\r\n        }\r\n\r\n        for ( const key in objScreens ) {\r\n            if (Object.hasOwnProperty.call( objScreens, key ) ) {\r\n                let th = document.createElement( 'th' )\r\n                if ( objScreens[ key ].active ) {\r\n                    thead.appendChild( th )\r\n                    let html_th = `<label id=\"lb_${ key }_all\" title=\"Ativar/Desativar Auto-${ objScreens[ key ].title } de todas aldeias\" for=\"active_${ key }_all\" \"><img src=\"${ objScreens[ key ].img }\"></label><input id=\"active_${ key }_all\" type=\"checkbox\" checked>`\r\n                    th.innerHTML = html_th\r\n                    document.querySelector( `#active_${ key }_all` ).checked = ( count_on( key ) / trs.length ) * 100 > 50 ? true : false\r\n                    console.log( count_on( key ) )\r\n                    document.querySelector( `#active_${ key }_all` ).addEventListener('click', () => {\r\n                        for ( const i in ids ) {\r\n                            trs[ i ].querySelector(`#active_${ key }`).checked = document.querySelector( `#active_${ key }_all` ).checked\r\n                            villages[ ids[ i ] ][ key ] = document.querySelector( `#active_${ key }_all` ).checked\r\n                        }\r\n                        _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages = villages\r\n                        localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// --- salva e etiqueta ataques - conta premium\r\nconst saveAttackPremium = async () => {\r\n    // --- busca atacadas na visualização - chegando\r\n    console.log( `Checking and updating attacked villages...` )\r\n    await (0,_requests__WEBPACK_IMPORTED_MODULE_2__.getRequest)( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia, 'overview_villages&mode=incomings&type=all&subtype=attackss&group=0' ).then( data => {\r\n        if ( data == Error ) return console.log( 'Request not fulfilled!' )\r\n        let html = new DOMParser().parseFromString( data, 'text/html')\r\n        // --- se não tem ataques chegando atualiza objeto\r\n        let villages = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages\r\n        if ( !html.querySelector( \"#incomings_table\" ) ) {\r\n            for ( let k in villages ) {\r\n                if ( villages[ k ].comingAttack ) delete _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ k ].comingAttack\r\n            }\r\n            return console.log( 'No attacks coming!' )\r\n        }\r\n        let rows = Array.from( html.querySelector( \"#incomings_table\" ).querySelectorAll( \"tr.nowrap\" ))\r\n        let count_u = 1, keys = [], cols, key, ini\r\n        UI.ErrorMessage( 'Atualizando Ataques! Por favor, Aguarde...', 2000 )\r\n        for ( let row = 0; row < rows.length; row++ ) {\r\n            cols = Array.from( rows[ row ].querySelectorAll( \"td\" ) )\r\n            // --- id do ataque\r\n            key = cols[0].querySelector('span.quickedit').dataset.id\r\n            console.log( `include attack ID: ${ key }` )\r\n            // --- salva todos os ids de ataques para excluir o que foi cancelado ou já bateu\r\n            keys.push( key )\r\n            console.log(keys)\r\n            // --- atacante\r\n            let attacker = cols[3].innerText\r\n            attacker = attacker.replaceAll('\\t', '')\r\n            attacker = attacker.replaceAll('\\n', '')\r\n            console.log( `Attacker: ${ attacker }` )\r\n            // --- ID do atacante\r\n            let attacker_id = cols[3].querySelector('a').href\r\n            ini = attacker_id.lastIndexOf('=') + 1\r\n            attacker_id = attacker_id.substring( ini, attacker_id.length )\r\n            console.log( `Attacker ID : ${ attacker_id }` )\r\n            // --- coord atacante\r\n            ini = cols[2].innerText.match(/\\d+\\|\\d+/ig).length\r\n            let coord_attacker = cols[2].innerText.match(/\\d+\\|\\d+/ig)[ini - 1]\r\n            console.log( `Attaker Coord: ${ coord_attacker }` )\r\n            // --- ID aldeia atacante\r\n            let villaAtt_id = cols[2].querySelector('a').href\r\n            ini = villaAtt_id.lastIndexOf('=') + 1\r\n            villaAtt_id = villaAtt_id.substring( ini, villaAtt_id.length )\r\n            console.log( `Attacker Village ID: ${ villaAtt_id }` )\r\n            // --- coord defensor\r\n            ini = cols[1].innerText.match(/\\d+\\|\\d+/ig).length\r\n            let coord_defender = cols[1].innerText.match(/\\d+\\|\\d+/ig)[ini - 1]\r\n            console.log( `Defender Coord: ${ coord_defender }` )\r\n            // --- ID aldeia defensor\r\n            let def_id\r\n            for( let k in villages ) if ( villages[ k ].coord == coord_defender ) def_id = k\r\n            console.log( `Defender Village ID: ${ def_id }` )\r\n            // --- chegada = arr[date,time,ms]\r\n            let arrival = (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_4__.return_ddmmaaaa)( cols[5].innerText.replaceAll('\\t','').replaceAll('\\n','') ).split( \" \" ).concat( cols[5].innerText.match( /[0-9]{2}[:][0-9]{2}[:][0-9]{2}/ig ) ).concat( cols[5].querySelector('span').innerText.match( /[0-9]{3}$/ig ) )\r\n            console.table( arrival )\r\n            // --- chegada em\r\n            let arrival_time = cols[6].innerText\r\n            console.log( `Arrival Time: ${ arrival_time }` )\r\n            // --- tempo de viagem\r\n            let travel = getTravelTimeInSecond( getDistance( coord_attacker, coord_defender ), findAttackSpeed( arrival_time, coord_attacker, coord_defender ) )\r\n            console.log( `Time of travel(ms): ${ travel }` )\r\n            // --- tras uni attk mais lenta\r\n            let unit_attk = findAttackSpeed( arrival_time, coord_attacker, coord_defender );\r\n            console.log( `slower unit(troop) : ${ unit_attk }` )\r\n            // --- etiqueta do ataque\r\n            let ticket = `${ unit_attk } | Envio:${ getLaunchTime( travel, arrival ) } | BackTime:${ getBackTime( travel, arrival ) } |`\r\n            console.log( `Ticket : ${ ticket }` )\r\n            // --- cria e/ou atualiza o objeto comingAttack no obj vila\r\n            if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack = {}\r\n            // --- atualiza objeto\r\n            if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack[ key ] ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack[ key ] = {}\r\n            console.log( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack )\r\n            if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack[ key ].ticket ) {\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack[ key ].ticket = ticket\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack[ key ].attacker = attacker\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack[ key ].attacker_id = attacker_id\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack[ key ].coord_attacker = coord_attacker\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack[ key ].villaAtt_id = villaAtt_id\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ def_id ].comingAttack[ key ].arrival = arrival\r\n                console.log( `${ count_u } ${ count_u > 1 ? 'Ataques Atualizados' : 'Ataque Atualizado' }` )\r\n                UI.ErrorMessage(`${ count_u } ${ count_u > 1 ? 'Ataques Atualizados' : 'Ataque Atualizado' }`, 2000 )\r\n                count_u++\r\n            }\r\n        }\r\n        // --- atualiza ataques que foram cancelados ou já bateram\r\n        let comingAttack = {}\r\n        let ids = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villageIDs\r\n        for ( let i = 0; i < ids.length; i++ ) {\r\n            if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ ids[ i ] ].comingAttack ) {\r\n                for ( let k in _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ ids[ i ] ].comingAttack ) {\r\n                    if ( keys.indexOf( k ) == - 1 ) {\r\n                        console.log( `Deleting attack ID: ${ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ ids[ i ] ].comingAttack[ k ] }` )\r\n                        delete _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ ids[ i ] ].comingAttack[ k ]\r\n                    } else comingAttack[ k ] = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ ids[ i ] ].comingAttack[ k ]\r\n                }\r\n            }\r\n        }\r\n        console.table( comingAttack, [ 'ticket', 'attacker', 'coord_attacker', 'arrival[0]', 'arrival[1]' ] )\r\n    })\r\n}\r\n\r\n// --- etiqueta attacks sem premium\r\nconst saveAttackNotPremium = async () => {\r\n    // --- busca as aldeias atacadas na visualização das aldeias\r\n    const arr_villas_att = await (0,_requests__WEBPACK_IMPORTED_MODULE_2__.getRequest)( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia, 'overview_villages' ).then( data => {\r\n        if ( data == Error ) return console.log( 'Request not fulfilled!' )\r\n        console.log( `Checking and updating attacked villages...` )\r\n        let html = new DOMParser().parseFromString( data, 'text/html')\r\n        // --- verifica e salva a quantidade de ataques por vila\r\n        let arrAtt = html.querySelectorAll(\"tr.nowrap\")\r\n        let arr_villas_att = []\r\n        UI.ErrorMessage( 'Atualizando Ataques! Por favor, Aguarde...', 3000 )\r\n        for ( let i = 0; i < arrAtt.length; i++ ) {\r\n            // --- inclui ataques c machadinho na frente\r\n            if ( arrAtt[i].querySelector('img') ) {\r\n                arr_villas_att.push( arrAtt[i].querySelector('span').dataset.id )\r\n            } else {\r\n                // --- não apaga mais por conta dos ignorados(apaga aldeias sem ataques chegando)\r\n                // --- verifica se tem ataque salvo e inclui tb se tiver\r\n                if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ arrAtt[i].querySelector('span').dataset.id ].comingAttack ) {\r\n                    arr_villas_att.push( arrAtt[i].querySelector('span').dataset.id )\r\n                }\r\n            }\r\n        }\r\n        // --- retorna somente a lista de aldeias com ataques chegando\r\n        return arr_villas_att\r\n    })\r\n    // --- renomeia ataques quando tem ataques chegando\r\n    if ( arr_villas_att.length == 0 ) {\r\n        console.log('There are no new attacks coming!')\r\n        return\r\n    }\r\n    console.log( `Atacadas: ${ arr_villas_att }` )\r\n    var count = 1\r\n    for ( let i = 0; i < arr_villas_att.length; i++ ) {\r\n        // --- cria o objeto comingAttack no obj vila\r\n        if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ arr_villas_att[ i ] ].comingAttack ) {\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ arr_villas_att[ i ] ].comingAttack = {}\r\n        }\r\n        let comingAttack = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ arr_villas_att[ i ] ].comingAttack\r\n        console.table( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ arr_villas_att[ i ] ].comingAttack )\r\n        // --- percorre preenchendo os ids dos ataques\r\n        await (0,_requests__WEBPACK_IMPORTED_MODULE_2__.getRequest)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( arr_villas_att[ i ], '' ), 'overview' ).then( data => {\r\n            if ( data == Error ) return console.log( 'Request not fulfilled!' )\r\n            console.log( `Searching for Attack Ids...` )\r\n            let html = new DOMParser().parseFromString( data, 'text/html')\r\n            // --- se não tem nada na lista exclui o chegando da aldeia\r\n            if ( !html.querySelector( \"#commands_incomings\" ) ) {\r\n                console.log( `Village without attacks coming. Updating...` )\r\n                delete _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ arr_villas_att[ i ] ].comingAttack\r\n            } else {\r\n                let rows = Array.from( html.querySelector( \"#commands_incomings\" ).querySelectorAll( 'tr.command-row' ) )\r\n                let attIds = []\r\n                // --- inclui ataques que não estão incluidos\r\n                for ( let r = 0; r < rows.length; r++ ) {\r\n                    console.log( `include attack ID: ${ rows[ r ].querySelector('span').dataset.id }` )\r\n                    attIds.push( rows[ r ].querySelector('span').dataset.id )\r\n                    if ( !comingAttack[ rows[ r ].querySelector('span').dataset.id ] ) {\r\n                        comingAttack[ rows[ r ].querySelector('span').dataset.id ] = {}\r\n                    }\r\n                }\r\n                // --- apaga ataques que já bateram ou foram cancelados pelo atacante\r\n                for ( const k in comingAttack ) {\r\n                    if ( Object.hasOwnProperty.call( comingAttack, k ) ) {\r\n                        if ( attIds.indexOf( k ) == - 1 ) {\r\n                            console.log( `Deleting attack ID: ${ comingAttack[ k ] }` )\r\n                            delete comingAttack[ k ]\r\n                        }\r\n                    }\r\n                }\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ arr_villas_att[ i ] ].comingAttack = comingAttack\r\n            }\r\n        })\r\n        if (_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ arr_villas_att[ i ] ].comingAttack) {\r\n            // --- renomeia e salva todos os ataques\r\n            console.table( comingAttack, ['ticket'] )\r\n            //let obj_com = {}\r\n            for ( const key in comingAttack ) {\r\n                if ( Object.hasOwnProperty.call( comingAttack, key ) ) {\r\n                    await (0,_requests__WEBPACK_IMPORTED_MODULE_2__.getRequest)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( arr_villas_att[ i ], '' ), `info_command&id=${ key }&type=other` ).then( data => {\r\n                        if ( data == Error ) return console.log( 'Request not fulfilled!' )\r\n                        let html = new DOMParser().parseFromString( data, 'text/html')\r\n                        console.log( `Fetching the data of each attack...` )\r\n                        let rows = Array.from( html.querySelector( \"#content_value > table.vis > tbody\" ).querySelectorAll( 'tr' ) )\r\n                        // --- atacante\r\n                        let attacker = Array.from( rows[1].querySelectorAll( 'td' ) )[ rows[1].querySelectorAll( 'td' ).length - 1 ].innerText\r\n                        console.log( `Attacker: ${ attacker }` )\r\n                        // --- ID do atacante\r\n                        let attacker_id = Array.from( rows[1].querySelectorAll( 'td' ) )[ rows[1].querySelectorAll( 'td' ).length - 1 ].querySelector('a').href\r\n                        let ini = attacker_id.lastIndexOf('=') + 1\r\n                        attacker_id = attacker_id.substring( ini, attacker_id.length )\r\n                        console.log( `Attacker ID : ${ attacker_id }` )\r\n                        // coord atacante\r\n                        ini = Array.from( rows[2].querySelectorAll( 'td' ) )[ rows[2].querySelectorAll( 'td' ).length - 1 ].innerText.match(/\\d+\\|\\d+/ig).length\r\n                        let coord_attacker = Array.from( rows[2].querySelectorAll( 'td' ) )[ rows[2].querySelectorAll( 'td' ).length - 1 ].innerText.match(/\\d+\\|\\d+/ig)[ ini - 1 ]\r\n                        console.log( `Attaker Coord: ${ coord_attacker }` )\r\n                        // --- ID aldeia atacante\r\n                        let villaAtt_id = Array.from( rows[2].querySelectorAll( 'td' ) )[ rows[2].querySelectorAll( 'td' ).length - 1 ].querySelector('a').href\r\n                        ini = villaAtt_id.lastIndexOf('=') + 1\r\n                        villaAtt_id = villaAtt_id.substring( ini, villaAtt_id.length )\r\n                        console.log( `Attacker Village ID: ${ villaAtt_id }` )\r\n                        // --- coordenada do defensor\r\n                        let coord_defender = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[game_data.player.id].villages[ arr_villas_att[ i ] ].coord\r\n                        console.log( `Defender Coord: ${ coord_defender }` )\r\n                        var ind_i = rows.length\r\n                        for ( let ind = 0; ind < rows.length; ind++ ) {\r\n                            if ( rows[ ind ].innerText.match( /[0-9]{2}[:][0-9]{2}[:][0-9]{2}[:][0-9]{3}$/ig ) ) {\r\n                                ind_i = Number( ind )\r\n                            }\r\n                        }\r\n                        // --- chegada = arr[ data, time, ms ]\r\n                        let arrival = [ (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_4__.return_ddmmaaaa)( Array.from( rows[ ind_i ].querySelectorAll( 'td' ) )[ 1 ].innerText.replaceAll(\r\n                            rows[ ind_i ].innerText.match( /[0-9]{2}[:][0-9]{2}[:][0-9]{2}[:][0-9]{3}$/ig ), '' ).trim() ), rows[ ind_i ].innerText.match( /[0-9]{2}[:][0-9]{2}[:][0-9]{2}/ig )[ 0 ], rows[ ind_i ].innerText.match( /[0-9]{3}$/ig )[ 0 ]]\r\n                        console.log( `Arrival( Date, Time, ms ): ${ arrival }` )\r\n                        // --- chegada em\r\n                        let arrival_time = rows[ ind_i + 1 ].querySelectorAll('td')[1].innerText\r\n                        console.log( `Arrival Time: ${ arrival_time }` )\r\n                        // --- tempo de viagem\r\n                        let travel = getTravelTimeInSecond( getDistance( coord_attacker, coord_defender ), findAttackSpeed( arrival_time, coord_attacker, coord_defender ) )\r\n                        console.log( `Time of travel(ms): ${ travel }` )\r\n                        // --- tras uni attk mais lenta\r\n                        let unit_attk = findAttackSpeed( arrival_time, coord_attacker, coord_defender );\r\n                        console.log( `slower unit(troop) : ${ unit_attk }` )\r\n                        // --- etiqueta do ataque\r\n                        let ticket = `${ unit_attk } | Envio:${ getLaunchTime( travel, arrival ) } | BackTime:${ getBackTime( travel, arrival ) } |`\r\n                        console.log( `Ticket : ${ ticket }` )\r\n                        // --- atualiza objeto\r\n                        if ( !comingAttack[ key ].ticket ) {\r\n                            comingAttack[ key ].ticket = ticket\r\n                            comingAttack[ key ].attacker = attacker\r\n                            comingAttack[ key ].attacker_id = attacker_id\r\n                            comingAttack[ key ].coord_attacker = coord_attacker\r\n                            comingAttack[ key ].villaAtt_id = villaAtt_id\r\n                            comingAttack[ key ].arrival = arrival\r\n                            console.log( `${ count } ${ count > 1 ? 'Ataques Atualizados' : 'Ataque Atualizado' }` )\r\n                            UI.ErrorMessage(`${ count } ${ count > 1 ? 'Ataques Atualizados' : 'Ataque Atualizado' }`, 2000 )\r\n                            count++\r\n                        }\r\n                        //obj_com[ key ] = comingAttack[ key ]\r\n                        _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ arr_villas_att[ i ] ].comingAttack = comingAttack\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //console.table( obj_com, [ 'ticket', 'attacker', 'coord_attacker', 'arrival[0]', 'arrival[1]' ] )\r\n}\r\n\r\n// --- verifica se tem novos ataques\r\nconst check_for_new_attacks = () => {\r\n    console.log( 'Check for new attacks...' )\r\n    let n_atk, config_atk\r\n    const interAttck = setInterval(() => {\r\n        if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.verConnection ) location.reload()\r\n        config_atk = Number( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.n_atk )\r\n        n_atk = Number( document.querySelector( \"#incomings_amount\" ).textContent )\r\n        if ( config_atk != n_atk ) {\r\n            clearInterval( interAttck )\r\n            check_coming_attacks( n_atk, config_atk )\r\n        }\r\n        (0,_Main_main_export__WEBPACK_IMPORTED_MODULE_7__.questCompleteClick)()\r\n    }, 1000)\r\n}\r\n\r\n// --- Verifica Ataques chegando\r\nconst check_coming_attacks = async ( n_atk, config_atk ) => {\r\n    let src\r\n    console.log('Check Coming Attacks...')\r\n    // --- se a quantidade de ataques aumentou\r\n    if ( n_atk > config_atk ) {\r\n        if ( config_atk == 0 ) src = 'https://www.vemtranquilo.host/VT/sonsdosbots/umabixa.mp3'\r\n        if ( config_atk  > 0 ) src = 'https://www.vemtranquilo.host/VT/sonsdosbots/ataqueacaminho.mp3'\r\n        let audio = document.createElement('audio')\r\n        document.querySelector('tbody').append(audio)\r\n        audio.src = src\r\n        audio.id = 'audio_atk'\r\n        //audio.play()\r\n        UI.ErrorMessage( `${ n_atk - config_atk } ${ n_atk - config_atk > 1 ? 'Novos Ataques' : 'Novo Ataque' } CHEGANDO!!!`, 2000 )\r\n    }\r\n    (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"await\" )\r\n    let atk_atual\r\n    while ( n_atk != config_atk ) {\r\n        atk_atual = n_atk\r\n        // --- Atualiza e salva ataques\r\n        if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.premium_active ) {\r\n            console.log( 'Coming Attacks Not Premium Checking...' )\r\n            await saveAttackNotPremium()\r\n        } else {\r\n            console.log( 'Coming Attacks Premium Checking...' )\r\n            await saveAttackPremium()\r\n        }\r\n        n_atk = Number( document.querySelector( \"#incomings_amount\" ).textContent )\r\n        if ( n_atk == atk_atual ) config_atk = n_atk\r\n    }\r\n    // --- Atualiza localStorage\r\n    _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.n_atk = n_atk\r\n    localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n    // --- Etiqueta ataques nas visualizações\r\n    TagAttacksInOverviews()\r\n    // --- verifica se tem novos ataques\r\n    check_for_new_attacks()\r\n}\r\n\r\nclass Commander {\r\n    confirmButton = null\r\n    init = function( key ) {\r\n        this.confirmButton = $( '#troop_confirm_submit' );\r\n        ( function() {\r\n            console.log(localStorage.delay)\r\n            const offset = Number( localStorage.getItem( 'goOffset' ) ) || -250\r\n            let sDate = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].date\r\n            let sTime = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].time\r\n            let ms = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].ms            \r\n            const attackTime = (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( sDate, sTime ) + Number( ms )\r\n            CommandSenders.confirmButton.addClass( 'btn-disabled' )\r\n            console.log( new Date( attackTime ).toLocaleString(), offset )\r\n            const idInter = setInterval(() => {\r\n                if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.verConnection ) location.reload()\r\n                if ( attackTime <= performance.timing.navigationStart + performance.now() + ( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeZone)() * 1000 ) + offset ) {\r\n                    clearInterval( idInter )\r\n                    CommandSenders.confirmButton.click();\r\n                }\r\n            }, 0.5 )\r\n        }())\r\n    }\r\n}\r\nconst CommandSenders = new Commander()\r\n\r\nclass CommanderII {\r\n    confirmButton = null\r\n    duration = null\r\n    dateNow = null\r\n    offset = null\r\n    init = function() {\r\n        CommandSender.addGlobalStyle( '#CStime, #CSoffset {font-size: 9pt;font-family: Verdana,Arial;}#CSbutton {float:right;}' )\r\n        $( $( '#command-data-form' ).find( 'tbody' )[ 0 ] ).append( '<tr><td>Chegada:</td><td> <input type=\"datetime-local\" id=\"CStime\" step=\".001\"> </td></tr><tr> <td>Offset:</td><td> <input type=\"number\" id=\"CSoffset\"> <button type=\"button\" id=\"CSbutton\" class=\"btn\">Confirmar</button> </td></tr>' );\r\n        this.confirmButton = $( '#troop_confirm_submit' );\r\n        //this.duration = $( '#command-data-form' ).find( 'td:contains(\"Duração:\")' ).next().text().split(':').map( Number );\r\n        this.duration = Array.from(document.querySelectorAll(\"#command-data-form table.vis\"))[0].innerText.match(/[0-9]{1,2}[:]{1}[0-9]{2}[:]{1}[0-9]{2}/ig)[0].split(\":\").map(Number)\r\n        this.offset = localStorage.getItem( 'goOffset' ) || -250;\r\n        this.dateNow = this.convertToInput( new Date( Date.now() + ( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeZone)() * 1000 ) ) );\r\n        $( '#CSoffset' ).val( this.offset );\r\n        $( '#CStime' ).val( this.dateNow );\r\n        $( '#CSbutton' ).click( function() {\r\n            var offset = Number( $('#CSoffset' ).val() );\r\n            // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- \r\n            let ms = new Date( $( '#CStime' ).val() ).getMilliseconds()\r\n            if ( ms < 100 ) {\r\n                ms = '0' + ms\r\n                if ( ms < 10 ) ms = '0' + ms\r\n            }\r\n            // --- retorna um array com ( data, hora, ms )\r\n            let arrDateTimeMs = new Date( $( '#CStime' ).val() ).toLocaleString().split(\" \")\r\n            arrDateTimeMs.push( ms )\r\n            if ( game_data.screen != \"map\" && (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) < (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( arrDateTimeMs[0], arrDateTimeMs[1] ) ) {\r\n                // --- salva os dados do comando para calcular delay\r\n                localStorage.setItem(\"delay\", \"delay\")\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].dTmTmode = [ (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( arrDateTimeMs[0], arrDateTimeMs[1] ) + Number( arrDateTimeMs[2] ), \"command\" ]\r\n                localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n                console.log( localStorage.delay, _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].ids_before )\r\n            }\r\n            // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- \r\n            var attackTime = CommandSender.getAttackTime();\r\n            localStorage.setItem('goOffset', offset);\r\n            CommandSender.confirmButton.addClass( 'btn-disabled' );\r\n            let idInter = setInterval(() => {\r\n                if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.verConnection ) location.reload()\r\n                if ( attackTime <= performance.timing.navigationStart + performance.now() + ( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeZone)() * 1000 ) + offset ) {\r\n                    clearInterval( idInter )\r\n                    CommandSender.confirmButton.click();\r\n                }\r\n            }, 0.5 );\r\n            // --- forma antiga do envio\r\n            // setTimeout( function() {\r\n            //     CommandSender.confirmButton.click();\r\n            // }, attackTime - Timing.getCurrentServerTime() + offset );\r\n            this.disabled = true;\r\n        });\r\n    }\r\n    getAttackTime = function() {\r\n        var d = new Date( $( '#CStime' ).val().replace('T',' ') );\r\n        d.setHours( d.getHours() - this.duration[ 0 ]);\r\n        d.setMinutes( d.getMinutes() - this.duration[ 1 ]);\r\n        d.setSeconds( d.getSeconds() - this.duration[ 2 ]);\r\n        return d;\r\n    }\r\n    convertToInput = function( t ) {\r\n        t.setHours( t.getHours() + this.duration[ 0 ]);\r\n        t.setMinutes( t.getMinutes() +this.duration[ 1 ]);\r\n        t.setSeconds( t.getSeconds() +this.duration[ 2 ]);\r\n        var a = {\r\n            y: t.getFullYear(),\r\n            m: t.getMonth() + 1,\r\n            d: t.getDate(),\r\n            time: t.toTimeString().split(' ')[ 0 ],\r\n            ms: t.getMilliseconds()\r\n        };\r\n        if (a.m < 10) {\r\n            a.m = '0' + a.m;\r\n        }\r\n        if (a.d < 10) {\r\n            a.d = '0' + a.d;\r\n        }\r\n        if (a.ms < 100) {\r\n            a.ms = '0' + a.ms;\r\n            if (a.ms < 10) {\r\n                a.ms = '0' + a.ms;\r\n            }\r\n        }\r\n        return a.y + '-' + a.m + '-' + a.d + 'T' + a.time + '.' + a.ms;\r\n    }\r\n    addGlobalStyle = function( css ) {\r\n        var head, style;\r\n        head = document.getElementsByTagName( 'head' )[ 0 ];\r\n        if ( !head)  { return; }\r\n        style = document.createElement( 'style' );\r\n        style.type = 'text/css';\r\n        style.innerHTML = css;\r\n        head.appendChild( style );\r\n    }\r\n};\r\n\r\nconst CommandSender = new CommanderII()\r\n\r\n/**\r\n * Uso - schedules\r\n * @returns key do proximo comando\r\n */\r\nconst return_key_command = () => {\r\n    let sch = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules\r\n    let objComm = {}\r\n    for ( let key in sch ) {\r\n        if ( sch[ key ].mode == \"command\" || sch[ key ].mode == \"delay\" ) objComm[ key ] = sch [ key ]\r\n    }\r\n    return Number( Object.keys( objComm ).sort()[ 0 ] )\r\n}\r\n\r\nconst activetedOnOff = ( timer, id, scr_p, key ) => {\r\n    console.log( scr_p )\r\n    // --- configurações de timer para quando o próximo evento não seja commando\r\n    if ( scr_p != 'place' ) {\r\n        let config = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs\r\n        let screen = game_data.screen\r\n        let mode = game_data.mode\r\n        let src_config = [ 'overview', 'map', 'report', 'mail', 'market', 'ranking', 'ally', 'forum', 'info_player', 'mentor', 'premium', 'settings', 'place', 'event' ]\r\n        // --- verifica se usuário está interagindo e determina timer conforme configuração\r\n        for ( let i = 0; i < src_config.length; i++ ) {\r\n            if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual != \"market&mode=exchange\" && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual != \"place&mode=scavenge\" ) {\r\n                if ( screen == src_config[ i ] ) {\r\n                    timer = Number( config[ src_config[ i ] ] )\r\n                    ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"await\" )\r\n                    if ( screen == 'place' ) {\r\n                        if ( !mode || mode == 'command' ) {\r\n                            timer = Number( config[ 'place_command' ] )\r\n                        }\r\n                    }\r\n                    if ( screen == 'map' && document.querySelector( \"#popup_box_popup_command\" ) ) {\r\n                        timer = Number( config[ 'place_command' ] )\r\n                    }\r\n                }\r\n            }\r\n            if ( src_config[ i ] == 'event' && screen.indexOf( \"event\" ) != -1 ) {\r\n                timer = Number( config.event )\r\n                ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"await\" )\r\n            }\r\n            if ( src_config[ i ] == \"premium\" &&  game_data.mode == \"transfer\" ) {\r\n                timer = Number( config.transfer )\r\n                ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"await\" )\r\n            }\r\n        }\r\n        if ( check_config_go() ) {\r\n            timer = src_config[ 'settings' ]\r\n            ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"await\" )\r\n        }\r\n        if ( screen == \"overview_villages\" || screen == \"memo\" || screen == \"info_village\" || screen == \"flags\" || screen == \"inventory\" || screen == \"statue\" ) {\r\n            timer = Number( config[ \"overview\" ] )\r\n            ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"await\" )\r\n        }\r\n    }\r\n    console.log( `timer: ${ timer }s ${ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.active ? 'on' : 'off' }` )\r\n    setTimeout(() => {\r\n        // --- quando não tem comando agendado\r\n        if ( scr_p != 'place' ) {\r\n            // --- se não está pausado\r\n            if ( !check_paused( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.active ) ) {\r\n                // --- se o BOT está ativado\r\n                if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.active ) {\r\n                    std_schedule( key, 1 ) // 1 - executando, pode ser excluido\r\n                    self.location = (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( id,  scr_p )\r\n                } else run_schedule()\r\n            } else run_schedule()\r\n        // --- quando TEM comando agendado\r\n        } else {\r\n            // --- quando BOT ativo ou desativo mas configurado para enviar commandos desativado.\r\n            if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.active || _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.command ) {\r\n                std_schedule( key, 2 ) // 2 - comando, entra no status de enviar\r\n                self.location = (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( id,  scr_p )\r\n            } else {\r\n                std_schedule( key, 1 ) // 1 - comando, entra no status de excluir\r\n                run_schedule()\r\n            }\r\n        }\r\n    }, (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.random)( 1000, 2000 ) + ( timer * 1000 ) ); // 1s a 2s\r\n    // --- verifica se entrou algum comando SE NÃO ESTIVER PARA EXECUTAR UM\r\n    if ( scr_p != 'place' ) {\r\n        const intComm = setInterval(() => {\r\n            if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.verConnection ) location.reload()\r\n            if ( return_key_command() - (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) < 80 * 1000 ) {\r\n                clearInterval( intComm )\r\n                run_schedule()\r\n            }\r\n        }, 1 * 1000 );\r\n    }\r\n}\r\n\r\n// --- mudar status da programação (eventos e comandos)\r\nconst std_schedule = ( key, statusSchedule ) => {\r\n    _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].status = statusSchedule\r\n    localStorage.setItem( \"players\", JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n}\r\n// --- exluir programação quando estiver no screen e aldeia corretos\r\nconst del_schedule = key => {\r\n    delete _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ]\r\n}\r\n\r\nconst alert_comm = ( active ) => {\r\n    if ( !document.querySelector(\"#alert_comm\") ) {\r\n        let elemNode = document.querySelector(\"#quickbar_outer\")\r\n        let newElem = document.createElement(\"div\")\r\n        elemNode.prepend(newElem)\r\n        newElem.id = \"alert_comm\"\r\n        newElem.style = \"width: 99,9%; max-width: 1080px; background: #e3d5b3 url(https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic/index/main_bg.jpg) scroll right top repeat; position: relative; display: flow-root; justify-content: center flex-end; align-items: center; box-shadow: 1px 2px 3px 1px rgb(0 0 0 / 30%); border: 1px solid #7d510f; margin-bottom: 5px; padding: 5px; \"\r\n        newElem.innerText = \" ⚠️ Você tem comando para ser enviado no próximo minuto. Aguarde!\"\r\n        newElem.style = \"font-size: large; color: red;\"\r\n    }\r\n    if ( !active && document.querySelector(\"#alert_comm\") ) document.querySelector(\"#alert_comm\").remove()\r\n}\r\n\r\n/**\r\n * Uso - Comandos\r\n * Calcula o delay e salva, depois cancela o comando se mode estiver marcado como delay\r\n */\r\nconst after_comm = () => {\r\n    if ( !localStorage.delay ) return console.error(\"Not Delay\")\r\n    if ( ( game_data.screen == \"place\" && !game_data.mode ) || ( game_data.screen == \"place\" && game_data.mode == \"command\" ) ) {\r\n        console.log(\"Entrou after\")\r\n        // --- retorna ids dos comandos antes de enviar o comando e apaga ids_before\r\n        let ids_before = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].ids_before\r\n        console.log( \"before: \" + ids_before )\r\n        // --- se por qualquer motivo do destino não foi enviado o comando\r\n        if ( !document.querySelector(\"#commands_outgoings > table.vis\" ) ) {\r\n            console.log( \"Não foi possível completar a atualização do Offset. Comando não enviado!\" )\r\n            delete localStorage.delayOK\r\n        } else {\r\n            // --- coleta ids dos comandos dopois de enviar o comando\r\n            let ids_after = Array.from(document.querySelector(\"#commands_outgoings > table.vis\").querySelectorAll('span.quickedit-out')).map((e)=> e.dataset.id)\r\n            console.log( \"after: \" + ids_after )\r\n            // --- busca id do comando enviado\r\n            let id, indice\r\n            if ( ids_before.length == 0 ) {\r\n                id = ids_after[ 0 ]\r\n                indice = 0\r\n            } else {\r\n                ids_after.map( ( e, i, a ) => {\r\n                    if ( ids_before.indexOf( e ) == -1 ) {\r\n                        id = e\r\n                        indice = i\r\n                    }\r\n                })\r\n            }\r\n            if ( id != null ) {\r\n                let tr_delay = Array.from(document.querySelector(\"#commands_outgoings > table.vis\").querySelectorAll('tr.command-row'))[ indice ]\r\n                let strDate = (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_4__.return_ddmmaaaa)( tr_delay.querySelectorAll('td')[1].innerText )\r\n                let strTime = tr_delay.querySelectorAll('td')[1].innerText.match( /[0-9]{2}[:][0-9]{2}[:][0-9]{2}/ig )[0]\r\n                let strMs = tr_delay.querySelectorAll('td')[1].innerText.match( /[:][0-9]{3}$/ig )[0].replace(\":\", \"\")\r\n                // --- hora de chegada real\r\n                let arrival = (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( strDate, strTime ) + Number( strMs )\r\n                console.log( \"Date + Time + ms - Arrival(ms): \" + arrival, \"ID command: \" + id )\r\n                // --- busca hora de chegada planejada\r\n                let dTmTmode = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].dTmTmode\r\n                console.log('dTmTmode: ' + dTmTmode )\r\n                // --- hora de chegada planejada\r\n                let shipping = Number( dTmTmode[ 0 ] )\r\n                console.log( new Date( arrival ).toLocaleString() )\r\n                console.log( new Date( shipping ).toLocaleString() )\r\n                console.log( \"Date + Time + ms - Shipping(ms): \" + shipping, \"ID command: \" + id )\r\n                // --- busca offset antigo\r\n                let goOffset = Number( localStorage.getItem(\"goOffset\") ) || 0\r\n                // --- --- -- limites  -- --- --- ---\r\n                if ( Math.abs( arrival * 1 - ( shipping - goOffset ) ) <= 5000  ) { \r\n                    // --- salva offset\r\n                    goOffset = arrival * 1 - ( shipping - goOffset )\r\n                    localStorage.setItem( 'goOffset', goOffset )\r\n                    // --- salva last_offset\r\n                    let last_offset = (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() )\r\n                    localStorage.setItem( 'last_offset', last_offset )\r\n                }\r\n                // --- --- --- --- --- --- --- --- --- --- ---\r\n                console.error( \"Offset: \" + goOffset )\r\n                // --- apaga comando quando for teste\r\n                if ( dTmTmode[ 1 ] == \"delay\" ) {\r\n                    console.log( \"Deleted : \" + id + \" command.\")\r\n                    tr_delay.querySelector(\"a.command-cancel\").click()\r\n                } else {\r\n                    delete localStorage.delayOK\r\n                }                    \r\n            }\r\n        }\r\n        delete localStorage.delay\r\n    } else console.error(game_data.screen == \"place\", !game_data.mode, game_data.screen == \"place\", game_data.mode == \"command\")\r\n}\r\n\r\n/**\r\n * Uso - Comandos\r\n * Executar um teste fake de delay\r\n * @param {Number} dateNow \r\n * @param {String} id \r\n * @param {Array} target\r\n * @param {Number} key \r\n * @returns key\r\n */\r\nconst delay_comm = async ( dateNow, id, target, template, key ) => {\r\n    let last_offset = Number( localStorage.getItem( 'last_offset' ) ) || 0\r\n    if ( dateNow - last_offset > ( 120 * 1000 ) ) {\r\n        let total = await (0,_requests__WEBPACK_IMPORTED_MODULE_2__.getRequest)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( id ), \"place\" ).then( data => {\r\n                if ( data == Error ) return console.log( 'Request not fulfilled!' )\r\n                let html = new DOMParser().parseFromString( data, 'text/html')\r\n                let arr_total = html.querySelectorAll( \"a.units-entry-all\" )\r\n                arr_total = Array.from( arr_total )\r\n                \r\n                return arr_total.map(( e ) => e.textContent.replace('(', '').replace(')', ''))\r\n        })\r\n        let template_delay = {}\r\n        let n = 1\r\n        let c = 0\r\n        let unit_slow = \"\"\r\n        for ( let key in template ) {\r\n            if ( Object.hasOwnProperty.call( template, key ) ) {\r\n                if ( Number( total[ c ] ) != 0 && template[ key ] != 0 && n == 1 ) {\r\n                    template_delay[ key ] = 1\r\n                    unit_slow = key\r\n                    n = 0\r\n                } else {\r\n                    template_delay[ key ] = 0\r\n                }\r\n            }\r\n            c++\r\n        }\r\n        console.log( template )\r\n        console.log( unit_slow )\r\n        if ( unit_slow == \"\" ) return key\r\n        let travel = getTravelTimeInSecond( getDistance( target[ 0 ] + \"|\" + target[ 1 ], _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ id ].coord ), unit_slow, baseUnitSpeed2 )\r\n        // --- salva evento\r\n        return (0,_schedules__WEBPACK_IMPORTED_MODULE_8__.saveSchedules)( dateNow + ( 30 * 1000 ), id, \"place\", \"delay\", '000', target, 1, template_delay, null, travel )\r\n    }\r\n    return key\r\n}\r\n\r\n// --- roda programações (eventos e comandos)\r\nconst run_schedule = async ( t = 18 ) => {\r\n    //--- calcula delay\r\n    after_comm()\r\n    //--- proxima programação (eventos e comandos) na lista ordenada\r\n    let key = Number( Object.keys( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules ).sort()[ 0 ] )\r\n    // --- quando não tem programação\r\n    if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ] ) return\r\n    // --- estancia o status\r\n    let status = Number( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].status )\r\n    // --- busca o horário do proximo comando\r\n    let key_command = return_key_command()\r\n    // --- calcula o timer em segundos para o proximo evento.\r\n    let timer = (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) < key ? ( key -  (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) ) / 1000 \r\n    : _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].screen == \"am_farm\" ? 36 : t\r\n    // --- avisa que tem um comando para ser enviado\r\n    key_command - (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) <=  80 * 1000 ? alert_comm( true ) : alert_comm( false )\r\n    if ( key_command - (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) <=  5 ) {\r\n        key = key_command\r\n        timer = 5\r\n    }\r\n    status = Number( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].status )\r\n    // --- quando a hora de enviar o comando é menor que o próximo timer mais o tempo mínimo entre cada evento -> comando entra na frente se não estiver no status de enviar\r\n    if ( status != 2 ) {\r\n        if ( key_command - (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) <= 35 * 1000  && key_command - (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) > 5 * 1000 ) {\r\n        let repeat = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key_command ].repeat\r\n            if ( localStorage.delayOK == undefined && repeat == \"00:00:00\" ) {\r\n                key_command = await delay_comm( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ), _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key_command ].villageID, _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key_command ].target, _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key_command ].template, key )\r\n                if ( key_command != key ) {\r\n                    localStorage.setItem(\"delayOK\", \"delayOK\")\r\n                    key = key_command\r\n                    timer = 5\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // --- pega status do novo comando se mudou\r\n    status = Number( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].status )\r\n    // --- engatilha e envia comandos\r\n    if ( status == 2 && ( ( game_data.screen == \"place\" && !game_data.mode ) || game_data.screen == \"place\" && game_data.mode == \"command\" )) {\r\n        (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"command\" )\r\n        console.log( 'Running scheduled command...' )\r\n        let target = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].target\r\n        let template = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].template\r\n        let type = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].type\r\n        let build = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].build\r\n        let date = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].date\r\n        let time = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].time\r\n        let ms = Number( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].ms )\r\n        let mode = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].mode\r\n        let travel = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].travel\r\n        let repeat = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].repeat\r\n        // --- engatilhado - aguarda até a hora de enviar o comando\r\n        if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual == \"place&try=confirm\" ) {\r\n            std_schedule( key, 1 )  // 1 - marca para ser excluido\r\n            // --- quando for nobre preenche os ataques\r\n            if ( Number( type ) > 1 && Number( type ) < 6 ) {\r\n                let trainButton = document.querySelector( \"#troop_confirm_train\" )\r\n                for ( let i = 1; i < Number( type ); i++ ) {\r\n                    setTimeout(() => trainButton.click(), (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.random)( 200, 500 ) + (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.setMillis)( 100 ) )\r\n                }\r\n            }\r\n            // --- seleciona o alvo da catapulta\r\n            if ( document.querySelector(\"#place_confirm_catapult_target select\") ) document.querySelector(\"#place_confirm_catapult_target select\").value = build\r\n\r\n            localStorage.setItem(\"delay\", \"delay\")\r\n            // --- salva os dados do comando para calcular delay\r\n            let tr = Array.from(document.querySelector(\"#command-data-form\").querySelectorAll(\"tr\"))\r\n            let td_travel \r\n            tr.map( (e, i, a) => {\r\n                if ( e.innerText.indexOf(\"Dura\") != -1 ) {\r\n                    td_travel = Array.from( tr[ i ].querySelectorAll(\"td\"))[1].textContent    \r\n                }\r\n            })\r\n            // --- farm player\r\n            if ( type == 7 ) {\r\n                (0,_schedules__WEBPACK_IMPORTED_MODULE_8__.saveSchedules)( key * 1 + ( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.strTimeToSec)( repeat ) * 1000 ) + (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.random)( 1000, 5000 ), game_data.village.id, game_data.screen, mode, ms, target, type, template, build, travel, repeat )\r\n            }\r\n\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].dTmTmode = [ (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( date, time ) + ms + ( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.cTimeToSeg)( td_travel ) * 1000 ), mode ]\r\n            localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n\r\n\r\n            // --- Enviar o comando\r\n            CommandSenders.init( key )\r\n        // --- engatilhando - preenche unidades e confirma o comando\r\n        } else {\r\n            let tab_tr = document.querySelector( \"#command-data-form > table > tbody > tr\" )\r\n            let units_name = Array.from( tab_tr.querySelectorAll( \"input.unitsInput\" ) ).map(( e, i, a ) => e.name )\r\n            let units_input = Array.from( tab_tr.querySelectorAll( \"input.unitsInput\" ) )\r\n            let units_max = Array.from( tab_tr.querySelectorAll( \"a.units-entry-all\" ) ).map( ( e, i, a ) => e.innerHTML.match(/\\d+/)[0] )\r\n            let target_input = document.querySelector( \"#place_target > input\" )\r\n            let btns = { \"attack\" : document.querySelector( \"#target_attack\" ), \"support\" : document.querySelector( \"#target_support\" ) }\r\n            for ( let i = 0; i < units_input.length; i++ ) {\r\n                if ( template[ units_name[ i ] ] == 'all' ) {\r\n                    units_input[ i ].value = units_max[ i ]\r\n                } else {\r\n                    if ( template[ units_name[ i ] ] > units_max[ i ] ) {\r\n                        units_input[ i ].value = units_max[ i ]\r\n                    } else {\r\n                        units_input[ i ].value = template[ units_name[ i ] ]\r\n                    }\r\n                }\r\n            }\r\n            target_input.value = `${ target[0] }|${ target[1] }`\r\n            \r\n            // --- engatilha o comando\r\n            btns[ type == 1 || type == 6 ? \"support\" : \"attack\" ].click()\r\n            btns[ type == 1 || type == 6 ? \"support\" : \"attack\" ].click()\r\n            // --- se houve um erro ao enviar o comando\r\n            if ( document.querySelector(\"#content_value > div.error_box > div\") ) {\r\n                std_schedule( key, 1 )  // 1 - marca para ser excluido\r\n                // --- farm player\r\n                if ( type == 7 ) {\r\n                    (0,_schedules__WEBPACK_IMPORTED_MODULE_8__.saveSchedules)( key * 1 + ( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.strTimeToSec)( repeat ) * 1000 ) + (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.random)( 1000, 5000 ), game_data.village.id, game_data.screen, mode, ms, target, type, template, build, travel, repeat )\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        let scr_p = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].screen\r\n        let id = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules[ key ].villageID\r\n        if ( status == 2 && ( ( game_data.screen != \"place\" ) || ( game_data.screen == \"place\" && game_data.mode != \"command\" ) || ( game_data.screen == \"place\" && game_data.mode != null ) ) ) {\r\n            self.location = (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( id,  scr_p )\r\n        } else {\r\n            console.log( 'Waiting for scheduled event...' )\r\n            activetedOnOff( timer, id, scr_p, key )    \r\n        }\r\n    }\r\n}\r\n\r\n// --- pesquisa no ferreiro o modelo passado na pag train\r\nconst run_search = () => {\r\n    console.log('Smith Search...')\r\n    // comparar modelo c pesquisa e executar\r\n    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.search ) {\r\n        let arr_search = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.search\r\n        let research = Array.from( document.querySelectorAll( \"a.btn.btn-research\" ) )\r\n        for ( const key in arr_search ) {\r\n            console.log( 'Search...' + arr_search[ key ] )\r\n            for ( const i in research ) {\r\n                if ( research[ i ].attributes[ 2 ].textContent.indexOf( arr_search[ key ] ) != - 1 ) {\r\n                    setTimeout(() => research[i].click(), 1000 )\r\n                }\r\n            }\r\n        }\r\n        // --- limpa o search no localStorage\r\n        setTimeout(() => {\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.search = []\r\n            console.log( 'Updating search...' + _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.search )\r\n            localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n        }, 3000 );\r\n    }\r\n    setTimeout(() => {\r\n        if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].market_premium.config.active == true && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.active == true ) self.location = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia + \"market&mode=exchange\"\r\n    }, 5000);\r\n}\r\n\r\nasync function units_not_premium( key ) {\r\n    await (0,_requests__WEBPACK_IMPORTED_MODULE_2__.getRequest)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( key, '' ), _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[2] ).then( data => {\r\n        if ( data == Error ) return console.log( 'Request not fulfilled!' )\r\n        let html = new DOMParser().parseFromString( data, 'text/html')\r\n        _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ key ].units = (0,_Train_train_export__WEBPACK_IMPORTED_MODULE_6__.obj_train_units)( html )\r\n    })\r\n}\r\n\r\n// --- cria a interface para salvar o modelo de recrutamento da aldeia\r\nconst jig_train = () => {\r\n    // --- cria interface\r\n    let elemNode = document.querySelector(\"#contentContainer\")\r\n    let newElem = document.createElement('div')\r\n    elemNode.prepend(newElem)\r\n    newElem.id = \"go_contairner\"\r\n    newElem.style = \"width: 99,9%; max-width: 1080px; background: #e3d5b3 url(https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic/index/main_bg.jpg) scroll right top repeat; position: relative; display: flow-root; justify-content: center flex-end; align-items: center; box-shadow: 1px 2px 3px 1px rgb(0 0 0 / 30%); border: 1px solid #7d510f; margin-bottom: 5px;    padding: 5px; \"\r\n    elemNode = newElem\r\n    newElem = document.createElement('div')\r\n    elemNode.append(newElem)\r\n    newElem.id = 'div_recrutar'\r\n    newElem.style = \"padding:2px; text-align: center; border: 1px solid #7d510f; margin: 10px 0px; box-shadow: 1px 1px 2px 1px rgb(60 30 0 / 20%); background: #f4e4bc;\"\r\n    newElem.hidden = true\r\n    newElem.innerHTML = `<form id=\"\" action=\"\" method=\"\"><table width=\"100%\" style=\"align-items: center; border-spacing: 2px; border-collapse: separate; border: outset;\" ><thead><tr id='th_units'></tr></thead><tbody><tr id='td_units'></tr></tbody></table></form><div style=\"padding:5px; text-align: center\"><input id=\"btn_mod_train\" type=\"button\" class=\"btn\" value=\"Salvar modelo desta aldeia\" title=\"Salva modelo de tropas desta aldeia\"><div style=\"float:right\"><span class=\"icon header ui_tooltip population\"></span><span id=\"pop_cost\">0</span></div></div>`\r\n    newElem = document.createElement('a')\r\n    elemNode.prepend(newElem)\r\n    newElem.id = 'a_recrutar'\r\n    newElem.textContent = 'Editar modelo de recrutamento desta aldeia'\r\n    newElem.onclick = () => {\r\n        let div_recrutar = document.querySelector(\"#div_recrutar\")\r\n        div_recrutar.hidden ? div_recrutar.hidden = false : div_recrutar.hidden = true\r\n        div_recrutar.hidden ? (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.active ) : (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( 'await' )\r\n        if ( div_recrutar.hidden ) run_train()\r\n    }\r\n    const units = game_data.units\r\n    let tag_th = ''\r\n    let tag_td = ''\r\n    for ( let i = 0; i < units.length; i++ ) {\r\n        if ( units[ i ] != 'knight' && units[ i ] != 'militia' ) {\r\n            tag_th += `<th style=\"text-align:center\" width=\"35\"><img src=\"https://dsbr.innogamescdn.com/asset/5e7ae1c9/graphic/unit/unit_${ units[ i ] }.png\" title=\"${ trans_units[ units[ i ] ].trans }\" alt=\"\" class=\"\"></th>`\r\n            tag_td += `<td style=\"text-align:center\"><input type=\"text\" value=\"${ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.train ? _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.train[ units[ i ] ] : 0 }\" name=\"${ units[ i ] }\" id=\"unit_input_${ units[ i ] }\" class=\"unit_input_field\" size=\"3\"></td>`\r\n        }\r\n    }\r\n    elemNode = document.querySelector('#th_units')\r\n    elemNode.innerHTML = tag_th\r\n    elemNode = document.querySelector('#td_units')\r\n    elemNode.innerHTML = tag_td\r\n    const arr = Array.from(document.querySelector(\"#td_units\").querySelectorAll('input'))\r\n    for (let i = 0; i < arr.length; i++ ) {\r\n        document.getElementById(`unit_input_${arr[i].name}`).onblur = function() {\r\n            calc_pop_total()\r\n        }\r\n    }\r\n    const calc_pop_total = () => {\r\n        let pop_total = 0\r\n        for ( let i = 0; i < arr.length; i++ ) {\r\n            pop_total += Number( arr[ i ].value ) * Number( trans_units[ arr[ i ].name ].pop )\r\n        }\r\n        document.querySelector('#pop_cost').textContent = pop_total\r\n    }\r\n    calc_pop_total()\r\n    document.querySelector( '#btn_mod_train' ).onclick = () => {\r\n        if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.train ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.train = {}\r\n        for ( let i = 0; i < arr.length; i++ ) {\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.train[ arr[ i ].name ] = Number( arr[ i ].value )\r\n        }\r\n        localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n        UI.SuccessMessage( 'Modelo salvo!', 1500 )\r\n        ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.active )\r\n        setTimeout(() => document.querySelector(\"#div_recrutar\").hidden = true, 2000, 1500 )\r\n        run_train()\r\n    }\r\n}\r\n\r\n// --- roda entre os buildings e retorna verdadeiro se existe o que ser recrutado\r\nconst train_now = async () => {\r\n    //--- btn recrutar\r\n    const btn_recruit = document.querySelector(\"input.btn.btn-recruit\")\r\n    const recruit = async () => await btn_recruit.click()\r\n    // cria um arr para as unidades do quartel, estabulo e oficina\r\n    const units = { 'stable' : [], 'barracks' : [], 'garage' : [] }\r\n    for ( let key in (0,_Train_train_export__WEBPACK_IMPORTED_MODULE_6__.obj_train_units)() ) {\r\n        if ( ['spy', 'light', 'marcher', 'heavy'].indexOf(key) > -1 ) units['stable'].push(key)\r\n        if ( ['spear', 'sword', 'axe', 'archer'].indexOf(key) > -1 ) units['barracks'].push(key)\r\n        if ( ['ram', 'catapult'].indexOf(key) > -1 ) units['garage'].push(key)\r\n    }\r\n    let resp = false\r\n    for ( let key in units ) {\r\n        await (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.sleep)(0.30)\r\n        let build = document.querySelector( `#replace_${ key }`)\r\n        let rows = !build ? 0 : build.querySelectorAll( 'tr.lit' ).length + build.querySelectorAll( 'tr.sortable_row' ).length\r\n        if ( units[ key ].length > 0 && rows < 2 ) {\r\n            let resp_ = await train_unit( units[ key ], build, rows )\r\n            if ( resp == false ) resp = resp_\r\n        }\r\n    }\r\n    if ( resp == true ) await recruit()\r\n    return resp\r\n}\r\n\r\n// --- Retorna um objeto c o total de cada unidade sendo recrutada\r\nconst obj_training = ( build, rows ) => {\r\n    if (!build) return 0\r\n    let units_training = {}\r\n    let arr_data = Array.from( build.querySelectorAll( 'td:nth-child(1)' ) )\r\n    let unit, qt\r\n    for ( let i = 0; i < rows; i++ ) {\r\n        unit = arr_data[ i ].childNodes[ 1 ].classList[ 2 ]\r\n        qt = arr_data[ i ].textContent.replaceAll( '\\t', '' ).replaceAll( '\\n', '' )\r\n        qt = Number( qt.substring( 0, qt.indexOf( ' ' ) ).trim() )\r\n        units_training[ unit ] = units_training[ unit ] ? units_training[ unit ] + qt : qt\r\n    }\r\n    return units_training\r\n}\r\n\r\n// --- calcula porcentagem entre a soma do recrutado com o recrutando sobre o modelo da unidade passada\r\nconst percent = ( unit, unit_training, unit_model ) => {\r\n    return unit_model > 0\r\n    ? ( Number( (0,_Train_train_export__WEBPACK_IMPORTED_MODULE_6__.obj_train_units)()[ unit ].amount[1] ) + Number( unit_training ) ) / Number( unit_model )\r\n    : 1\r\n}\r\n\r\n// --- calcula o limite a ser recrutado para cada unidade de acordo c a população\r\nconst limit = pop => {\r\n    return pop < 2 ? 50 : ( pop < 5 ? 20 : 10 )\r\n}\r\n\r\n// --- calcula a quantidade a ser recrutado para o modelo\r\nconst amount = ( unit ) => {\r\n    let maxi_recruit = Number( (0,_Train_train_export__WEBPACK_IMPORTED_MODULE_6__.obj_train_units)()[ unit ].max )\r\n    let maxi_limit = limit( Number( (0,_Train_train_export__WEBPACK_IMPORTED_MODULE_6__.obj_train_units)()[ unit ].pop ) )\r\n    return parseInt( maxi_recruit * 0.3 ) < maxi_limit\r\n    ? parseInt( maxi_recruit * 0.3 ) < 1\r\n    ? maxi_recruit > 0 ? 1 \r\n    : 0\r\n    : parseInt( maxi_recruit * 0.3 )\r\n    : maxi_limit\r\n}\r\n\r\n// --- Roda entre as unidades dos buildngs e retorna verdadeiro se tem o que ser recrutado.\r\nconst train_unit = async ( arr_units, build, rows ) => {\r\n    const train_modelo = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.train\r\n    let unit = null, perc_atual = 0, amount_atual = 0, unit_training, unit_model\r\n    await (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.sleep)(0.30)\r\n    for ( let j = 0; j < arr_units.length; j++ ) {\r\n        unit_training = build == null ? 0 : obj_training( build, rows )[ arr_units[ j ] ] | 0\r\n        unit_model = train_modelo[ arr_units[ j ] ] ? train_modelo[ arr_units[ j ] ] : 0\r\n        if ( unit == null ) {\r\n            unit = arr_units[ j ]\r\n            perc_atual = percent( unit, unit_training, unit_model )\r\n            amount_atual = amount( unit )\r\n        } else {\r\n            // --- Recruta o de percentual menor\r\n            if ( perc_atual > percent( arr_units[ j ], unit_training, unit_model ) ) {\r\n                unit = arr_units[ j ]\r\n                perc_atual = percent( unit, unit_training, unit_model )\r\n                amount_atual = amount( unit )\r\n            }\r\n        }\r\n        // --- não deixa recrutar acima do modelo e nem negativo\r\n        let total_model = train_modelo[ unit ] ? Number( train_modelo[ unit ] ) : 0  // moldelo\r\n        let total_recruited = Number( (0,_Train_train_export__WEBPACK_IMPORTED_MODULE_6__.obj_train_units)()[ unit ].amount[ 1 ] )  // recrutado\r\n        let total_recruiting = build == null ? 0 : Number( obj_training( build, rows )[ unit ] ) || 0 // recrutando\r\n        if ( total_recruited >= total_model || total_recruited + total_recruiting >= total_model ) {\r\n            amount_atual = 0\r\n        } else if ( total_recruited + total_recruiting + amount_atual > total_model ) {\r\n            amount_atual = total_model - ( total_recruited + total_recruiting )\r\n        }\r\n        // --- apresenta  no console\r\n        console.log( unit + ':', perc_atual, amount_atual + ' un' )\r\n        console.log( arr_units[j] + ':', percent( arr_units[ j ], unit_training, unit_model ), amount( arr_units[ j ] ) + ' un' )\r\n    }\r\n    if ( amount_atual > 0 ) document.querySelector(`#${unit}_0`).value = amount_atual\r\n    return amount_atual > 0 ? true : false\r\n}\r\n\r\n// --- retorna um número representando a data e hora do proximo evento\r\nconst next_train = ( buildings ) => {\r\n    let smallerDate = '', smallestHour = '', build, strDate, sTime, sDate\r\n    for ( let i = 0; i < buildings.length; i++) {\r\n        build = document.querySelector( `#replace_${ buildings[ i ] }` )\r\n        if ( build ) {\r\n            strDate = Array.from( build.querySelectorAll(\"td:nth-child(3)\") )[ 0 ].textContent\r\n            sTime = strDate.substring( strDate.lastIndexOf( ' ' ) + 1, strDate.length )\r\n            sDate = (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_4__.return_ddmmaaaa)( strDate )\r\n            if ( smallerDate == '' ) {\r\n                smallerDate = sDate\r\n                smallestHour = sTime\r\n            } else {\r\n                if ( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( smallerDate, smallestHour ) > (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( sDate, sTime ) ) {\r\n                    smallerDate = sDate\r\n                    smallestHour = sTime\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // --- verificar se o recrutaemnto parou por conta da fazenda\r\n    let village = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ]\r\n    if ( smallerDate != '' && smallestHour != '' ) {\r\n        console.log( `Date: ${ smallerDate } \\n Time: ${ smallestHour } \\n Num: ${ (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( smallerDate, smallestHour ) }` )\r\n        return (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( smallerDate, smallestHour )\r\n    } else {\r\n        if ( village.pop_max - village.pop > 8 ) {\r\n            return (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) + ( ( 3 * 60 ) * 1000 )\r\n        } else {\r\n            (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.error_box)( 'Pouco espaço na fazenda para recrutar!', 5000 )\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\n// --- retorna verdadeiro se tem tropa para pesquisar\r\nconst return_search = () => {\r\n    const train_modelo = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.train\r\n    let train_units = (0,_Train_train_export__WEBPACK_IMPORTED_MODULE_6__.obj_train_units)()\r\n    const arr_search = []\r\n    const arr_search_check = []\r\n    // --- comparar modelo c pesquisa.\r\n    console.log( 'checked search...1' )\r\n    for ( const key in train_modelo ) {\r\n        if ( !train_units[ key ] && train_modelo[ key ] > 0 ) {\r\n            arr_search.push( key )\r\n        }\r\n    }\r\n    console.table(arr_search)\r\n    // --- se tem algo a pesquisar\r\n    if ( arr_search.length > 0 ) {\r\n        console.log( 'checked search...2' )\r\n        // --- verifica se pode pesquisar o que tem a pesquisar(compara)\r\n        let tab_search = document.querySelector( \"#content_value\" ).querySelectorAll( \"table.vis\" )\r\n        tab_search = ( tab_search[ tab_search.length - 1 ].querySelector( \"th\" ).textContent == 'Ainda não disponível' )\r\n        ? tab_search[ tab_search.length - 1 ] : null\r\n        if ( tab_search ) {\r\n            let units_search = Array.from( tab_search.querySelectorAll( \"a.unit_link\" ) ).map( ( e, i, a ) => e.dataset.unit )\r\n            for ( const key in units_search ) {\r\n                if ( arr_search[ key ] && units_search[ key ] ) {\r\n                    arr_search_check.push( arr_search[ key ] )\r\n                }\r\n            }\r\n            console.table(arr_search_check)\r\n            // -- depois de checado se ainda tem algo a pesquisar, salva no storage\r\n            if ( arr_search_check.length > 0 ) {\r\n                if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo = {}\r\n                if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.search ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.search = []\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].modelo.search = arr_search_check\r\n                localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n                return true\r\n            }\r\n        }\r\n    }\r\n    console.log( 'No search...' )\r\n    return false\r\n}\r\n\r\n/**\r\n * Uso recrutar\r\n * Verifica se existe um MODELO para a aldeia:\r\n * Se não: pede para o usuário criar um modelo,\r\n * Se sim: busca o modelo salvo e começa o recrutamento\r\n */\r\nconst run_train = async () => {\r\n    const train_build = [ \"stable\", \"barracks\", \"garage\" ]\r\n    if ( !JSON.parse( localStorage.players )[ game_data.player.id ].villages[ game_data.village.id ].modelo.train ) {\r\n        UI.SuccessMessage( 'Você precisa salvar um Modelo de recrutamento para esta aldeia!!!', 2000 )\r\n    } else {\r\n        const trainID = setInterval( async () => {\r\n            if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.verConnection ) location.reload()\r\n            if ( await train_now() == false ) {\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].units = (0,_Train_train_export__WEBPACK_IMPORTED_MODULE_6__.obj_train_units)()\r\n                localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n                clearInterval( trainID )\r\n                setTimeout(() => {\r\n                    let prox_e = next_train( train_build )\r\n                    if ( prox_e != null ) (0,_schedules__WEBPACK_IMPORTED_MODULE_8__.saveSchedules)( prox_e , game_data.village.id, game_data.screen )\r\n\r\n                    if ( return_search() ) (0,_schedules__WEBPACK_IMPORTED_MODULE_8__.saveSchedules)( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) + 60 * 1000 , game_data.village.id, \"smith\" )\r\n\r\n                    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].market_premium.config.active == true && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.active == true ) self.location = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia + \"market&mode=exchange\"\r\n                }, 2000 )\r\n            }\r\n        }, 2000 )\r\n    }\r\n}\r\n\r\n// --- Desbloqueia Coletas\r\nconst unlocks_Scav = () => {\r\n    console.log('Unlocks Scavenges...')\r\n    let { wood: wood_d, stone: stone_d, iron: iron_d } = ScavengeScreen.village.res\r\n    let coletas = ScavengeScreen.village.options\r\n    for ( let i = 1; coletas[i] != undefined; i++) {\r\n        if ( coletas[i].is_locked == true ) {\r\n            if ( coletas[i].unlock_time != null ) break\r\n            let { wood: wood_c, stone: stone_c, iron: iron_c } = coletas[i].getUnlockCost()\r\n            if ( wood_d >= wood_c && stone_d >= stone_c && iron_d >= iron_c) {\r\n                document.querySelector(\"div.options-container\").querySelectorAll(\".scavenge-option\")[ i - 1 ].querySelector('a').click()\r\n                document.querySelector(\".popup_box_content\").querySelector('a').click()\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Uso scavenge(coleta)\r\n * retorna id(numero da data e hora) que termina proxima coleta ou null se não houver nada\r\n */\r\nconst next_scav = () => {\r\n    let arrScav = Array.from( document.querySelector( \"#scavenge_screen > div > div.options-container\" ).querySelectorAll( \"span.return-countdown\" ) ).map( ( e ) => (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.strTimeToSec)( e.innerText ) * 1000 + (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( document.querySelector(\"#serverDate\").textContent, document.querySelector( \"#serverTime\" ).textContent ) ).concat( Array.from( document.querySelector( \"#scavenge_screen > div > div.options-container\" ).querySelectorAll( \"span.unlock-countdown-text\" ) ).map( ( e ) => (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.strTimeToSec)( e.innerText ) * 1000 + (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( document.querySelector(\"#serverDate\").textContent, document.querySelector( \"#serverTime\" ).textContent ) ) ).sort()\r\n    if ( arrScav.length > 0 ) return arrScav[0]\r\n    return null\r\n}\r\n\r\n/**\r\n *\r\n * @returns ojeto c os ids e screens agendados\r\n */\r\nconst sche_e = () => {\r\n    let ids = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villageIDs\r\n    let schedules = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules\r\n    let schedulesKeys = Object.keys( schedules ).sort()\r\n    let sche_e = {}\r\n    for ( let i = 0; i < ids.length; i++ ) {\r\n        sche_e[ids[i]] = []\r\n        for ( const key in schedulesKeys ) {\r\n            if ( schedules[ schedulesKeys[ key ] ].villageID  == ids[ i ] ) {\r\n                    sche_e[ ids[ i ] ].push( schedules[ schedulesKeys[ key ] ].screen)\r\n            }\r\n        }\r\n    }\r\n    return sche_e\r\n}\r\n\r\n/**\r\n * --- retorna obj villas com eventos ociosos\r\n *\r\n * @param {Array} screens\r\n * @param {Object} sche_e\r\n * @returns Object - ids das aldeias contendo Array de screens inativos\r\n */\r\nconst idle_e = ( screens, sche_e ) => {\r\n    let ids = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villageIDs\r\n    let idle_e = {}\r\n    for ( let i = 0; i < ids.length; i ++ ) {\r\n        idle_e[ ids[ i ] ] = []\r\n    }\r\n    for ( let i = 0; i < screens.length; i++ ) {\r\n        for ( let key in sche_e ) {\r\n            if ( sche_e[ key ].indexOf( screens[ i ] ) == -1 ) idle_e[ key ].push( screens[ i ] )\r\n        }\r\n    }\r\n    return idle_e\r\n}\r\n\r\n/**\r\n * marca para excluir eventos desabilitados pelo usuário e exclui todos os eventos marcados\r\n */\r\nconst del_all_schedules = () => {\r\n    let villages = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages\r\n    let schedules = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules\r\n    let keys_del = []\r\n    // --- marca para excluir e salva os ids na keys_del para excluir\r\n    for (const key in schedules) {\r\n        if (Object.hasOwnProperty.call(schedules, key)) {\r\n            // --- exclui programação de villas nobladas\r\n            if ( !villages[ schedules[ key ].villageID ] ) {\r\n                schedules[ key ].status = 1\r\n            } else {\r\n                if ( !villages[ schedules[ key ].villageID ].farm && schedules[ key ].screen == _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[0] ) schedules[ key ].status = 1\r\n                if ( !villages[ schedules[ key ].villageID ].main && schedules[ key ].screen == _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[1] ) schedules[ key ].status = 1\r\n                if ( !villages[ schedules[ key ].villageID ].train && schedules[ key ].screen == _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[2] ) schedules[ key ].status = 1\r\n                if ( !villages[ schedules[ key ].villageID ].scav && schedules[ key ].screen == _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[3] ) schedules[ key ].status = 1    \r\n            }\r\n            if ( Number( schedules[ key ].status ) == 1 ) keys_del.push( key )\r\n            if ( Number( schedules[ key ].status ) == 1 ) console.log( key, schedules[ key ].villageID, schedules[ key ].screen )\r\n        }\r\n    }\r\n    if ( keys_del.length == 0 ) return console.log( 'No events to delete!' )\r\n    for ( let i = 0; i < keys_del.length; i++ ) {\r\n        del_schedule( keys_del[ i ] )\r\n    }\r\n    console.log( keys_del.length + ' Events deleted!')\r\n    localStorage.setItem( \"players\", JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n}\r\n/**\r\n *\r\n * @param {Object} obj_idle - ids das aldeias contendo Array de screens inativos\r\n * @returns Object - relatório(para cada screen-motivos para inatividade que o user pode resolver) contendo array c ids das vilas para apresentação\r\n */\r\nconst resolve_idle = async obj_idle => {\r\n    let config = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs\r\n    let objReport = {}\r\n    if ( !config.active ) return objReport\r\n    let villages = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages\r\n    let arrFarmDisable = [], arrScavDisable = []\r\n    let arrTrainDisable = [], arrTrainModelo = [], arrtrainPop = []\r\n    let arrMainDisable = [], arrMainModelo = [], arrMainPop = []\r\n    let now = (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( document.querySelector(\"#serverDate\").textContent, document.querySelector(\"#serverTime\").textContent )\r\n    let season = config.farm.season, timer = config.farm.timer, count = 0\r\n    for ( const key in obj_idle ) {\r\n        if ( Object.hasOwnProperty.call( obj_idle, key ) ) {\r\n            for (let i = 0; i < obj_idle[ key ].length; i++) {\r\n                // --- marca só uma vez AS desativado\r\n                if ( obj_idle[ key ][ i ] == _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[0] && !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.farm_active ) if ( !objReport['Inativos'] ) objReport['Inativos'] = [ '- Assistente de saque desativado!' ]\r\n                if ( obj_idle[ key ][ i ] == _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[0] && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.farm_active ) {\r\n                    if ( !villages[ key ].farm ) arrFarmDisable.push( key )\r\n                    // --- precisa salvar no objeto aldeias as tropas atualmente na aldeia\r\n                    // --- precisa salvar no objeto player os modelos de farm para verificar\r\n                    if ( villages[ key ].farm ) {\r\n                        (0,_schedules__WEBPACK_IMPORTED_MODULE_8__.saveSchedules)( now + ( ( ( timer * count ) + season ) * 1000 ), Number( key ), _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[0] )\r\n                        count++\r\n                    }\r\n                }\r\n                if ( obj_idle[ key ][ i ] == _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[1] ) {\r\n                    if ( !villages[ key ].main ) arrMainDisable.push( key )\r\n                    if ( villages[ key ].main && !villages[ key ].modelo ) arrMainModelo.push( key )\r\n                    if ( villages[ key ].main && villages[ key ].modelo ) {\r\n                        if ( !villages[ key ].modelo.main ) arrMainModelo.push( key )\r\n                        if ( villages[ key ].modelo.main && Number( villages[ key ].pop_max ) - Number( villages[ key ].pop ) <= 200 ) arrMainPop.push( key )\r\n                        if ( villages[ key ].modelo.main && Number( villages[ key ].pop_max ) - Number( villages[ key ].pop ) > 200 ) {\r\n                            let builds = villages[ key ].build\r\n                            let modelo = villages[ key ].modelo.main\r\n                            for (const k in modelo) {\r\n                                if (Object.hasOwnProperty.call(modelo, k)) {\r\n                                    if ( modelo[ k ] > builds[ k ] ) {\r\n                                        (0,_schedules__WEBPACK_IMPORTED_MODULE_8__.saveSchedules)( now + ( ( ( 42 * count ) + 180 ) * 1000 ), Number( key ), _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[1] )\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if ( obj_idle[ key ][ i ] == _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[2] ) {\r\n                    if ( !villages[ key ].train ) arrTrainDisable.push( key )\r\n                    if ( villages[ key ].train && !villages[ key ].modelo ) arrTrainModelo.push( key )\r\n                    if ( villages[ key ].train && villages[ key ].modelo ) {\r\n                        if ( !villages[ key ].modelo.train ) arrTrainModelo.push( key )\r\n                        if ( villages[ key ].modelo.train && Number( villages[ key ].pop_max ) - Number( villages[ key ].pop ) <= 8 ) arrtrainPop.push( key )\r\n                        if ( villages[ key ].modelo.train && Number( villages[ key ].pop_max ) - Number( villages[ key ].pop ) > 8 ) {\r\n                            //let modelo = villages[ key ].modelo.train\r\n                            //let units = villages[ key ].units[2]\r\n                            (0,_schedules__WEBPACK_IMPORTED_MODULE_8__.saveSchedules)( now + ( 20 * count * 1000 ), Number( key ), _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[2] )\r\n                        }\r\n                    }\r\n                }\r\n                if ( obj_idle[ key ][ i ] == _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[3] && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.scav_active ) {\r\n                    if ( !villages[ key ].scav ) arrScavDisable.push( key )\r\n                    if ( villages[ key ].scav ) {\r\n                        (0,_schedules__WEBPACK_IMPORTED_MODULE_8__.saveSchedules)( now + ( 20 * count * 1000 ), Number( key ), _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens[3] )\r\n                        count++\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if ( arrFarmDisable.length > 0 ) objReport['farmDisable'] = arrFarmDisable\r\n    if ( arrScavDisable.length > 0 ) objReport['ScavDisable'] = arrScavDisable\r\n    if ( arrMainDisable.length > 0 ) objReport['MainDisable'] = arrMainDisable\r\n    if ( arrMainModelo.length > 0 ) objReport['MainModelo'] = arrMainModelo\r\n    if ( arrMainPop.length > 0 ) objReport['MainPop'] = arrMainPop\r\n    if ( arrTrainDisable.length > 0 ) objReport['TrainDisable'] = arrTrainDisable\r\n    if ( arrTrainModelo.length > 0 ) objReport['TrainModelo'] = arrTrainModelo\r\n    if ( arrtrainPop.length > 0 ) objReport['TrainPop'] = arrtrainPop\r\n    console.table( objReport )\r\n    return objReport\r\n}\r\nconst viewCommands = ( hide = false ) => {\r\n    let view_command = document.querySelector( \"#view_command\" )\r\n    function create_view( objComm ) {\r\n        // --- cria div aonde vai a tabela comandos agendados\r\n        let elemNode = document.querySelector( '#go_contairner' )\r\n        let newElem = document.createElement('div')\r\n        elemNode.appendChild( newElem )\r\n        newElem.id = \"view_command\"\r\n        newElem.className = \"vis\"\r\n        newElem.style = \"width: 99% margin: 4px; display: 'none'\"\r\n        //newElem.hidden = true\r\n        // --- cabeçalho\r\n        let html = `<table class=\"vis overview_table\" style=\"width: 100%; white-space:nowrap;\"><tbody><tr><th style=\"padding: 2px 3px;\"> Comando</th><th style=\"padding: 2px 3px;\"> Envio</th><th style=\"padding: 2px 3px;\"> Origem</th><th style=\"padding: 2px 3px;\"> Chegada</th><th style=\"padding: 2px 3px;\"> Destino</th>`\r\n        for ( let i = 0; i < game_data.units.length - 1; i++ ) {\r\n            html += `<th  style=\"padding: 2px 3px;\" style=\"text-align:center\"><img src=\"https://dsbr.innogamescdn.com/asset/fa087e61/graphic/unit/unit_${ game_data.units[ i ] }.png\" alt=\"\" title=\"${ trans_units[ game_data.units[ i ] ].trans }\"></th>`\r\n        }\r\n        html += `<th> Duração</th></tr>`\r\n        let c = 'a'\r\n        let villages = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages\r\n        let dataHoraChegada\r\n        for ( let key in objComm ) {\r\n            if (Object.hasOwnProperty.call( objComm, key )) {\r\n                dataHoraChegada = new Date( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( objComm[ key ].date, objComm[ key ].time ) + ( Number( objComm[ key ].travel ) * 1000 ) )\r\n                html += `<tr class=\"vis ${ game_data.village.id == objComm[ key ].villageID ? 'nowrap selected' : 'nowrap'} row_${ c }\">\r\n                <td style=\"padding: 2px 3px;\" title=${ Number( objComm[ key ].type ) == 7 ? objComm[ key ].repeat : \"Comando\"} >${ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.type_comm[ Number( objComm[ key ].type ) ] }</td>\r\n                <td style=\"padding: 2px 3px;\">${ objComm[ key ].date.replace(/[/][0-9]{4}/ig,\"\") } - ${ objComm[ key ].time }:<span class=\"grey small\">${ objComm[ key ].ms }</span></td>\r\n                <td style=\"padding: 2px 3px;\" title='Ir para a praça da aldeia'><a href=\"${(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( objComm[ key ].villageID, \"place\" )}\">${ villages[ objComm[ key ].villageID ].coord }</a></td>\r\n                <td style=\"padding: 2px 3px;\">${ dataHoraChegada.toLocaleDateString().replace(/[/][0-9]{4}/ig,\"\") } - ${ dataHoraChegada.toLocaleTimeString() }</td>\r\n                <td style=\"padding: 2px 3px;\" title='Ir para a visualização da aldeia'><a href=\"${(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( game_data.village.id, \"info_village&id=\"+objComm[ key ].target[ 2 ]+\"#\"+objComm[ key ].target[ 0 ]+\";\"+objComm[ key ].target[ 1 ] )}\"> ${ objComm[ key ].target[ 0 ] }|${ objComm[ key ].target[ 1 ] } </td>`\r\n                \r\n                for ( let units in objComm[ key ].template ) {\r\n                    html += `<td class=\"unit-item${ objComm[ key ].template[ units ] == 0 ? \" hidden\" : \"\" }\" title=\"${ units == \"catapult\" ? objComm[ key ].build : trans_units[ units ].trans }\">${objComm[ key ].template[ units ]}</td>`\r\n                }\r\n\r\n                html += `<td  style=\"padding: 2px 3px;\">${ (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nSegStrHora)( Number( objComm[ key ].travel ) ) }<a data-id=\"${ key.trim() }  \" ><img src=\"https://dsbr.innogamescdn.com/asset/fa087e61/graphic/delete.png\" alt=\"cancelar\" title=\"Cancelar Comando\" style=\"margin-left: 5px; cursor: pointer; transition: 0.2s;\" class=\"cancel_link_icon\"></a>\r\n                </td></tr>`\r\n\r\n                c = c  == 'a' ? 'b' : 'a'\r\n            }\r\n        }\r\n        html += `</tbody></table>`\r\n        newElem.innerHTML = html\r\n        view_command = newElem\r\n    }\r\n    function cancel_comm( e ) {\r\n        if ( e.target.className == \"cancel_link_icon\" ) {\r\n            console.log( e, e.path[1].dataset.id )\r\n            del_schedule( e.path[1].dataset.id.trim() )\r\n            localStorage.setItem( \"players\", JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n            e.path[3].remove()\r\n            if (document.querySelector(\"#view_command > table\").querySelectorAll('tr.vis.nowrap').length == 0 ) {\r\n                view_command.remove()\r\n                removeEventListener( 'click', cancel_comm )\r\n            }\r\n        }\r\n    }\r\n    if ( !view_command ) {\r\n        let sch = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].schedules\r\n        // --- salva obj comandos in natura\r\n        let obj = {}\r\n        for ( let key in sch ) {\r\n            if ( sch[ key ].mode == \"command\" ) obj[ key ] = sch [ key ]\r\n        }\r\n        // --- ordena os índices\r\n        let arrComm = Object.keys( obj ).sort()\r\n        if ( arrComm.length == 0 ) {\r\n            UI.ErrorMessage( \" Não existem comandos programados! \", 3000 )\r\n            return\r\n        } else {\r\n            // --- ordena obj em um novo\r\n            let objComm = {}\r\n            for ( let i = 0; i < arrComm.length; i++ ) {\r\n                objComm[ arrComm[ i ] ] = obj[ arrComm[ i ] ]\r\n            }\r\n            create_view( objComm )\r\n            view_command.style.display = hide == false ? \"\" : \"none\"\r\n            if ( view_command.style.display == \"\" ) document.addEventListener( \"click\", cancel_comm )\r\n        }\r\n    } else {\r\n        view_command.style.display = view_command.style.display == \"none\" ? \"\" : \"none\"\r\n        if ( view_command.style.display == \"\" ) {\r\n            document.addEventListener( \"click\", cancel_comm )\r\n        } else removeEventListener( 'click', cancel_comm )\r\n    }\r\n}\r\nconst run_place = () => {\r\n    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual == \"place&try=confirm\" ) return\r\n    ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.insert_toggle)()\r\n    // --- CRIA A INTERFACE NA PRAÇA DE REUNIÃO ---\r\n    // --- div principal\r\n    let elemNode = document.querySelector(\"#contentContainer\")\r\n    let newElem = document.createElement('div')\r\n    elemNode.prepend(newElem)\r\n    newElem.id = \"go_contairner\"\r\n    newElem.style = \"width: 99,9%; max-width: 1080px; background: #e3d5b3 url(https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic/index/main_bg.jpg) scroll right top repeat; position: relative; display: flow-root; justify-content: center flex-end; align-items: center; box-shadow: 1px 2px 3px 1px rgb(0 0 0 / 30%); border: 1px solid #7d510f; margin-bottom: 5px; padding: 5px; \"\r\n    // --- div c botão para selecionar entre enviar ou programar e ativar/desativar comando c bot desligado\r\n    elemNode = newElem\r\n    newElem = document.createElement('div')\r\n    elemNode.append(newElem)\r\n    newElem.innerHTML = `<table class=\"vis\" style=\"width: 100%\"><tbody id=\"tbody_command\" ><tr><td><a id='program_command' style=\"cursor: pointer;\"> » Programar comando</a></td><td></td><td id=\"icon_view\" title=\"Visualizar comandos programados\" style=\"cursor: pointer\">🔎</td><td style=\"text-align: right; padding-right: 10px;\"><label title=\"Habilite esta opção se quer que Let's Go! envie comandos mesmo desligado\" for=\"config_command\" style=\"cursor: pointer;\"> Enviar comandos desligado</label></td><td style=\"text-align: center;\"><input type=\"checkbox\" id=\"config_command\" class=\"toggle\"><label for=\"config_command\" checked></label></td></tr></tbody></table>`\r\n    // --- acção ao clicar no botão toggle\r\n    const config_command = document.querySelector(\"#config_command\")\r\n    config_command.checked = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.command\r\n    config_command.addEventListener('click', () => {\r\n        config_command.checked = config_command.checked ? true : false\r\n        _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[game_data.player.id].configs.command = config_command.checked\r\n        localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n    })\r\n    // --- ao clicar no ícone lupa\r\n    const icon_view = document.querySelector( \"#icon_view\" )\r\n    icon_view.addEventListener( \"click\", viewCommands )\r\n    // --- cria tabela de tipos\r\n    elemNode = document.querySelector(\"#command-data-form\")\r\n    newElem = document.createElement('div')\r\n    elemNode.appendChild( newElem )\r\n    newElem.className = \"vis float_left\"\r\n    newElem.id = 'div_type'\r\n    newElem.style = \"margin: 4px 0 0 10px; min-width: 125px;\"\r\n    newElem.innerHTML = `<h4> Comando Tipo</h4><table class=\"vis\" style=\"width: 100%\"><tbody id=\"type_comm\"><tr class=\"row_b\"><td><input type=\"radio\" id= \"r1\" name=\"type-comm\" value=\"0\" checked><label style=\"cursor: pointer;\" for=\"r1\"> Ataque</label></td></tr><tr class=\"row_a\"><td><input type=\"radio\" id= \"r2\" name=\"type-comm\" value=\"1\"><label style=\"cursor: pointer;\" for=\"r2\"> Apoio</label></td></tr><tr class=\"row_b\"><td><input type=\"radio\" id= \"r3\" name=\"type-comm\" value=\"2\"><label style=\"cursor: pointer;\" for=\"r3\"> NT-2 Nobres</label></td></tr><tr class=\"row_a\"><td><input type=\"radio\" id= \"r4\" name=\"type-comm\" value=\"3\"><label style=\"cursor: pointer;\" for=\"r4\"> NT-3 Nobres</label></td></tr><tr class=\"row_b\"><td><input type=\"radio\" id= \"r5\" name=\"type-comm\" value=\"4\"><label style=\"cursor: pointer;\" for=\"r5\"> NT-4 Nobres</label></td></tr><tr class=\"row_a\"><td><input type=\"radio\" id= \"r6\" name=\"type-comm\" value=\"5\"><label style=\"cursor: pointer;\" for=\"r6\"> NT-5 Nobres</label></td></tr><tr class=\"row_b\"><td><input type=\"radio\" id= \"r7\" name=\"type-comm\" value=\"6\"><label style=\"cursor: pointer;\" for=\"r7\"> Snip</label></td></tr></tbody></table>`\r\n    const div_type = document.querySelector( \"#div_type\" )\r\n    div_type.setAttribute( 'hidden', true )\r\n    // --- elemento tr com as unidades\r\n    const tab_tr = document.querySelector(\"#command-data-form > table > tbody > tr\")\r\n    // --- cria um arr c os nomes das unidades do elem tr\r\n    const units_name = Array.from( tab_tr.querySelectorAll(\"input.unitsInput\") ).map((e,i,a) => e.name )\r\n    // --- cria inputs para selecionar todas as unidades\r\n    for (let i = 0; i < units_name.length; i++) {\r\n        newElem = document.createElement('input')\r\n        tab_tr.querySelectorAll( \"td.nowrap\" )[ i ].prepend(newElem )\r\n        newElem.type = \"checkbox\"\r\n        newElem.id = `all_${units_name[i]}`\r\n        newElem.title = \"Enviar Todas\"\r\n        newElem.style = \"margin: 0px\"\r\n        newElem.hidden = true\r\n    }\r\n    // --- cria array com os inputs\r\n    const all_units = Array.from(tab_tr.querySelectorAll(\"input[type='checkbox']\"))\r\n    // --- cria botão selecionar todas\r\n    const all_select = document.createElement('tr')\r\n    tab_tr.querySelectorAll( \"tbody\" )[3].appendChild( all_select )\r\n    all_select.innerHTML = `<label for=\"all_select\" title=\"Selecionar todas\"><input type=\"checkbox\" id=\"all_select\" style=\"margin-left: 3px;\"> Todas</label>`\r\n    all_select.hidden = true\r\n    // --- ao clicar no botão seleciona todas\r\n    let check_select_all = tab_tr.querySelector( \"#all_select\" )\r\n    check_select_all.addEventListener( \"click\", () => {\r\n        for (let key in all_units) {\r\n            if (Object.hasOwnProperty.call(all_units, key)) {\r\n                all_units[key].checked = check_select_all.checked == true ? true : false\r\n            }\r\n        }\r\n    })\r\n    // --- cria alvo catapulta numa 'tr' dentro das armas de cerco\r\n    elemNode = tab_tr.querySelector( \"td:nth-child(3) > table > tbody\" )\r\n    newElem = document.createElement( 'tr' )\r\n    elemNode.appendChild( newElem )\r\n    newElem.id = \"tr_build\"\r\n    newElem.hidden = true\r\n    // --- cria um array com os nomes dos edifícios traduzidos\r\n    let html = `<select name=\"target_build\" id=\"target_build\" title=\"Alvos da Catapulta\">`\r\n    for ( let key in game_data.village.buildings ) {\r\n        if ( key != 'hide') {\r\n            html += `<option value=\"${ key }\">${ _general_translator__WEBPACK_IMPORTED_MODULE_9__.trans_max_buildings[ key ].trans }</option>`\r\n        }\r\n    }\r\n    html += `</select>`\r\n    newElem.innerHTML = html\r\n    // --- elemento para mostrar alvo catapulta\r\n    const trBuild = document.querySelector( \"#tr_build\" )\r\n    document.querySelector(\"#target_build\").value = \"place\"\r\n    // --- elemento para mostrar o texto explicativo\r\n    const incon_info = document.createElement( 'div' )\r\n    document.querySelector(\"#command-form-warning\").insertAdjacentElement( 'beforebegin', incon_info )\r\n    incon_info.innerHTML = `<span class=\"icon info-small\" style=\"cursor: pointer;\"></span>`\r\n    const info_prog = document.createElement( 'div' )\r\n    incon_info.append( info_prog )\r\n    incon_info.hidden = true\r\n    info_prog.innerText = \" 1 - Insira as unidades. Para enviar 'todas as unidades' na 'hora do comando' marque a caixa de seleção na frente da unidade \\n 2 - Insira a coordenada e/ou selecione a aldeia 'Destino' \\n 3 - Selecione o Tipo de Comando \\n 4 - Insira Data e hora da Chegada ou Saída \\n 5 - Confirme o comando. \\n NOTA: Caso mande NT deixe sobrar Bárbaros e/ou Cavalaria leve para ir junto com os nobres.\"\r\n    info_prog.className = \"info_box\"\r\n    info_prog.style.color = 'green'\r\n    info_prog.hidden = true\r\n    incon_info.addEventListener( \"click\", () => info_prog.hidden = info_prog.hidden == true ? false : true )\r\n    // --- botão programar ou enviar comando\r\n    const commOnOff = document.querySelector( '#program_command' )\r\n    // --- cria atributo hidden na div dos boões\r\n    const commActions = document.querySelector(\"#command_actions\")\r\n    commActions.setAttribute( 'hidden', false )\r\n    commActions.hidden = false\r\n    // --- captura o click para coletar informações antes de submeter\r\n    const click_sender = (e) => {\r\n        if (e.target.className.indexOf( \"btn-target-action\" ) != -1) {\r\n            e.preventDefault()\r\n            partialReload()\r\n            // --- salva os ids dos  comandos da aldeia\r\n            let ids_before = []\r\n            if ( document.querySelector(\"#commands_outgoings > table.vis\") ) {\r\n                ids_before = Array.from(document.querySelector(\"#commands_outgoings > table.vis\").querySelectorAll('span.quickedit-out')).map((e)=> e.dataset.id)\r\n            }\r\n            console.log(ids_before)\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].ids_before = ids_before\r\n            localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n            document.removeEventListener( \"click\", click_sender )\r\n            e.target.click()\r\n        }    \r\n    }\r\n    document.addEventListener( \"click\", click_sender )\r\n    // --- ação quando clicar em programar comando ou enviar comando\r\n    const editCommOnOFf = () => {\r\n        if ( commOnOff.textContent == \" » Programar comando\" ) {\r\n            // --- muda o texto do botão clicado\r\n            commOnOff.textContent = \" » Enviar comando\"\r\n            // --- apagar botões\r\n            commActions.hidden = true\r\n            // --- insere o texto explicativo\r\n            incon_info.hidden = false\r\n            // --- mostra a tabela de tipos de comandos\r\n            div_type.hidden = false\r\n            // --- cria os inputs data-time e botão para confirmar\r\n            let newTr = document.createElement('tr')\r\n            newTr.innerHTML = `<td><div><select name=\"referencia\" id=\"referencia\" style=\"font-size: 9pt; cursor: pointer;\"><option value=\"0\">Chegada</option><option value=\"1\">Saída</option></select><input type=\"datetime-local\" id=\"date_time\" style=\"font-size: 9pt;font-family: Verdana,Arial; margin: 4px;\"><input id=\"btn_confirmar\" class=\"btn\" type=\"button\" value=\"Confirmar\"></div></td>`\r\n            document.querySelector(\"#command_target\").querySelector(\"tbody\").appendChild( newTr )\r\n            newTr.id = \"tr_date_time\"\r\n            // --- campo para colar hora texto\r\n            // --- incluir farm player\r\n            newTr = document.createElement('tr')\r\n            newTr.innerHTML = `<td><div style=\"text-align: -webkit-center;\"><label for=\"farm_player\" title=\"informe a cada quanto tempo deseja repetir um ataque nessa aldeia.\" class=\"farm_player\"><input type=\"time\" name=\"farm_player\" id=\"farm_player\" step=\"2\" value=\"00:00:00\" style=\"font-size: 9pt;font-family: Verdana,Arial; margin: 4px;\" class=\"farm_player\"></label><label for=\"speed_bonus\" title=\"Insira a % da soma dos bônus de velocidade da aldeia quando houver\" class=\"bonus_speed\"><input type=\"number\" max=\"100\" min=\"0\" name=\"speed_bonus\" id=\"speed_bonus\" value=\"0\" style=\"font-size: 9pt;\" class=\"bonus_speed\"> Bônus</label><label for=\"time_text\" title=\"Cole a hora e click para inserir\"><input type=\"text\" name=\"time_text\" id=\"time_text\" style=\"font-size: 9pt;font-family: Verdana,Arial; margin: 4px;\" placeholder=\"hh:mm:ss:mmm\"><input type=\"button\" id=\"insert_time\" class=\"btn\" value=\"Inserir\"></label></div></td>`\r\n            document.querySelector(\"#command_target\").querySelector(\"tbody\").appendChild( newTr )\r\n            newTr.id = \"tr_time_text\"\r\n            let time_text = document.querySelector( \"#time_text\" )\r\n            // --- se comando igual ataque - insere farm player\r\n            let farm_player = document.querySelector( \".farm_player\" )\r\n            farm_player.hidden = document.querySelector(\"#r1\").checked == true ? false : true\r\n            // --- campo bonus label\r\n            let speed_bonus = document.querySelector( \".bonus_speed\" )\r\n            // --- se comando igual a apoio ou snip aparece o input bonus\r\n            speed_bonus.hidden = document.querySelector(\"#r2\").checked == true ? false : document.querySelector(\"#r7\").checked == true ? false : true\r\n            // --- listener no type comm // ---> incluir farm player\r\n            document.querySelector(\"#type_comm\").addEventListener(\"click\", (e) => {\r\n                speed_bonus.hidden = document.querySelector(\"#r2\").checked == true ? false : document.querySelector(\"#r7\").checked == true ? false : true \r\n                farm_player.hidden = document.querySelector(\"#r1\").checked == true ? false : true\r\n            })\r\n            // --- valor inicial data e hora é o de agora\r\n            let date_time = document.querySelector( \"#date_time\" )\r\n            date_time.value = new Date( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) ).toISOString().replace(\"Z\",\"\")\r\n            // --- clicando no botão submetar hora\r\n            document.querySelector( \"#insert_time\" ).addEventListener(\"click\", () => {\r\n                if ( time_text.value == \"\" ) {\r\n                    (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.error_box)( \"O campo está vazio... Noob!\", 5000 )\r\n                } else if ( time_text.value.trim().match(/[0-9]{2}[:][0-9]{2}[:][0-9]{2}[:][0-9]{3}$/ig) == null ) {\r\n                    (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.error_box)( \"Formato invalido! Insira a hora no formato 'hh:mm:ss:mmm'.\", 8000 )\r\n                } else {\r\n                    date_time.value = new Date( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), time_text.value.trim(), time_text.value.trim().match(/[0-9]{3}$/ig)[0] )).toISOString().replace(\"Z\",\"\")\r\n                }\r\n            })\r\n            // --- clicando no botão 'Confirmar'\r\n            document.querySelector(\"#btn_confirmar\").addEventListener( \"click\", save_command )\r\n            // --- mostra intut para inserir todas as unidades\r\n            all_units.map(( e, i, a ) => e.hidden = false )\r\n            all_select.hidden = false\r\n            // --- mostra alvo catapulta\r\n            trBuild.hidden = false\r\n            // --- remove oo listner do click\r\n            document.removeEventListener( \"click\", click_sender )\r\n        } else {\r\n            // --- muda o texto do botão clicado\r\n            commOnOff.textContent = \" » Programar comando\"\r\n            // --- apaga o ele com horários\r\n            document.querySelector( '#tr_date_time' ).remove()\r\n            document.querySelector( \"#tr_time_text\" ).remove()\r\n            // --- mostra botões\r\n            commActions.hidden = false\r\n            // --- some c texto explicativo\r\n            incon_info.hidden = true\r\n            // --- some c a tabela de tipos\r\n            div_type.hidden = true\r\n            // --- some c input\r\n            all_units.map(( e, i, a ) => e.hidden = true )\r\n            all_select.hidden = true\r\n            // --- some c alvo catapulta\r\n            trBuild.hidden = true\r\n            // --- captura o click para coletar informações antes de submeter\r\n            document.addEventListener( \"click\", click_sender )\r\n        }\r\n    }\r\n    // --- ao clicar no botão programar ou enviar\r\n    commOnOff.addEventListener('click', editCommOnOFf)\r\n    const save_command = () => {\r\n        // --- verifica se teve aldeia digitada e selecionada\r\n        let target_name = document.querySelector(\"#place_target span.village-name\")\r\n        let target_input = document.querySelector(\"#place_target > input\")\r\n        if ( !target_name && target_input.value == \"\" ) {\r\n            (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.error_box)( \"Insira e selecione a Aldeia Alvo para confirmar! Mané!\", 5000 )\r\n        } else if ( !target_name && target_input.value != \"\" ) {\r\n            (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.error_box)( \"Selecione a Aldeia alvo para confirmar!\", 5000 )\r\n        // --- se a aldeia está corretamente inserida\r\n        } else {\r\n            // --- arr com tipos de comandos\r\n            let type_comm = [ 'Ataque', 'Apoio', 'NT-2 Nobres', 'NT-3 Nobres', 'NT-4 Nobres', 'NT-5 Nobres' , 'Snip' ]\r\n            // --- retorna o indíce do comando selecionado\r\n            let ind = Array.from(div_type.querySelectorAll('input')).map(( e, i, a ) => {\r\n                if ( e.checked ) return true\r\n                else return false\r\n            }).indexOf( true )\r\n            // -- preenche arr com unidades ou true para todas\r\n            let units_value = Array.from( tab_tr.querySelectorAll(\"input.unitsInput\") ).map(( e, i, a ) => Number( e.value ) )\r\n            // --- villas\r\n            let village = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[game_data.player.id].villages[game_data.village.id]\r\n            // --- limite de fake\r\n            let limit_fake = parseInt( Number( game_data.village.points ) * ( Number( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.fake_limit ) / 100 ) )\r\n            // --- unidades\r\n            let units = village.units\r\n            // --- verifica se tem unidades preenchidas\r\n            let check = false\r\n            // --- soma unidades para comparar com limite de fake\r\n            let total = 0\r\n            // --- unidade mais lenta\r\n            let unit_slow = \"\"\r\n            // --- cria um obj template\r\n            let objUnits = {}\r\n            for ( let i = 0; i < units_name.length; i++ ) {\r\n                console.log( all_units[ i ].id, all_units[ i ].checked )\r\n                // --- quando marcou a opção de enviar todas unidades\r\n                if ( all_units[ i ].checked ) {\r\n                    console.log( units[ units_name[ i ] ] )\r\n                    objUnits[ units_name[ i ] ] = \"all\"\r\n                    check = true\r\n                    // --- quando a aldeia tem essa unidade pesquisada\r\n                    if ( units_name[ i ] == \"snob\") {\r\n                        total += 100\r\n                    } else if ( units[ units_name[ i ] ] ) {\r\n                        console.log( objUnits[ units_name[ i ] ] )\r\n                        // --- só soma a pop se tem unidades recrutadas\r\n                        if ( units[ units_name[ i ] ].amount[ 1 ] > 0 ) {\r\n                            total += Number( units[ units_name[ i ] ].amount[1] ) * Number( units[ units_name[ i ] ].pop )\r\n                        }\r\n                    }\r\n                // --- quando NÃO marcou a opção de enviar todas as unidades\r\n                } else {\r\n                    if ( Number( units_value[ i ] ) > 0 ) check = true\r\n                    if ( units_name[ i ] == \"snob\") total += 100 * Number( units_value[ i ] )\r\n                    if ( units[ units_name[ i ] ] ) total += Number( units[ units_name[ i ] ].pop ) * Number( units_value[ i ] )\r\n                    objUnits[ units_name[ i ] ] = Number( units_value[ i ] )\r\n                }\r\n                console.log( 'check: ' + check )\r\n                console.log( 'Total: ' + total )\r\n                // --- retorna a unidade mais lenta no ataque e se apoio retorna paladino, quando selecionado( base de cálculo do tempo de viagem )\r\n                if ( objUnits[ units_name[ i ] ] > 0 || all_units[ i ].checked ) {\r\n                    // --- retorna a primeira unidade quando não tem nenhuma selecionada ainda\r\n                    if ( unit_slow == \"\" ) {\r\n                        unit_slow = units_name[ i ]\r\n                    // --- caso já tenha selecionado uma unidade\r\n                    } else {\r\n                        // --- quando é apoio e unidade mais lenta não é paladino\r\n                        if ( ( ind == 1 || ind == 6 ) && unit_slow != \"knight\" ) {\r\n                            // --- se for paladino seleciona paladino\r\n                            if ( units_name[ i ] == \"knight\" ) {\r\n                                unit_slow = \"knight\"\r\n                            // --- caso contrário seleciona a unidade mais lenta\r\n                            } else {\r\n                                if ( baseUnitSpeed2[ unit_slow ] < baseUnitSpeed2[ units_name[ i ] ] ) unit_slow = units_name[ i ]\r\n                            }\r\n                        // --- quando não é apoio seleciona unidade mais lenta\r\n                        } else if ( ind != 1 && ind != 6 ) {\r\n                            if ( baseUnitSpeed2[ unit_slow ] < baseUnitSpeed2[ units_name[ i ] ] ) unit_slow = units_name[ i ]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // --- verificando se são só exploradores e qual a quantidade deles\r\n            let unit = \"spy\"\r\n            let un = 0\r\n            for (const key in objUnits) {\r\n                if (Object.hasOwnProperty.call(objUnits, key)) {\r\n                    if ( objUnits[ key ] == \"all\" && key != \"spy\" && units[ key ] ) unit = key\r\n                    if ( objUnits[ key ] == \"all\" && key == \"spy\" && units[ key ] ) un = units[ key ].amount[ 1 ] || 0\r\n                    if ( objUnits[ key ] > 0 && key != \"spy\" ) unit = key\r\n                    if ( objUnits[ key ] > 0 && key == \"spy\" ) un = objUnits[ key ]\r\n                }\r\n            }\r\n            // -- se não tem unidades selecionadas\r\n            if ( !check ) {\r\n                (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.error_box)( `Por favor, selecione as unidades antes de confirmar! Noob!`, 5000 )\r\n            // --- se as unidades são menores que o limite de fake do mundo\r\n            } else if ( unit != \"spy\" && (( total < limit_fake && ( ind != 1 && ind != 6 ) ) && document.querySelector(\"#place_target > div > span.village-info\").textContent.split(' ')[1] != 'Bárbaros') ) {\r\n                (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.error_box)( `Limite de ataques falsos é ${limit_fake}, vc selecionou ${total} unidades, selecione a quantidade correta!`, 5000 )\r\n            } else if ( unit == \"spy\" && ( ( un < 5 && ( ind != 1 && ind != 6 ) ) && document.querySelector(\"#place_target > div > span.village-info\").textContent.split(' ')[1] != 'Bárbaros') ) {\r\n                (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.error_box)( `O mínimo que vc pode enviar para atacar um jogador são 5 exploradores!`, 5000 )\r\n            // --- término das checagens\r\n            } else {\r\n                // --- captura as coordenadas x e y do alvo (target) e seu id\r\n                let coord = target_name.innerText.match(/\\d+\\|\\d+/ig)\r\n                coord = coord[ coord.length - 1 ]\r\n                let e_target = coord.split('|')\r\n                e_target.push( self.location.search.split('target=')[1].match(/[0-9]{1,}$/ig) )\r\n                // --- verifica se a coord alvo é diferente da coord origem\r\n                if ( coord == game_data.village.coord ) {\r\n                    (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.error_box)( `Está de brincadeira... a aldeia alvo é igual a origem! Preencha a coordenada correta!`, 5000 )\r\n                } else {\r\n                    // --- calcula distância\r\n                    let distance = getDistance( coord, game_data.village.coord )\r\n                    // --- transforma ms em string com len 3\r\n                    let ms = new Date( date_time.value ).getMilliseconds()\r\n                    if ( ms < 100 ) {\r\n                        ms = '0' + ms\r\n                        if ( ms < 10 ) ms = '0' + ms\r\n                    }\r\n                    // --- retorna o alvo da catapulta selecionado\r\n                    let targetBuild = document.querySelector(\"#target_build\").value\r\n                    // --- retorna o tempo de viagem em segundos\r\n                    let travel = getTravelTimeInSecond( distance, unit_slow, baseUnitSpeed2 )\r\n                    console.log( travel )\r\n                    // --- aplicar bonus de velocidade de apoios\r\n                    let travel_bonus = Number( document.querySelector(\"#speed_bonus\").value )\r\n                    if ( travel_bonus != 0 ) {\r\n                        travel = Math.round( travel * ( 1 / ( 1 + ( travel_bonus / 100 ) ) ) )\r\n                    }\r\n                    // --- retorna um array com ( data, hora, ms )\r\n                    let arrDateTimeMs = new Date( date_time.value ).toLocaleString().split(\" \")\r\n                    arrDateTimeMs.push( ms )\r\n                    // --- retorna data e hora de saída e chegada --- criar uma função\r\n                    let ndateTimeArrival, nDateTimeExit\r\n                    console.log( arrDateTimeMs )\r\n                    if ( document.querySelector(\"#referencia\").selectedIndex == 0 ) {  //---chegada\r\n                        ndateTimeArrival = (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( arrDateTimeMs[0], arrDateTimeMs[1] )\r\n                        nDateTimeExit = ndateTimeArrival - ( travel * 1000 )\r\n                    } else {\r\n                        nDateTimeExit = (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( arrDateTimeMs[0], arrDateTimeMs[1] )\r\n                        ndateTimeArrival = nDateTimeExit + ( travel * 1000 )\r\n                    }\r\n                    console.log( `Chegada: ${ ndateTimeArrival } ms` )\r\n                    console.log( `Saída: ${ nDateTimeExit } ms` )\r\n                    // --- farm player\r\n                    let farm_player = document.querySelector(\"#farm_player\").value\r\n                    // --- verifica se a hora de enviar já passou\r\n                    if ( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)()) > nDateTimeExit ) {\r\n                        (0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.error_box)( 'O comando já passou do horário de enviar! Se ferrou!', 5000 )\r\n                    // --- proximo passo: salvar na programação\r\n                    } else {\r\n                        // fazer o próprio savar programação resolver eventos e comandos no mesmo horário\r\n                        (0,_schedules__WEBPACK_IMPORTED_MODULE_8__.saveSchedules)( nDateTimeExit, game_data.village.id, game_data.screen,  \"command\", ms, e_target, farm_player != \"00:00:00\" ? 7 : ind, objUnits, targetBuild, travel, farm_player )\r\n                        // --- refaz a div aonde apresenta os comandos, salva o hide para mostrar ou não\r\n                        let view_command = document.querySelector( \"#view_command\" )\r\n                        if ( view_command != undefined ) {\r\n                            let hide = view_command.style.display == \"none\" ? true : false\r\n                            view_command.remove()\r\n                            viewCommands( hide )\r\n                        }\r\n                        // --- avaliar sucesso??\r\n                        UI.SuccessMessage( \"Comando Agendado com sucesso!!\", \r\n                        1000 )\r\n                        run_schedule()\r\n                    }\r\n                    // --- mostra tudo no console para avaliação\r\n                    console.log( `Data da Saída: ${ new Date( nDateTimeExit ).toLocaleDateString() }` )\r\n                    console.log( `Hora da Saída: ${ new Date( nDateTimeExit ).toLocaleTimeString() }` )\r\n                    console.log( `Data da chegada: ${ new Date( ndateTimeArrival ).toLocaleDateString() }` )\r\n                    console.log( `hora da chegada: ${ new Date( ndateTimeArrival ).toLocaleTimeString() }`)\r\n                    console.log( `ms: ${ ms }` )\r\n                    console.log( `Aldeia Atacante: ${ game_data.village.name } , id: ${ game_data.village.id }, coord: ${ game_data.village.coord }` )\r\n                    console.log( `Screen: ${ game_data.screen }` )\r\n                    console.log( `Alvo Catapulta: ${ targetBuild }` )\r\n                    console.log( `Target: ${ coord, e_target }` )\r\n                    console.log( `Tipo: ${ farm_player != \"00:00:00\" ? \"Farm Player\" : type_comm[ ind ] }` )\r\n                    console.log( 'Template' )\r\n                    console.table( objUnits )\r\n                    console.log( `Status: 0` )\r\n                    console.log( `Unidade base: ${ unit_slow }` )\r\n                    console.log( `Distância: ${ ( distance.toFixed(2) ) } campos` )\r\n                    console.log( `Tempo de Viagem: ${ (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nSegStrHora)( travel ) }` )\r\n                    return\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// --- validação da versão\r\nif ( !(0,_general_version__WEBPACK_IMPORTED_MODULE_0__.returnVersion)() ) {\r\n    alert(\" Que pena!!! Essa versão do Let's Go! expirou... Entre em contato com o fornecedor do APP para receber atualização. Obrigado pela preferência! \")\r\n} else {\r\n    console.time( 'Init time' )\r\n    // --- configurações na visualização geral - interface\r\n    if ( game_data.screen == 'overview' ) jig_overview()\r\n    // --- recrutamento - interface\r\n    if ( game_data.screen == 'train' && game_data.mode != 'mass' ) jig_train()\r\n    // --- configurações - interface\r\n    settings_go()\r\n    // --- cria menu e status - interface\r\n    ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.jig_status)()\r\n    // ---\r\n    ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_5__.toggleOnOff)()\r\n    // ---\r\n    jig_over_villages()\r\n    // --- verifiva quando carregamento foi terminado\r\n    if ( document.readyState === \"loading\" ) {\r\n    \r\n        document.addEventListener( \"DOMContentLoaded\", doSomething )\r\n    \r\n    // DOMContentLoaded foi disparado\r\n    } else {\r\n    \r\n        doSomething()\r\n    \r\n    }    \r\n}\r\n\n\n//# sourceURL=webpack://newproject/./TwProjectBot.js?");

/***/ }),

/***/ "./requests.js":
/*!*********************!*\
  !*** ./requests.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fetch_players\": () => (/* binding */ fetch_players),\n/* harmony export */   \"fetch_scavenge\": () => (/* binding */ fetch_scavenge),\n/* harmony export */   \"fetch_units_not_premium\": () => (/* binding */ fetch_units_not_premium),\n/* harmony export */   \"fetch_world_config\": () => (/* binding */ fetch_world_config),\n/* harmony export */   \"getRequest\": () => (/* binding */ getRequest)\n/* harmony export */ });\n/* harmony import */ var _Train_train_export__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Train/train_export */ \"../Train/train_export.js\");\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n\r\n\r\n\r\n/**\r\n * Uso Request\r\n * retorna promise com responseText do objeto url passado\r\n * \r\n * @param {String} link \r\n * @param {String} screen_request \r\n * @returns \r\n */\r\nasync function getRequest( link, screen_request ) {\r\n    let url = `https://${window.location.host}${link}${screen_request}&h=${ csrf_token }&client_time=${ Math.round( Timing.getCurrentServerTime() / 1e3 ) }`\r\n    let resposta = await fetch( url )\r\n    console.log( 'Requisition status: ' + resposta.status )\r\n    if ( resposta.status != 200 ) return Error\r\n    return resposta.text()\r\n}\r\n\r\n/**\r\n * Uso Request\r\n * Retorna se o mundo tem scavenge\r\n */\r\nasync function fetch_scavenge() {\r\n    if ( !localStorage.scav_active ) {\r\n        localStorage.setItem( 'scave_active', false )\r\n        await getRequest(_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia, 'place').then( data => {\r\n            if ( data == Error ) return console.log( 'Request not fulfilled!' )\r\n            let place_html = new DOMParser().parseFromString( data, 'text/html')\r\n            let elem = Array.from( place_html.querySelectorAll( \"#content_value table.vis.modemenu tbody tr a\" ) )\r\n            localStorage.setItem( 'scav_active', elem.map( ( e, i, a ) => e.href.indexOf( 'scavenge' ) !== -1 ).includes( true ) )\r\n        })\r\n    }    \r\n}\r\n\r\n/**\r\n * Uso Request\r\n * Retorna configurações do mundo\r\n */\r\nasync function fetch_world_config() {\r\n    if ( !localStorage.world_speed || !localStorage.units_speed || !localStorage.world_delay || !localStorage.loyalty_per_hour || !localStorage.fake_limit || !localStorage.world_tech \r\n        ) {\r\n        await fetch('/interface.php?func=get_config').then((response) => {\r\n            return response.blob()\r\n        }).then((blob) => {\r\n            return blob.text()\r\n        }).then((text) => {\r\n            return new DOMParser().parseFromString(text, \"text/xml\")\r\n        }).then((xml) => {\r\n            const units_speed = Number( xml.querySelector('unit_speed').textContent )\r\n            const world_speed = Number( xml.querySelector('speed').textContent )\r\n            const world_delay = Number( xml.querySelector('delay').textContent )\r\n            const fake_limit  = Number( xml.querySelector('fake_limit').textContent )\r\n            const world_tech = Number( xml.querySelector('tech').textContent )\r\n            const loyalty_per_hour = world_speed\r\n            localStorage.setItem( 'world_speed', world_speed )\r\n            localStorage.setItem( 'units_speed', units_speed )\r\n            localStorage.setItem( 'loyalty_per_hour', loyalty_per_hour )\r\n            localStorage.setItem( 'world_delay', world_delay )\r\n            localStorage.setItem( 'fake_limit', fake_limit )\r\n            localStorage.setItem( 'world_tech', world_tech ) // 2 - simples; 1 - pesquisa por nível\r\n        })\r\n    }    \r\n}\r\n\r\n/**\r\n * Uso Request\r\n * Atualiza busca informações da visualização produções e atualiza o objeto players\r\n */\r\nasync function fetch_players() {\r\n    await getRequest( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia, 'overview_villages&mode=prod&group=0' ).then( data => {\r\n        if ( data == Error ) return console.log( 'Request not fulfilled!' )\r\n        let prod_html = new DOMParser().parseFromString( data, 'text/html')\r\n        let ids = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( 'span.quickedit-vn' ) ).map( ( e, i, a ) => e.dataset.id  )\r\n        let coord = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( 'span.quickedit-vn' ) ).map( ( e, i, a ) => e.innerText.match(/\\d+\\|\\d+/ig) ) \r\n        let name = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( \"span.quickedit-label\" ) ).map( ( e, i, a ) => e.innerText.trim())\r\n        let pp = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.premium_active\r\n        let rec = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( (`td:nth-child(${ pp ? 4 : 3 })`) ) ).map( ( e, i, a ) => e.innerText.split(' ') )\r\n        let pop = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( (`td:nth-child(${ pp ? 7 : 5 })`) ) ).map( ( e, i, a ) => e.innerText.split('/') )\r\n        let stor = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( (`td:nth-child(${ pp ? 5 : 4 })`) ) ).map( ( e, i, a ) => e.innerText )\r\n        _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villageIDs = ids\r\n        // --- se não tem salva o id no obj\r\n        for ( let i = 0; i < ids.length; i++ ) {\r\n            if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]] ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]] = {}\r\n            // --- salva os dados da aldeia atual no obj\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].coord = coord[i][ coord[i].length - 1 ]\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].display_name = name[i]\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].pop_max = pop[i][1]\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].pop = pop[i][0]\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].wood = rec[i][0]\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].stone = rec[i][1]\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].iron = rec[i][2]\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].storage = stor[i]\r\n            if( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].modelo ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].modelo = {}\r\n            if( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].farm == undefined ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].farm = true\r\n            if( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].scav == undefined ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].scav = true\r\n            if( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].train == undefined ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].train = true\r\n            if( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].main == undefined ) _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ids[i]].main = true\r\n        }\r\n        // --- salvando os edificios da aldeia atual\r\n        _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ game_data.village.id ].build = game_data.village.buildings\r\n        // --- salva o obj\r\n        localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n    } )\r\n    const villages = await _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages\r\n    let ids = await _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villageIDs\r\n    // --- elimina aldeia nobladas do objeto\r\n    for (const key in await villages) {\r\n        if (Object.hasOwnProperty.call(villages, key)) {\r\n            if ( ids.indexOf( key ) == -1 ) delete await villages[ key ]\r\n        }\r\n    }\r\n    _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages = await villages\r\n    // --- retorna as unidades de todas as vilas\r\n    for ( const key in await villages ) {\r\n        if ( Object.hasOwnProperty.call( villages, key ) ) {\r\n            if ( !villages[ key ].units || villages[ key ].units == {} ) await fetch_units_not_premium( key )\r\n        }\r\n    }\r\n    // --- somente informações no console\r\n    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.n_loop == 0 ) {\r\n        let audio = document.createElement('audio')\r\n        document.querySelector('tbody').append(audio)\r\n        audio.src = 'https://www.vemtranquilo.host/VT/sonsdosbots/introducãoaobotbonner.mp3'\r\n        //audio.play()\r\n    }\r\n    _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.n_loop = Number( await _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.n_loop ) + 1\r\n    \r\n    localStorage.setItem( 'players', JSON.stringify( await _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players ) )\r\n    console.log( `Let's Go!!\\nCount: ${ Number( await _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].configs.n_loop ) } loop's` )\r\n    console.table( await _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages, [ 'coord', 'farm', 'scav', 'train', 'main' ] )\r\n}\r\n\r\n/**\r\n * Uso Request\r\n * Busca informações do recrutamento da aldeia informada\r\n * @param {String} key - Id da aldeia\r\n */\r\nasync function fetch_units_not_premium( key ) {\r\n    await getRequest( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( key, '' ), \"train\" ).then( data => {\r\n        if ( data == Error ) return console.log( 'Request not fulfilled!' )\r\n        let html = new DOMParser().parseFromString( data, 'text/html')\r\n        _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.players[ game_data.player.id ].villages[ key ].units = (0,_Train_train_export__WEBPACK_IMPORTED_MODULE_0__.obj_train_units)( html )\r\n    })\r\n}\n\n//# sourceURL=webpack://newproject/./requests.js?");

/***/ }),

/***/ "./schedules.js":
/*!**********************!*\
  !*** ./schedules.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"saveSchedules\": () => (/* binding */ saveSchedules)\n/* harmony export */ });\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n\r\n\r\nconst saveSchedules = ( n_DH, villageID, screen, mode = null, ms = '000', target = null, type = null, template = {}, build = null, travel = null, repeat ) => {\r\n    let schedules = {}\r\n    schedules = _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].schedules\r\n    // --- n_DH é o número da data+hora do evento\r\n    // --- antecipando o gatilho de acordo com o screen\r\n    let n_unset = ( screen == 'main' ? n_DH - ( 170 * 1000 ) : screen == 'place' ? n_DH - ( 30 * 1000 ) : n_DH )\r\n    if ( schedules[ n_unset ] ) {\r\n        if ( schedules[ n_unset ].screen == screen && schedules[ n_unset ].villageID == villageID ) {\r\n            console.log('There is already a schedules for this event.')\r\n            return null\r\n        }\r\n    }\r\n    // --- verificação dos ids\r\n    let id_sch = Number( Object.keys( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].schedules ).sort() )\r\n    // correção do scavenge\r\n    if ( screen == 'place&mode=scavenge&' ) screen = 'place&mode=scavenge'\r\n    schedules[ n_unset ] = {\r\n        date: new Date( Number( n_DH ) ).toLocaleString().split(' ')[0],\r\n        time: new Date( Number( n_DH ) ).toLocaleString().split(' ')[1],\r\n        ms: ms,\r\n        villageID: villageID,\r\n        screen: screen,\r\n        build: build,\r\n        mode: mode,\r\n        target: target,\r\n        type: type,\r\n        template: template,\r\n        travel: travel,\r\n        repeat: repeat,\r\n        status: 0\r\n    }\r\n    _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].schedules = schedules\r\n    localStorage.setItem( \"players\", JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players ) )\r\n    console.log( 'Event saved in the schedules!' )\r\n    return n_unset\r\n}\n\n//# sourceURL=webpack://newproject/./schedules.js?");

/***/ }),

/***/ "../Main/main-export.js":
/*!******************************!*\
  !*** ../Main/main-export.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"popupQuest\": () => (/* binding */ popupQuest),\n/* harmony export */   \"questCompleteClick\": () => (/* binding */ questCompleteClick)\n/* harmony export */ });\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n\r\n\r\nconst storageRewards = () => document.querySelector(\"#main-tab section.quest-reward-summary\")\r\n? document.querySelector(\"#main-tab section.quest-reward-summary\").querySelector(\"img\") \r\n? document.querySelector(\"#main-tab section.quest-reward-summary\").querySelector(\"img\").src.indexOf(\"storage3\") != -1 \r\n? true : false : false : false\r\n\r\nconst btnQuestComplete = () => document.querySelector(\"#main-tab div.btn.btn-confirm-yes.status-btn.quest-complete-btn\") ? document.querySelector(\"#main-tab div.btn.btn-confirm-yes.status-btn.quest-complete-btn\") : false\r\n\r\nconst btnsConfirmYes = () => Array.from(document.querySelectorAll(\"a.btn-confirm-yes\"))\r\n\r\nconst popupQuest = () => document.querySelector(\"#popup_box_quest > div\") \r\n? document.querySelector(\"#popup_box_quest > div\") : false\r\n\r\nasync function questCompleteClick() {\r\n    if ( popupQuest() ) {\r\n        console.log( \"questCompleteClick...\" )\r\n        if ( !storageRewards() && btnQuestComplete() ) {\r\n            btnQuestComplete().click()\r\n            return\r\n        }\r\n        if ( storageRewards() || !btnQuestComplete() ) openRewards()\r\n    }\r\n}\r\nasync function openRewards(t = 1) {\r\n    if ( game_data.screen != \"main\" ) t = 12\r\n    await (0,_general_util__WEBPACK_IMPORTED_MODULE_0__.sleep)(t)\r\n    if ( btnsConfirmYes().length > 0 ) {\r\n        const btnRewards = Array.from( document.querySelectorAll( \"a.tab-link\" ) ).find( ( e, i, a ) => e.dataset.tab == \"reward-tab\" )\r\n        btnRewards.click()\r\n        await handleRewards()\r\n    } else {\r\n        if ( popupQuest() ) await closePopup()\r\n    }\r\n}\r\nasync function closePopup() {\r\n    const intClose = setInterval(() => {\r\n        console.log( \"closePopUp...\" )\r\n        if ( btnsConfirmYes().length == 0 ) {\r\n            clearInterval(intClose)\r\n            if (document.querySelector(\"a.popup_box_close\")) document.querySelector(\"a.popup_box_close\").click()\r\n        }\r\n    }, 333 )\r\n}\r\nasync function btnYesClick( btn ) {\r\n    setTimeout(() => {\r\n        btn.click()\r\n    }, (0,_general_util__WEBPACK_IMPORTED_MODULE_0__.setMillis)( 255 ) );\r\n}\r\nasync function handleRewards() {\r\n    const rowsRewards =  Array.from( document.querySelector(\"#reward-system-rewards\").querySelectorAll('tr') )\r\n    console.log( \"handleRewards...\" )\r\n    let btn_yes, btns = btnsConfirmYes()\r\n    for ( let i = rowsRewards.length -1; i >= 0; i-- ) {\r\n        if ( btns.length > 0 ) {\r\n            if ( !btns[1].attributes.disabled ) {\r\n                btn_yes = btns[1]\r\n            } else {\r\n                if ( btns[0] ) {\r\n                    btn_yes = btns[0]\r\n                }\r\n            }\r\n            console.log( \"btnYesClick...\", rowsRewards.length - i )\r\n            await btnYesClick( btn_yes )\r\n        }\r\n    }\r\n    if ( popupQuest() ) await closePopup()\r\n}\r\n\n\n//# sourceURL=webpack://newproject/../Main/main-export.js?");

/***/ }),

/***/ "../Train/train_export.js":
/*!********************************!*\
  !*** ../Train/train_export.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"obj_train_units\": () => (/* binding */ obj_train_units)\n/* harmony export */ });\n/**\r\n * @param {html} html\r\n * @returns Object - todas as informações do recrutamento\r\n */\r\nconst obj_train_units = ( html = document ) => {\r\n    if ( !html.querySelector( \"#train_form\" ) ) return {}\r\n    let rows = Array.from( html.querySelector( \"#train_form\" ).querySelectorAll( 'tr' ) )\r\n    let unit, wood, stone, iron, pop, time, amount, max, units = {}\r\n    for ( let i = 1; i < rows.length - 1; i++ ) {\r\n        let cols = Array.from( rows[ i ].querySelectorAll( 'td' ) )\r\n        unit = cols[ 0 ].querySelector( 'a' ).dataset.unit\r\n        wood = Number( cols[ 1 ].querySelector(`#${ unit }_0_cost_wood`).textContent )\r\n        stone = Number( cols[ 1 ].querySelector(`#${ unit }_0_cost_stone`).textContent )\r\n        iron = Number( cols[ 1 ].querySelector(`#${ unit }_0_cost_iron`).textContent )\r\n        pop = Number( cols[ 1 ].querySelector(`#${ unit }_0_cost_pop`).textContent )\r\n        time = cols[ 1 ].querySelector(`#${ unit }_0_cost_time`).textContent\r\n        amount = cols[ 2 ].textContent.split('/')\r\n        max = Number( cols[ 3 ].querySelector( `#${ unit }_0_a` ).textContent.replace( '(', '' ).replace( ')', '' ) )\r\n        units[ unit ] = { wood: wood, stone: stone, iron: iron, pop: pop, time: time, amount: amount, max: max }\r\n    }\r\n    return units\r\n}\n\n//# sourceURL=webpack://newproject/../Train/train_export.js?");

/***/ }),

/***/ "../general/init_login.js":
/*!********************************!*\
  !*** ../general/init_login.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"right_login_wrap\": () => (/* binding */ right_login_wrap),\n/* harmony export */   \"user_name\": () => (/* binding */ user_name)\n/* harmony export */ });\nconst right_login_wrap = !document.querySelector( \"#home div.right.login div.wrap\" ) ? false : document.querySelector( \"#home div.right.login div.wrap\" )\r\nconst user_name = !right_login_wrap ? false : right_login_wrap.querySelector(\"h2\").innerText == \"Login\" ? false : right_login_wrap.querySelector(\"h2\").innerText.split(\" \")[1]\r\n\n\n//# sourceURL=webpack://newproject/../general/init_login.js?");

/***/ }),

/***/ "../general/init_tw.js":
/*!*****************************!*\
  !*** ../general/init_tw.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cansed\": () => (/* binding */ cansed),\n/* harmony export */   \"dateServer\": () => (/* binding */ dateServer),\n/* harmony export */   \"fake_limit\": () => (/* binding */ fake_limit),\n/* harmony export */   \"farm_active\": () => (/* binding */ farm_active),\n/* harmony export */   \"link_ir_aldeia\": () => (/* binding */ link_ir_aldeia),\n/* harmony export */   \"link_mesma_aldeia\": () => (/* binding */ link_mesma_aldeia),\n/* harmony export */   \"link_troca_aldeia\": () => (/* binding */ link_troca_aldeia),\n/* harmony export */   \"loyalty_per_hour\": () => (/* binding */ loyalty_per_hour),\n/* harmony export */   \"mdf\": () => (/* binding */ mdf),\n/* harmony export */   \"n_aldeias\": () => (/* binding */ n_aldeias),\n/* harmony export */   \"players\": () => (/* binding */ players),\n/* harmony export */   \"premium_active\": () => (/* binding */ premium_active),\n/* harmony export */   \"scav_active\": () => (/* binding */ scav_active),\n/* harmony export */   \"screen_atual\": () => (/* binding */ screen_atual),\n/* harmony export */   \"screens\": () => (/* binding */ screens),\n/* harmony export */   \"timeServer\": () => (/* binding */ timeServer),\n/* harmony export */   \"timeZone\": () => (/* binding */ timeZone),\n/* harmony export */   \"type_comm\": () => (/* binding */ type_comm),\n/* harmony export */   \"units_speed\": () => (/* binding */ units_speed),\n/* harmony export */   \"verConnection\": () => (/* binding */ verConnection),\n/* harmony export */   \"verifyCurrentScreen\": () => (/* binding */ verifyCurrentScreen),\n/* harmony export */   \"world_delay\": () => (/* binding */ world_delay),\n/* harmony export */   \"world_speed\": () => (/* binding */ world_speed),\n/* harmony export */   \"world_tech\": () => (/* binding */ world_tech)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"../general/util.js\");\n/**\r\n * Inicialização de diversas constantes globais do projeto\r\n**/\r\n\r\n\r\n\r\n// --- retorna data do servidor - pagina\r\nconst dateServer = () => document.querySelector(\"#serverDate\").textContent\r\n\r\n// --- retorna hora do servidor - página\r\nconst timeServer = () => document.querySelector(\"#serverTime\").textContent\r\n\r\n// --- retorna diferença em segundos entre a data e hora do servidor e do sistema\r\nconst timeZone = () => Math.round( ( (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( dateServer(), timeServer() ) - Date.now() ) / 1000 ) + 1\r\n\r\n// --- retorna se está connectado ou não no jogo\r\nconst verConnection = typeof( game_data ) == undefined || !document.querySelector(\"#topContainer\") ? false : true\r\n\r\n// --- se pagina ou aba em foco\r\nconst cansed = false\r\n\r\n// --- conta premium ativa\r\nconst premium_active = game_data.features.Premium.active\r\n\r\n// --- numero de aldeias\r\nconst n_aldeias = game_data.player.villages\r\n\r\n// --- farm ativo\r\nconst farm_active = game_data.features.FarmAssistent.active\r\n\r\n// --- player em MDF\r\nconst mdf = window.location.search.indexOf( 't=' ) == -1 ? '' : window.location.search.substring( window.location.search.indexOf( 't=' ), window.location.search.indexOf( '&' ) )\r\n\r\n// --- link para troca de screen e aldeia\r\nconst link_troca_aldeia = `/game.php?${mdf}&village=n${game_data.village.id}&screen=`\r\n\r\n// --- link para troca de screen na mesma aldeia\r\nconst link_mesma_aldeia = `/game.php?${mdf}&village=${game_data.village.id}&screen=`\r\n\r\n// --- link ir aldeia e screen informados\r\nconst link_ir_aldeia = ( village_id, screen ) => `/game.php?${mdf}&village=${ village_id }&screen=${screen}`\r\n\r\n// --- screen atual\r\nconst screen_atual = location.href.substring( location.href.indexOf( 'screen' ) + 7 )\r\nconst verifyCurrentScreen = screen => window.self.location.search.indexOf( screen ) != -1\r\n\r\n// --- tipos de commandos\r\nconst type_comm = [ \"Ataque\", \"Apoio\", \"NT-2 Nobres\", \"NT-3 Nobres\", \"NT-4 Nobres\", \"NT-5 Nobres\", \"Snip\", \"Farm Player\" ]\r\n\r\n// --- scavenge\r\nconst scav_active = localStorage.scav_active == undefined ? false : localStorage.scav_active == 'true' ? true : false\r\n\r\n// --- screns aonde irá rodar programações\r\nconst screens = [ \"am_farm\", \"main\", \"train\", \"place&mode=scavenge\" ]\r\n\r\n// -------------------------- configurações do mundo -----------------------------\r\n\r\n// --- velocidade do mundo\r\nconst world_speed = !localStorage.world_speed ? 0 : Number( localStorage.world_speed )\r\n\r\n// --- velocidade das unidades\r\nconst units_speed = !localStorage.units_speed ? 0 : Number( localStorage.units_speed )\r\n\r\n// --- delay do mundo\r\nconst world_delay = !localStorage.world_delay ? 0 : Number( localStorage.world_delay )\r\n\r\n// --- lealdade por hora\r\nconst loyalty_per_hour = !localStorage.loyalty_per_hour ? 0 : Number( localStorage.loyalty_per_hour )\r\n\r\n// --- limite de fake\r\nconst fake_limit = !localStorage.fake_limit ? 0 : Number( localStorage.fake_limit )\r\n\r\n// --- tipo de pesquisa\r\nconst world_tech = !localStorage.world_tech ? 0 : Number( localStorage.world_tech )\r\n\r\n// --------------------------- Objeto principal do projeto ------------------------\r\nconst players = localStorage.players ? JSON.parse( localStorage.getItem( \"players\" ) ) : {\r\n    [ game_data.player.id ] : {\r\n        villageIDs : [],\r\n        villages : {},\r\n        schedules : {},\r\n        configs : {\r\n            n_loop : 0,\r\n            n_atk : 0,\r\n            active : true,\r\n            farm : { active: true, season: 150, timer: 30 },\r\n            msg : { place : true },\r\n            scav: true,\r\n            main: true,\r\n            train: true,\r\n            command : true,\r\n            overview : 60,\r\n            map : 60,\r\n            report : 60,\r\n            mail : 120,\r\n            market : 60,\r\n            ranking: 60,\r\n            ally: 60,\r\n            forum : 120,\r\n            info_player : 60,\r\n            mentor : 120,\r\n            premium : 60,\r\n            transfer : 300,\r\n            settings : 60,\r\n            place_command : 90,\r\n            place: 60,\r\n            event : 120\r\n        },\r\n        market_premium : {\r\n            config : {\r\n                active : false,\r\n                option : 2,\r\n                sell : {\r\n                    active: true,\r\n                    storage_res: { \r\n                        wood: 1000,\r\n                        stone: 1000,\r\n                        iron: 1000\r\n                    }, \r\n                    sell_rate: {\r\n                        active: false,\r\n                        wood: 64,\r\n                        stone: 64,\r\n                        iron: 64\r\n                    }\r\n                },\r\n                buy : { \r\n                    active: true,\r\n                    storage_max: 30,\r\n                    buy_max: 1000,\r\n                    buy_rate: {\r\n                        active: false,\r\n                        wood: 64,\r\n                        stone: 64,\r\n                        iron: 64\r\n                    }\r\n                }\r\n            },\r\n            rate_daily : {}\r\n        },\r\n    }\r\n}\n\n//# sourceURL=webpack://newproject/../general/init_tw.js?");

/***/ }),

/***/ "../general/translator.js":
/*!********************************!*\
  !*** ../general/translator.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"trans_max_buildings\": () => (/* binding */ trans_max_buildings),\n/* harmony export */   \"translation\": () => (/* binding */ translation),\n/* harmony export */   \"twServer\": () => (/* binding */ twServer)\n/* harmony export */ });\nconst twServer = window.self.location.host.split(\".\")[0].match(/^[a-z]{2}/ig)[0]\r\n\r\nconst translation = {\r\n    en: {\r\n        monthLiteral: [ 'jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'ago', 'sep', 'out', 'nov', 'dec' ],\r\n        today : \"today\",\r\n        tomorrow : \"tomorrow\",\r\n        build : ['Main', 'Barracks', 'Stable', 'Garage','First church', 'Church', 'Watchtower', 'smith', 'Snob', 'Place', 'Statue', 'Market', 'Wood', 'Stone', 'Iron', 'Farm', 'Storage', 'Hide', 'Wall'],\r\n        main : [\r\n            \"Edit settings for this village\",\r\n            \"Enable village building\",\r\n            \"Disable village construction\",\r\n            \"Enable or disable building this village\",\r\n            \"Save Template\",\r\n            \"Save this village's construction model\",\r\n            \"Model saved!\"\r\n        ]\r\n    },\r\n    br: {\r\n        monthLiteral: [ 'jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez' ],\r\n        today : \"hoje\",\r\n        tomorrow : \"amanhã\",\r\n        build : ['Edifício Principal', 'Quartel', 'Estábulo', 'Oficina','Primeira igreja', 'Igreja', 'Torre de vigia', 'Ferreiro', 'Academia', 'Praça de reunião', 'Estátua', 'Mercado', 'Bosque', 'Poço de argila', 'Mina de ferro', 'Fazenda', 'Armazém', 'Esconderijo', 'Muralha'],\r\n        main : [\r\n            \"Editar configurações para esta aldeia\",\r\n            \"Ativar a construção da aldeia\",\r\n            \"Desativar a construção da aldeia\",\r\n            \"Ativar ou desativar a construção desta vila\",\r\n            \"Salvar modelo\",\r\n            \"Salvar modelo de contrução desta aldeia\",\r\n            \"Modelo salvo!\"\r\n        ]\r\n    },\r\n    pt: {\r\n        monthLiteral: [ 'jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez' ],\r\n        today : \"hoje\",\r\n        tomorrow : \"amanhã\",\r\n        build : ['Edifício Principal', 'Quartel', 'Estábulo', 'Oficina','Primeira igreja', 'Igreja', 'Torre de vigia', 'Ferreiro', 'Academia', 'Praça de reunião', 'Estátua', 'Mercado', 'Bosque', 'Poço de argila', 'Mina de ferro', 'Fazenda', 'Armazém', 'Esconderijo', 'Muralha'],\r\n        main : [\r\n            \"Editar configurações para esta aldeia\",\r\n            \"Ativar a construção da aldeia\",\r\n            \"Desativar a construção da aldeia\",\r\n            \"Ativar ou desativar a construção desta vila\",\r\n            \"Salvar modelo\",\r\n            \"Salvar modelo de contrução desta aldeia\",\r\n            \"Modelo salvo!\"\r\n        ]\r\n    },\r\n    tr: {\r\n        monthLiteral: [ 'Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara'],\r\n        today : \"bugün\",\r\n        tomorrow : \"yarın\",\r\n        build : ['Ana Bina', 'Kışla', 'Ahır', 'Atölye', 'Birinci Kilise', 'Kilise', 'Gözetleme kulesi', 'Demirci', 'Akademi', 'Buluşma meydanı', 'Heykel' , 'Pazar', 'Oduncu', 'Kil ocağı', 'Demir madeni', 'Çiftlik', 'Depo', 'Gizli depo', 'Sur'],\r\n        main : [\r\n            \"Bu köy için ayarları düzenle\",\r\n            \"Köy inşasını etkinleştir\",\r\n            \"Köy inşaatını devre dışı bırak\",\r\n            \"Bu köyü inşa etmeyi etkinleştir veya devre dışı bırak\",\r\n            \"Şablonu Kaydet\",\r\n            \"Bu köyün inşaat modelini kaydet\",\r\n            \"Model kaydedildi!\"\r\n        ]\r\n    }\r\n}\r\nconst trans_max_buildings = {\r\n    'main' : { trans: translation[twServer].build[0], max: 30 },\r\n    'barracks' : { trans: translation[twServer].build[1], max: 25 },\r\n    'stable' : { trans: translation[twServer].build[2], max: 20 },\r\n    'garage' : { trans: translation[twServer].build[3], max: 15 },\r\n    'church_f' : { trans : translation[twServer].build[4], max: 1 },\r\n    'church' : { trans: translation[twServer].build[5], max: 3 },\r\n    'watchtower' : { trans: translation[twServer].build[6], max: 20 },\r\n    'smith' : { trans: translation[twServer].build[7], max: 20 },\r\n    'snob' : { trans: translation[twServer].build[8], max: 1 },\r\n    'place' : { trans: translation[twServer].build[9], max: 1 },\r\n    'statue' : { trans: translation[twServer].build[10], max: 1 },\r\n    'market' : { trans: translation[twServer].build[11], max: 25 },\r\n    'wood' : { trans: translation[twServer].build[12], max: 30 },\r\n    'stone' : { trans: translation[twServer].build[13], max: 30 },\r\n    'iron' : { trans: translation[twServer].build[14], max: 30 },\r\n    'farm' : { trans: translation[twServer].build[15], max: 30 },\r\n    'storage' : { trans: translation[twServer].build[16], max: 30 },\r\n    'hide' : { trans: translation[twServer].build[17], max: 10 },\r\n    'wall' : { trans: translation[twServer].build[18], max: 20 }\r\n}\r\n\n\n//# sourceURL=webpack://newproject/../general/translator.js?");

/***/ }),

/***/ "../general/util.js":
/*!**************************!*\
  !*** ../general/util.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cTimeToSeg\": () => (/* binding */ cTimeToSeg),\n/* harmony export */   \"nDateTime\": () => (/* binding */ nDateTime),\n/* harmony export */   \"nSegStrHora\": () => (/* binding */ nSegStrHora),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"setMillis\": () => (/* binding */ setMillis),\n/* harmony export */   \"sleep\": () => (/* binding */ sleep),\n/* harmony export */   \"strTimeToSec\": () => (/* binding */ strTimeToSec),\n/* harmony export */   \"waitCompleteLoad\": () => (/* binding */ waitCompleteLoad)\n/* harmony export */ });\n\r\n/**\r\n * Uso geral\r\n * Calcula o numero de segundos de uma string hora\r\n * \r\n * @param {String} string - uma string hora (hh:mm:ss)\r\n * @returns Number - segundos\r\n */\r\nconst strTimeToSec = string => {\r\n    let hora = Number( string.substring( 0, string.length - 6 ) ) * 3600\r\n    let min = Number( string.substring( string.length - 5, string.length - 3 ) ) * 60\r\n    return Number( string.substring( string.length - 2, string.length ) ) + hora + min\r\n}\r\n\r\n/**\r\n * Uso geral\r\n * @param {String} c_data \r\n * @param {String} c_hora \r\n * @param {String} c_ms \r\n * @returns Number - milesegundos representando as string data e/ou hora e/ou milisegundos informado\r\n */\r\nconst nDateTime = ( c_data, c_hora = \"00:00:00\", c_ms = \"000\" ) => {\r\n    let n_hh = c_hora ? Number( c_hora.substring( 0, 2 ) ) : 0\r\n    let n_mm = c_hora ? Number( c_hora.substring( 3, 5) ) : 0\r\n    let n_ss = c_hora ? Number( c_hora.substring( 6, 8) ) : 0\r\n    let n_ms = c_hora ? c_hora.length > 8 ? Number ( c_hora.substring( 9, c_hora.length ) ) : 0 : 0\r\n    if ( c_ms ) n_ms = Number( c_ms )\r\n    let n_Dia = Number( c_data.substring( 0, 2 ) )\r\n    let n_Mes = Number( c_data.substring( 3, 5 ) ) - 1\r\n    let n_Ano = Number( c_data.substring( 6, c_data.length) )\r\n    return Date.parse( new Date( n_Ano, n_Mes, n_Dia, n_hh, n_mm, n_ss ) ) + n_ms\r\n}\r\n/**\r\n * Uso Geral\r\n * @param {Number} s - numero de segundos\r\n * @returns String - no formato 'hh:mm:ss'\r\n */\r\nconst nSegStrHora = ( s ) => {\r\n    let h = parseInt( s / 3600 )\r\n    let m = parseInt( ( s - ( h * 3600 ) ) / 60 )\r\n    s = parseInt( s - ( h * 3600 ) - ( m * 60 ) )\r\n    if ( h < 10 ) h = '0' + h\r\n    if ( m < 10 ) m = '0' + m\r\n    if ( s < 10 ) s = '0' + s\r\n    return `${h}:${m}:${s}`\r\n}\r\n\r\n/**\r\n * Uso Geral\r\n * @param {String} c_hora \r\n * @returns Number - de segundos da hora\r\n */\r\nconst cTimeToSeg = ( c_hora ) => {\r\n    let l = c_hora.length\r\n    let n_hh = Number( c_hora.substring( 0, l - 6 ) )\r\n    let n_mm = Number( c_hora.substring( l - 5, l - 3 ) )\r\n    let n_ss = Number( c_hora.substring( l - 2, l ) )\r\n    \r\n    return Number(( n_hh * 3600 ) + ( n_mm * 60 ) + n_ss)\r\n}\r\n\r\n/**\r\n * Uso geral\r\n * @param {Number} min - milisegundos\r\n * @param {Number} max - milisegundos\r\n * @returns Number - Aleatório entre min e max\r\n */\r\nconst random = ( min, max ) => {\r\n    min = Math.ceil( min );\r\n    max = Math.floor( max );\r\n    return Math.floor( Math.random() * ( max - min + 1 ) ) + min;\r\n}\r\n\r\nvar millis = 0 //utilizado na função setMillis\r\n/**\r\n * Uso geral\r\n * \r\n * @param {Number} added_time \r\n * @returns Number - retorna um numero acrescido\r\n */\r\nfunction setMillis( added_time = 200 ) {\r\n    let tmp = millis;\r\n    millis += added_time;\r\n    return tmp;\r\n}\r\n\r\n/**\r\n * Uso Geral\r\n * Faz uma pausa na execussão \r\n * @param {Number} seg \r\n * @returns \r\n */\r\nasync function sleep(seg) {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve()\r\n        }, seg * 1000);\r\n    });\r\n}\r\n\r\nasync function waitCompleteLoad( fnCalback ) {\r\n    console.log(\"waitCompleteLoad...\")\r\n    if ( document.readyState == \"loading\" || document.readyState == \"interactive\" ) {\r\n        const completeLoad = setInterval( async () => {\r\n            if ( document.readyState == \"complete\" ) {\r\n                clearInterval(completeLoad)\r\n                fnCalback\r\n            }\r\n        }, 1);\r\n    } else if ( document.readyState == \"complete\" ) {\r\n        fnCalback\r\n    }\r\n}\n\n//# sourceURL=webpack://newproject/../general/util.js?");

/***/ }),

/***/ "../general/util_tw.js":
/*!*****************************!*\
  !*** ../general/util_tw.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"daily_bonus\": () => (/* binding */ daily_bonus),\n/* harmony export */   \"doPlay\": () => (/* binding */ doPlay),\n/* harmony export */   \"editTicket\": () => (/* binding */ editTicket),\n/* harmony export */   \"return_ddmmaaaa\": () => (/* binding */ return_ddmmaaaa)\n/* harmony export */ });\n/* harmony import */ var _init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _translator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./translator */ \"../general/translator.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"../general/util.js\");\n\r\n\r\n\r\n\r\nconst return_ddmmaaaa = strDate => {\r\n    strDate = strDate.trim().toLowerCase()\r\n    if ( strDate.indexOf(_translator__WEBPACK_IMPORTED_MODULE_1__.translation[_translator__WEBPACK_IMPORTED_MODULE_1__.twServer].today) != -1 ) return (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)()\r\n    if ( strDate.indexOf(_translator__WEBPACK_IMPORTED_MODULE_1__.translation[_translator__WEBPACK_IMPORTED_MODULE_1__.twServer].tomorrow) != -1 ) return new Date( (0,_util__WEBPACK_IMPORTED_MODULE_2__.nDateTime)( (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)() ) + ( 1000 * 60 * 60 * 24 )).toLocaleDateString()\r\n    if ( !!strDate.match(/[0-9]{1,2}[.|/][0-9]{1,2}[.|/][0-9]{0,4}/ig) ) {\r\n        let arrDate = strDate.match( /[0-9]{1,2}[.|/][0-9]{1,2}[.|/][0-9]{0,4}/ig )[0].split(/[.|/]/)\r\n        if ( !arrDate[2] ) arrDate[2] = new Date((0,_util__WEBPACK_IMPORTED_MODULE_2__.nDateTime)((0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)())).getFullYear()\r\n        return new Date(`${arrDate[1]}.${arrDate[0]}.${arrDate[2]}`).toLocaleDateString()\r\n    }\r\n    let ind = _translator__WEBPACK_IMPORTED_MODULE_1__.translation[_translator__WEBPACK_IMPORTED_MODULE_1__.twServer].monthLiteral.indexOf( strDate.match( /[a-z]{3}/ig )[0] )\r\n    if ( ind != -1 ) return new Date( strDate.replace( _translator__WEBPACK_IMPORTED_MODULE_1__.translation[_translator__WEBPACK_IMPORTED_MODULE_1__.twServer].monthLiteral[ ind ], _translator__WEBPACK_IMPORTED_MODULE_1__.translation.en.monthLiteral[ ind ] ) \r\n    ).toLocaleDateString()\r\n}\r\n/**\r\n * Uso Geral TW\r\n * Retorna String do no formato ddmmaaaa informando os formatos abaixo \r\n *   23/04/2022 às 00:02:05:000 - pt-br\r\n *   31/01/22 at 01:05:57:325\r\n *   today at 23:21:35:986 - en\r\n *   hoje às 18:59:24:463 - pt-br\r\n *   jul. 16, 2022 18:59:24:463 - pt-br\r\n *   Jul 16, 2022 23:21:35:986 - en\r\n *   em 22.04. às 23:21:35:986 - pt-br\r\n *   on 02.07. at 01:19:57:691 - en \r\n * @param {String} strData \r\n * @returns String\r\n */\r\nconst return_ddmmaaaa_old = ( strData ) => {\r\n    let numDia, numMes, numAno\r\n    let mesLiteral = [ 'jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez' ]\r\n    strData = strData.replace( 'em ', '')\r\n    if ( mesLiteral.indexOf( strData.trim().substring( 0, strData.indexOf( ' ' ) ).replaceAll('.', '') ) != -1 ) {\r\n        strData = strData.replaceAll( '.', '' ).replaceAll( ',', '' )\r\n        numAno = Number( strData.trim().match(/[0-9]{4}$/ig) )\r\n        numMes = Number( mesLiteral.indexOf( strData.trim().substring( 0, strData.indexOf( ' ' ) ) ) )\r\n        numDia = Number( strData.replaceAll( strData.trim().match(/[0-9]{4}$/ig), \"\" ).replaceAll( mesLiteral[ numMes ], \"\" ) )\r\n        strData = ( new Date( numAno, numMes, numDia ) ).toLocaleString().substring( 0, 10 )\r\n    } else {\r\n        strData = strData.substring( 0, strData.indexOf( ' ' ) )\r\n        if ( strData == 'hoje' ) {\r\n            strData = document.querySelector(\"#serverDate\").textContent\r\n        } else if ( strData == 'amanhã' ) {\r\n            strData = ( new Date( (0,_util__WEBPACK_IMPORTED_MODULE_2__.nDateTime)( document.querySelector(\"#serverDate\").textContent ) + ( 1000 * 60 * 60 * 24 ) ) ).toLocaleString().substring( 0, 10 )\r\n        } else {\r\n            if ( strData.length < 10 ) {\r\n                numDia = Number( strData.substring( 0, 2 ) )\r\n                numMes = Number( strData.substring( 3, 5 ) ) - 1\r\n                let nMesHoje = ( new Date() ).getMonth()\r\n                numAno = ( new Date() ).getFullYear()\r\n                if ( numMes - nMesHoje < 0 ) {\r\n                    numAno += 1\r\n                }\r\n                strData = ( new Date( numAno, numMes, numDia ) ).toLocaleString().substring( 0, 10 )\r\n            }\r\n        }\r\n    }\r\n    return strData\r\n}\r\n\r\n/**\r\n * Uso Geral Tw\r\n * Coleta o Bonus diário na hora informada\r\n * @param {String} config_time \r\n * @returns \r\n */\r\nfunction daily_bonus( config_time = '00:01:00' ) {\r\n    let hora = document.querySelector(\"#serverTime\").textContent\r\n    let scr = 'info_player&mode=daily_bonus'\r\n    if ( document.querySelector(\"#daily_bonus_content\") ) {\r\n        const dailyInt = setInterval(() => {\r\n            let btn = document.querySelector(\"#daily_bonus_content\").querySelector(\"a.btn.btn-default\")\r\n            if ( btn ) { \r\n                btn.click()\r\n            } else {\r\n                if ( _init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].market_premium.config.active == true && _init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].configs.active == true ) self.location = link_mesma_aldeia + \"market&mode=exchange\"\r\n                clearInterval(dailyInt)\r\n            }\r\n        }, 1000 + setMillis( 500 ) );\r\n    }\r\n    if ( (0,_util__WEBPACK_IMPORTED_MODULE_2__.strTimeToSec)( hora ) >= (0,_util__WEBPACK_IMPORTED_MODULE_2__.strTimeToSec)( config_time ) && (0,_util__WEBPACK_IMPORTED_MODULE_2__.strTimeToSec)( hora ) < ( (0,_util__WEBPACK_IMPORTED_MODULE_2__.strTimeToSec)( config_time ) + 300 ) &&  screen_atual != scr ) {\r\n        if ( !_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].daily_bonus ) _init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].daily_bonus = null\r\n        if ( _init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].daily_bonus == new Date().toLocaleString().split(' ')[0] ) return\r\n        _init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].daily_bonus = new Date().toLocaleString().split(' ')[0]\r\n        localStorage.setItem( 'players', JSON.stringify( _init_tw__WEBPACK_IMPORTED_MODULE_0__.players ))\r\n        self.location = `${ link_mesma_aldeia }info_player&mode=daily_bonus`\r\n    }\r\n}\r\n\r\n/**\r\n * Uso Geral TW\r\n * Quando a pagina não está com o foco tenta retornar o foco\r\n */\r\nfunction doPlay() {\r\n    setTimeout(() => {\r\n        const cansed = false\r\n        self.location.reload()            \r\n    }, (0,_util__WEBPACK_IMPORTED_MODULE_2__.random)( 1 * 1000, 10 * 1000 ) );\r\n}\r\n\r\n/**\r\n * Uso Util TW\r\n * Salva a edição da etiqueta do ataque\r\n * @param {*} e \r\n */\r\nfunction editTicket( e ) {\r\n    if ( e.path[2].className == 'quickedit' ) {\r\n        console.log( e.path[ 2 ].dataset.id, e.target.value )\r\n        const villages = _init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].villages\r\n        for ( let k in villages ) {\r\n            if ( villages[ k ].comingAttack ) {\r\n                if ( villages[ k ].comingAttack[ e.path[ 2 ].dataset.id ] ) {\r\n                    villages[ k ].comingAttack[ e.path[ 2 ].dataset.id ].ticket = e.target.value\r\n                }\r\n            }\r\n        }\r\n        _init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].villages = villages\r\n        localStorage.setItem( 'players', JSON.stringify( _init_tw__WEBPACK_IMPORTED_MODULE_0__.players ))\r\n    }\r\n}\n\n//# sourceURL=webpack://newproject/../general/util_tw.js?");

/***/ }),

/***/ "../general/version.js":
/*!*****************************!*\
  !*** ../general/version.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"returnVersion\": () => (/* binding */ returnVersion)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"../general/util.js\");\n/* harmony import */ var _init_login__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init_login */ \"../general/init_login.js\");\n\r\n\r\n\r\nconst s1 = ['fT', 'yQ', 'rb', 'st', 'Lo', 'zP', 'Nx', 'ga', 'uV', 'Hl']\r\nconst s2 = ['ak', 'jW', 'ij', 'fd', 'Oa', 'hw', 'Uh', 'kj', 'Ag', 'Yw']\r\nconst s3 = ['_3', '7@', '&6', '2%', '8$', '0*', '#9', '-5', '1+', '!4']\r\nconst alphabet = 'abcdefghijklmnopqrstuvxwyz'.split('')\r\nconst arrS = [...s1,...s2,...s3]\r\n\r\nconst returnVersion = () => {\r\n    console.log(\"returnVersion...\")\r\n    if ( !localStorage.keyGO ) return false\r\n    if ( !JSON.parse( localStorage.keyGO ).key ) return false\r\n    if ( !_init_login__WEBPACK_IMPORTED_MODULE_1__.right_login_wrap && window.self.location.host.split(\".\")[0] != \"www\" ) {\r\n        return verifyKey( JSON.parse( localStorage.keyGO ).key )\r\n    } else {\r\n        if ( !_init_login__WEBPACK_IMPORTED_MODULE_1__.user_name ) return false\r\n        return verifyKeyLogin( JSON.parse( localStorage.keyGO ).key, _init_login__WEBPACK_IMPORTED_MODULE_1__.user_name )\r\n    }\r\n}\r\nfunction returnCodServer( server ) {\r\n    console.log(\"returnCodServer...\")\r\n    let arrServer = server.split(\"\")\r\n    let strNumServer = \"\"\r\n    for ( let i = 0; i < arrServer.length; i++ ) {\r\n        strNumServer += String( alphabet.indexOf( arrServer[ i ] ) )\r\n    }\r\n    arrServer = strNumServer.split(\"\")\r\n    let cod_server = \"\"\r\n    for ( let i = 0; i < arrServer.length; i++ ) {\r\n        if ( [ 0, 3, 6 ].indexOf(i) != -1 ) cod_server += s1[ arrServer[ i ] ]\r\n        if ( [ 1, 4, 7 ].indexOf(i) != -1 ) cod_server += s2[ arrServer[ i ] ]\r\n        if ( [ 2, 5, 8 ].indexOf(i) != -1 ) cod_server += s3[ arrServer[ i ] ]\r\n    }\r\n    return cod_server  \r\n}\r\nfunction returnNumLettersName( player ) {\r\n    console.log(\"returnNumLettersName...\")\r\n    let arrPlayer = player.toLowerCase().split(\"\")\r\n    let numLetters = \"\"\r\n    let n = 1\r\n    for (let i = 0; i < arrPlayer.length; i++) {\r\n        if ( alphabet.indexOf( arrPlayer[ i ] ) != -1 ) {\r\n            numLetters += alphabet.indexOf( arrPlayer[ i ] )\r\n            n++\r\n            if ( n > 3 ) break\r\n        }\r\n    }\r\n    return numLetters\r\n}\r\nfunction returnNumCode( cod_ ) {\r\n    console.log(\"returnNumCode...\")\r\n    let n = \"\", numCod = \"\"\r\n    for ( let i = 1; i <= cod_.length; i += 2 ) {\r\n        n = String( arrS.indexOf( cod_.substring( i - 1, i + 1 ) ))\r\n        numCod += n.substring(n.length - 1)\r\n    }\r\n    return numCod\r\n}    \r\nfunction verifyKeyLogin( key, user_name ) {\r\n    console.log(\"verifyKeyLogin...\")\r\n    let version = true\r\n    let s_date = new Date().toLocaleDateString()\r\n    let s_time = new Date().toLocaleTimeString()\r\n    let key1 = key.split(\"=\")\r\n    let server_world = key1[0].split(\"_\")[0]\r\n    let player = key1[0].split(\"_\")[1]\r\n    version = version === true ? player == user_name : false\r\n    let key2 = key1[2].split(\":\")\r\n    let code_date2 = key2[1]\r\n    let n1 = key2[2].split(\".\")[0]\r\n    version = version === true ? n1 == returnNumLettersName( player ) : false\r\n    let cod_server = key2[2].split(\".\")[1]\r\n    version = version === true \r\n    ? cod_server == returnCodServer( server_world.match(/[a-z]/ig).reduce((i, e) => i += e , \"\") ) : false\r\n    let code_date1= key2[3]\r\n    version = version === true \r\n    ? (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( s_date, s_time ) < (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( \r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleDateString(),\r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleTimeString()\r\n    ) \r\n    : false\r\n    return version\r\n}\r\nfunction verifyKey( key ) {\r\n    console.log(\"verifyKey...\")\r\n    let version = true\r\n    let s_date = document.querySelector(\"#serverDate\").textContent\r\n    let s_time = document.querySelector(\"#serverTime\").textContent\r\n    let key1 = key.split(\"=\")\r\n    let server_world = key1[0].split(\"_\")[0]\r\n    version = version === true ? server_world == game_data.world : false\r\n    let player = key1[0].split(\"_\")[1]\r\n    version = version === true ? player == game_data.player.name : false\r\n    let key2 = key1[2].split(\":\")\r\n    let cod_world = key2[0]\r\n    version = version === true \r\n    ? returnNumCode( cod_world ) == server_world.match(/[0-9]/ig).reduce((i, e) => i += e , \"\") \r\n    : false\r\n    let code_date2 = key2[1]\r\n    let n1 = key2[2].split(\".\")[0]\r\n    version = version === true ? n1 == returnNumLettersName( player ) : false\r\n    let cod_server = key2[2].split(\".\")[1]\r\n    version = version === true \r\n    ? cod_server == returnCodServer( server_world.match(/[a-z]/ig).reduce((i, e) => i += e , \"\") ) : false\r\n    let code_date1= key2[3]\r\n    version = version === true \r\n    ? (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( s_date, s_time ) < (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( \r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleDateString(),\r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleTimeString()\r\n    ) \r\n    : false\r\n    return version\r\n}\n\n//# sourceURL=webpack://newproject/../general/version.js?");

/***/ }),

/***/ "../interfaces/components.js":
/*!***********************************!*\
  !*** ../interfaces/components.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"error_box\": () => (/* binding */ error_box),\n/* harmony export */   \"go_container\": () => (/* binding */ go_container),\n/* harmony export */   \"insert_toggle\": () => (/* binding */ insert_toggle),\n/* harmony export */   \"jig_status\": () => (/* binding */ jig_status),\n/* harmony export */   \"statusGo\": () => (/* binding */ statusGo),\n/* harmony export */   \"toggleOnOff\": () => (/* binding */ toggleOnOff)\n/* harmony export */ });\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n\r\n\r\n\r\n/**\r\n * Uso Geral TW\r\n * Mostra mensagem de erro no html\r\n * @param {String} msg - texto da mensagem\r\n * @param {number} t - tempo em ms  que a msg vai ficar visível\r\n */\r\nconst error_box = ( msg, t = 5000) => {\r\n    if (document.querySelector( \"#content_value\" )) {\r\n        let elemNode = document.querySelector( \"#content_value\" )\r\n        let newElem = document.createElement( 'div' )\r\n        elemNode.prepend( newElem )\r\n        newElem.className = \" error_box \"\r\n        newElem.innerHTML = `<div class=\"content\"> ${ msg }</div>`\r\n        setTimeout(() => newElem.remove() , t )    \r\n    }\r\n}\r\nconst go_container = () => \"width: auto; max-width: 1080px; background: #F7EED3 url(https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic/index/main_bg.jpg) scroll right top repeat; position: relative; display: flow-root; justify-content: center flex-end; align-items: center; box-shadow: 1px 2px 3px 1px rgb(0 0 0 / 30%); border: 1px solid #7d510f; margin-bottom: 5px; padding: 5px;\"\r\nconst jig_status = () => {\r\n    if (!document.querySelector( \"#status\" )) {\r\n        let area\r\n        if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.premium_active ) {\r\n            area = document.createElement( 'table' )\r\n            document.querySelector( \"#main_layout > tbody > tr.shadedBG > td.maincell > br\" ).insertAdjacentElement( 'afterend', area )\r\n            area.id =\"quickbar_outer\"\r\n            area.width = \"100%\"\r\n            area.style = `align=\"center\"`\r\n            area.cellspacing =\"0\"\r\n            let html = `<tbody><tr><td><table id=\"quickbar_inner\" style=\"border-collapse: collapse;\" width=\"100%\"><tbody><tr class=\"topborder\"><td class=\"left\"></td><td class=\"main\"></td><td class=\"right\"></td></tr><tr><td class=\"left\"></p></td><td id=\"quickbar_contents\" class=\"main\"><ul class=\"menu quickbar\"><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"1\"><span><a id=\"m1\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}main\" title=\"Atalho 1\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/main.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/main.png\">Principal</a></span></li><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"2\"><span><a id=\"m2\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}train\" title=\"Atalho 2\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/barracks.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/barracks.png\">Recrutar</a></span></li><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"3\"><span><a id=\"m3\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}snob\" title=\"Atalho 3\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/snob.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/snob.png\">Academia</a></span></li>`\r\n            html +=`<li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"4\"><span><a id=\"m4\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}market\" title=\"Atalho 4\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/market.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/market.png\">Mercado</a></span></li><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"5\"><span><a id=\"m5\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}smith\" title=\"Atalho 5\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/smith.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/smith.png\">Ferreiro</a></span></li>`\r\n            if (_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.scav_active) html +=`<li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"6\"><span><a id=\"m6\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}place&mode=scavenge\" title=\"Atalho 6\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/e2454ccc/graphic/buildings/storage.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/e2454ccc/graphic/buildings/storage.png\">Coleta</a></span></li>`\r\n            html +=`<li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"0\"><span><a id=\"m0\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}place\" title=\"Atalho 0\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/place.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/place.png\">Praça</a></span></li></ul></td><td class=\"right\"></td></tr><tr class=\"bottomborder\"><td class=\"left\"></td><td class=\"main\"></td><td class=\"right\"></td></tr><tr><td class=\"shadow\" colspan=\"3\"><div class=\"leftshadow\"></div><div class=\"rightshadow\"></div></td></tr></tbody></table></td></tr></tbody>`\r\n            area.innerHTML = html\r\n            if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.n_aldeias > 1 ) {\r\n                area = document.createElement('td')\r\n                document.querySelector(\"#menu_row2\").prepend(area)\r\n                area.className = \"box-item icon-box arrowCell\"\r\n                html = `<a id=\"village_switch_right\" class=\"village_switch_link\" href=\"/game.php?${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.mdf}&village=n${ game_data.village.id }&screen=${ game_data.screen }${ game_data.mode ? '&mode=' : '' }${ game_data.mode ? game_data.mode : '' }\" accesskey=\"d\"><span class=\"arrowRight\"></span></a>`\r\n                area.innerHTML = html\r\n                area = document.createElement('td')\r\n                document.querySelector(\"#menu_row2\").prepend(area)\r\n                area.className = \"box-item icon-box separate arrowCell\"\r\n                html = `<a id=\"village_switch_left\" class=\"village_switch_link\" href=\"/game.php?${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.mdf}&village=p${ game_data.village.id }&screen=${ game_data.screen }${ game_data.mode ? '&mode=' : '' }${ game_data.mode ? game_data.mode : '' }\" accesskey=\"a\"><span class=\"arrowLeft\"></span></a>`\r\n                area.innerHTML = html\r\n            // --- muda link para outra visualização\r\n            } else document.querySelector( \"#menu_row > td:nth-child(2) > a\" ).href = \"/game.php?village=55871&amp;screen=overview_villages\"\r\n            document.addEventListener('keydown', (e) => {\r\n                console.log(e)\r\n                console.log(e.key)\r\n                console.log(e.target.localName)\r\n                if ( document.querySelector( `#m${e.key}` ) && ( e.target.localName != 'input' && e.target.localName != 'textarea' ) ) self.location = document.querySelector( `#m${e.key}` ).href\r\n            })\r\n        }\r\n        area = document.createElement('div')\r\n        document.querySelector(\"#quickbar_inner > tbody > tr:nth-child(2) > td.left\").prepend(area)\r\n        area.id = \"status\"\r\n        if ( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.timeZone)() != 0 ) {\r\n            let spanTimeZone = document.createElement(\"span\")\r\n            document.querySelector(\"#main_layout > tbody > tr.shadedBG > td.maincell > p\").prepend(spanTimeZone)\r\n            spanTimeZone.innerHTML = `Time Zone: <span id=\"time_zone\" style=\"color : red;\">${(0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nSegStrHora)((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.timeZone)())}</span>`\r\n        }\r\n    }\r\n}\r\nconst statusGo = status => {\r\n    let area = document.querySelector( \"#status\" )\r\n    let elem = document.querySelector( \"#active_go\" )\r\n    area.style =\"width: 82px; height: 82px; margin: -2px -35px -4px 2px; color: orange; display: flex; align-items: center; text-align: center;\"\r\n    switch ( status ) {\r\n        case true:\r\n            area.innerHTML = `<img src=\"https://github.com/UnrecognizedBR/public/blob/developer/icons/icon_green_60.png?raw=true\" alt=\"let's Go!\" style =\"width: 69px; height: 60px; margin-left: 2px; margin-top: -2px; margin-bottom: -4px; margin-right: -35px;\" >`\r\n            //area.innerHTML = `<strong> ♻️\\n Let's Go!\\n ON! </strong>`\r\n            //area.style.color = \"#13bf11\"\r\n            elem.className = \"toggle_go\"\r\n            elem.checked = status\r\n            console.log( \"♻️ Let's Go! ON\" )\r\n            break\r\n        case false:\r\n            area.innerHTML = `<img src=\"https://github.com/UnrecognizedBR/public/blob/developer/icons/icon_red_60.png?raw=true\" alt=\"let's Go!\" style =\"width: 69px; height: 60px; margin-left: 2px; margin-top: -2px; margin-bottom: -4px; margin-right: -35px;\" >`\r\n            //area.innerHTML = `<strong> ⛔️ Let's Go! OFF! </strong>`\r\n            //area.style.color = \"red\"\r\n            elem.className = \"toggle_go\"\r\n            elem.checked = status\r\n            console.log( \"⛔️ Let's Go OFF!\" )\r\n            break\r\n        case \"await\":\r\n            area.innerHTML = `<img src=\"https://github.com/UnrecognizedBR/public/blob/developer/icons/icon_yelow_60.png?raw=true\" alt=\"let's Go!\" style =\"width: 69px; height: 60px; margin-left: 2px; margin-top: -2px; margin-bottom: -4px; margin-right: -35px;\" >`\r\n            // area.innerHTML = `<strong> ⏳ Let's Go! STOP! </strong>`\r\n            // area.style.color = \"orange\"\r\n            elem.className = \"toggle_go\"  //\"toggle_be\"\r\n            elem.checked = _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[game_data.player.id].configs.active // status\r\n            console.log( \"⏳ Let's Go STOP!\" )\r\n            break\r\n        case \"command\":\r\n            area.innerHTML = `<img src=\"https://github.com/UnrecognizedBR/public/blob/developer/icons/icon_yelow_60.png?raw=true\" alt=\"let's Go!\" style =\"width: 69px; height: 60px; margin-left: 2px; margin-top: -2px; margin-bottom: -4px; margin-right: -35px;\" >`\r\n            // area.innerHTML = `<strong> ⚔️ Let's Go! Command! </strong>`\r\n            // area.style.color = \"blue\"\r\n            elem.className = \"togle_go\"  // \"toggle_be\"\r\n            elem.checked = _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[game_data.player.id].configs.active\r\n            console.log( \"⚔️ Let's Go Command!\" )\r\n            break\r\n        default:\r\n            break\r\n    }\r\n}\r\nconst toggleOnOff = () => {\r\n    let html\r\n    let elemNode\r\n    let newElem\r\n    if ( !document.querySelector( 'showOnOff' ) && document.querySelector(\"#quickbar_inner > tbody > tr:nth-child(2) > td.right\") ) {\r\n        elemNode = document.querySelector( \"head\" )\r\n        newElem = document.createElement( 'style' )\r\n        elemNode.appendChild( newElem )\r\n        html = `input.toggle_go { display: none; } input.toggle_go + label { display: inline-block; position: relative; box-shadow: inset 0 0 0px 0.1px black; height: 36px; width: 14px; background-color: red; border-radius: 7px; cursor: pointer; } input.toggle_go + label:before { content: \"\"; display: block; height: 14px; width: 14px; border-radius: 7px; background: rgba(191, 87, 17, 0); transition: 0.2s ease-in-out; } input.toggle_go + label:after { content: \"\"; position: absolute; height: 14px; width: 14px; top: 0; left: 0 px; border-radius: 7px; background: rgb(82, 73, 73); box-shadow: inset 0 0 0 2px red, 2px 4px rgba(59, 55, 55, 0.3); transition: 0.2s ease-in-out; } input.toggle_go:checked + label:before { box-shadow: inset 0 0 0px 0.1px black; height: 36px; background: #13bf11; } input.toggle_go:checked + label:after { top: 22px; box-shadow: inset 0 0 0 2px #13bf11, 2px 4px rgba(59, 55, 55, 0.3); }`\r\n        newElem.innerHTML = html\r\n        elemNode = document.querySelector(\"#quickbar_inner > tbody > tr:nth-child(2) > td.right\")\r\n        newElem = document.createElement( 'div' )\r\n        elemNode.appendChild( newElem )\r\n        newElem.innerHTML = `<input type=\"checkbox\" class=\"toggle_go\" name=\"active_go\" id=\"active_go\"><label for=\"active_go\" ></label>`\r\n        newElem.style = \"margin-right: 4pt;\"\r\n        newElem.id = \"showOnOff\"\r\n        newElem = document.querySelector( \"#active_go\" )\r\n        newElem.checked = _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].configs.active\r\n        newElem.onclick = () => {\r\n            // salva no localStorage\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].configs.active = newElem.checked ? true : false\r\n            // --- Busca os dados do localStorage\r\n            localStorage.setItem( 'players', JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players ) )\r\n            statusGo( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].configs.active )\r\n            //run_schedule()\r\n        }\r\n    }\r\n}\r\nconst insert_toggle = () => {\r\n    if ( !document.querySelector( '#toggle' ) ) {\r\n        let elemNode = document.querySelector(\"head\")\r\n        let newElem = document.createElement('style')\r\n        elemNode.appendChild( newElem )\r\n        newElem.id = 'toggle'\r\n        newElem.innerHTML = `input.toggle { display: none; } input.toggle + label { display: inline-block; position: relative; box-shadow: inset 0 0 0px 0.1px black;; height: 12px; width: 24px; background-color: red; border-radius: 6px; margin-left: 1px; margin-top: 5px;  cursor: pointer;} input.toggle + label:before { content: \"\"; display: block; height: 12px; width: 12px; border-radius: 6px; background: rgba(191, 87, 17, 0); transition: 0.2s ease-in-out; } input.toggle + label:after { content: \"\"; position: absolute; height: 12px; width: 12px; top: 0; left: -2px; border-radius: 6px; background: rgb(82, 73, 73); box-shadow: inset 0 0 0 2px red, 2px 4px rgba(59, 55, 55, 0.3); transition: 0.2s ease-in-out; } input.toggle:checked + label:before { box-shadow: inset 0 0 0px 0.1px black; width: 24px; background: #13bf11; } input.toggle:checked + :after { left: 12px; box-shadow: inset 0 0 0 2px #13bf11, 2px 4px rgba(59, 55, 55, 0.3); }`\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://newproject/../interfaces/components.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./TwProjectBot.js");
/******/ 	
/******/ })()
;