/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version */ \"../version.js\");\n/* harmony import */ var _keypress__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keypress */ \"./keypress.js\");\n/* harmony import */ var _laenhancer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./laenhancer */ \"./laenhancer.js\");\n\r\n\r\n\r\n\r\nconst verConnection = typeof( game_data ) == undefined || !document.querySelector(\"#topContainer\") ? false : true\r\nconst mdf = window.location.search.indexOf( 't=' ) == -1 ? '' : window.location.search.substring( window.location.search.indexOf( 't=' ), window.location.search.indexOf( '&' ) )\r\nconst link_mesma_aldeia = `/game.php?${mdf}&village=${game_data.village.id}&screen=`\r\nconst farm_active = game_data.features.FarmAssistent.active\r\nconst players = JSON.parse( localStorage.getItem( \"players\" ) )\r\n\r\nconst insert_toggle = () => {\r\n    console.log(\"insert_toggle...\")\r\n\r\n    if ( !document.querySelector( '#toggle' ) ) {\r\n        let elemNode = document.querySelector(\"head\")\r\n        let newElem = document.createElement('style')\r\n        elemNode.appendChild( newElem )\r\n        newElem.id = 'toggle'\r\n        newElem.innerHTML = `input.toggle { display: none; } input.toggle + label { display: inline-block; position: relative; box-shadow: inset 0 0 0px 0.1px black;; height: 12px; width: 24px; background-color: red; border-radius: 6px; margin-left: 1px; margin-top: 5px;  cursor: pointer;} input.toggle + label:before { content: \"\"; display: block; height: 12px; width: 12px; border-radius: 6px; background: rgba(191, 87, 17, 0); transition: 0.2s ease-in-out; } input.toggle + label:after { content: \"\"; position: absolute; height: 12px; width: 12px; top: 0; left: -2px; border-radius: 6px; background: rgb(82, 73, 73); box-shadow: inset 0 0 0 2px red, 2px 4px rgba(59, 55, 55, 0.3); transition: 0.2s ease-in-out; } input.toggle:checked + label:before { box-shadow: inset 0 0 0px 0.1px black; width: 24px; background: #13bf11; } input.toggle:checked + :after { left: 12px; box-shadow: inset 0 0 0 2px #13bf11, 2px 4px rgba(59, 55, 55, 0.3); }`\r\n    }\r\n}\r\nfunction enhancerDisabledImputsNextVillage() {\r\n    console.log(\"enhancerDisabledImputsNextVillage...\")\r\n    document.querySelector(\"#next_village_no_farms\").setAttribute(\"disabled\", true)\r\n    document.querySelector(\"#next_village_units\").setAttribute(\"disabled\", true)\r\n    document.querySelector(\"#next_village_scouts\").setAttribute(\"disabled\", true)\r\n    document.querySelector(\"#scouts_left\").setAttribute(\"disabled\", true)\r\n    document.querySelector(\"#next_village_farming_troops\").setAttribute(\"disabled\", true)\r\n    document.querySelector(\"#farming_troops_left\").setAttribute(\"disabled\", true)    \r\n}\r\nfunction enhancerCreateButton() {\r\n    if ( document.querySelector(\"#btnEsc\") ) return\r\n    console.log(\"enhancerCreateButton...\")\r\n    let btnEsc = document.createElement('button')\r\n    document.querySelector(\"#settingsDiv\").prepend(btnEsc)\r\n    btnEsc.className = \"btn float_right\"\r\n    btnEsc.style.width = \"-webkit-fill-available\"\r\n    btnEsc.id = \"btnEsc\"\r\n    const divMinMax = document.querySelector(\"#settingsDiv > table > thead > tr > th > h4 > span > div\")\r\n    btnEsc.addEventListener( \"click\", () => {\r\n        console.log(`btnEsc`)\r\n        settingsBodyDisplay()\r\n    })\r\n    document.addEventListener( \"keydown\", e => { \r\n        if ( e.key == \"Escape\" ) {\r\n            console.log(`Esc`)\r\n            settingsBodyDisplay()\r\n        }\r\n    })\r\n    divMinMax.addEventListener( \"click\", btnEscText )\r\n}\r\nfunction settingsBodyDisplay() {\r\n    console.log(\"settingsBodyDisplay...\")\r\n    let settingsBody = document.querySelector(\"#settingsBody\")\r\n    settingsBody.style.display = settingsBody.style.display == 'none' ? \"\" : \"none\"\r\n    btnEscText()\r\n}\r\nfunction btnEscText() {\r\n    console.log(\"btnEscText...\")\r\n    let btnEsc = document.querySelector(\"#btnEsc\")\r\n    btnEsc.innerText = document.querySelector(\"#settingsBody\").style.display == 'none'\r\n    ? \"Tecle 'Esc' ou 'click aqui' para PAUSAR e/ou configurar La Enhancer\" : \"Tecle 'Esc' ou 'click aqui' para ATIVAR auto-farm La Enhancer\"\r\n}\r\nfunction runEnd( time = 3 * 1000 ) {\r\n    console.log(\"runEnd...\")\r\n    setTimeout(() => {\r\n        if ( players[ game_data.player.id ].market_premium.config.active == true && players[ game_data.player.id ].configs.active == true ) {\r\n            self.location = link_mesma_aldeia + \"market&mode=exchange\"\r\n        } else {\r\n            self.location = link_mesma_aldeia + \"overview\"\r\n        }                    \r\n    }, time);\r\n}\r\n// --- verifica se tem tropas ou relatórios - se não tem sai do farm\r\nconst checkFarmIdle = () => {\r\n    console.log('Checking idle...')\r\n    let millis = 0\r\n    function setMillis( added_time = 250 ) {\r\n        let tmp = millis;\r\n        millis += added_time;\r\n        return tmp;\r\n    }\r\n    const random = ( min, max ) => {\r\n        console.log(\"random...\")\r\n        min = Math.ceil( min );\r\n        max = Math.floor( max );\r\n        return Math.floor( Math.random() * ( max - min + 1 ) ) + min;\r\n    }\r\n    function verifyEnd() {\r\n        console.log(\"verifyEnd...\")\r\n        let l = document.querySelector(\"#settingsBody\") ? 2 : document.querySelector(\"#divFAPress\") ? 1 : 0\r\n        if ( l == 0 ) return l\r\n        let btn_a = Array.from(document.querySelector(\"#content_value\").querySelectorAll('div.vis')[ l ].querySelectorAll('tr')[1].querySelectorAll('td'))\r\n        let btn_b = Array.from(document.querySelector(\"#content_value\").querySelectorAll('div.vis')[ l ].querySelectorAll('tr')[3].querySelectorAll('td'))\r\n        let disp = Array.from(document.querySelector(\"#content_value\").querySelectorAll('div.vis')[ l + 2 ].querySelectorAll('tr')[1].querySelectorAll('td.unit-item'))\r\n        let fim_a = false\r\n        let fim_b = false\r\n        for ( let i = 0; i < disp.length; i ++ ) {\r\n            if ( Number( btn_a[i].childNodes[1].defaultValue ) > 0 && Number( btn_a[i].childNodes[1].defaultValue ) > Number( disp[i].textContent ) ) {\r\n                fim_a = true\r\n            }\r\n            if ( Number( btn_b[i].childNodes[1].defaultValue ) > 0 && Number( btn_b[i].childNodes[1].defaultValue ) > Number( disp[i].textContent ) ) {\r\n                fim_b = true\r\n            }\r\n        }\r\n        console.log( fim_a && fim_b, !!document.querySelector(\"#ds_body > div.autoHideBox.error\"), document.querySelectorAll(\"#plunder_list > tbody > tr\").length <= 2 || !!document.querySelector(\"#divFAPress\") && !!document.querySelector(\"#settingsBody\" ) )\r\n        return ( ( fim_a && fim_b ) || !!document.querySelector(\"#ds_body > div.autoHideBox.error\") || document.querySelectorAll(\"#plunder_list > tbody > tr\").length <= 2 || ( !!document.querySelector(\"#divFAPress\") && !!document.querySelector(\"#settingsBody\" ) ) )\r\n    }\r\n    function run($){\r\n        console.log(\"run...\")\r\n        $.fn.triggerKeyPress = function (keys) {\r\n            var keydownEvent = $.Event(\"keydown\");\r\n            var $self = this;\r\n            $.each(keys, function(index, value) {\r\n                var simulatedKey = $.extend({}, keydownEvent, {which: value, keyCode: value});\r\n                $self.trigger(simulatedKey);\r\n            });\r\n        }\r\n        if ( document.querySelector(\"#settingsBody\")) {\r\n            enhancerCreateButton()\r\n            document.querySelector(\"#settingsDiv > table > thead > tr > th > h4 > a\").href = \"https://www.youtube.com/watch?v=OxfNHg50o50\"\r\n            document.querySelector(\"#settingsDiv > table > thead > tr > th > h4 > a\").title = \"Vídeo YouTube - by mundrungoo - Let's GO!\"\r\n            document.querySelector(\"#settingsDiv > table > thead > tr > th > h4 > span > a\").href = \"https://github.com/ntoombs19/LA-Enhancer\"\r\n            document.querySelector(\"#settingsDiv > table > thead > tr > th > h4 > span > a\").title = \"GiHub do autor com a versão oficial\"\r\n            document.querySelector(\"#settingsBody\").style.display = 'none'\r\n            document.querySelector(\"#content_value > div:nth-child(4) > div\").style.display = ''\r\n            btnEscText()\r\n            const intKey = setInterval(() => {\r\n                if ( !verConnection ) location.reload()\r\n                if ( !document.querySelector(\"#settingsBody\") ) return clearInterval(intKey)\r\n                if ( document.querySelector(\"#plunder_list\").style.display != 'none' && document.querySelectorAll(\"#plunder_list > tbody > tr\").length > 2 && document.querySelector(\"#settingsBody\").style.display != '' && !!document.querySelector(\"#as_on_off\").checked ) {\r\n\r\n                    let k = JSON.parse(localStorage.jStorage).keyPressSettings.master_code\r\n\r\n                    $('body').triggerKeyPress([k, k])\r\n\r\n                    let verEnd = verifyEnd()\r\n                    if ( verEnd != false ) clearInterval(intKey)\r\n                    if ( verEnd == true ) runEnd( document.querySelector(\"#settingsBody\").style.display != 'none' ? 120 * 1000 : 3 * 1000 )\r\n                    if ( verEnd == 0 ) return\r\n\r\n                } else if ( document.querySelector(\"#settingsBody\").style.display == '' ) {\r\n                    enhancerDisabledImputsNextVillage()\r\n                } else if ( !document.querySelector(\"#as_on_off\").checked ) {\r\n                    clearInterval(intKey)\r\n                    runEnd()\r\n                }\r\n            }, random( 1, 22 ) + setMillis(270))\r\n        } \r\n        if ( document.querySelector(\"#divFAPress\") ) {\r\n            const intFarmID = setInterval(() => {\r\n                if ( !verConnection ) location.reload()\r\n                let verEnd = verifyEnd()\r\n                if ( verEnd != false ) clearInterval(intFarmID)\r\n                if ( verEnd == true ) runEnd()\r\n                if ( verEnd == 0 ) return\r\n            }, 1.2 * 1000 )\r\n        }\r\n    }\r\n    const faInt = setInterval(() => {\r\n        if ( !verConnection ) location.reload()\r\n        if ( document.querySelectorAll(\"#plunder_list > tbody > tr\").length > 2 ) {\r\n            clearInterval(faInt)\r\n            run(jQuery)\r\n        }\r\n    }, 1000 )\r\n}\r\n\r\n( async () => {\r\n    'use strict'\r\n    if ( !game_data.screen == \"am_farm\" ) return\r\n    if ( !farm_active ) return\r\n    if ( !localStorage.keyGO ) return\r\n    if ( !JSON.parse( localStorage.keyGO ).key ) return\r\n    if ( !(0,_version__WEBPACK_IMPORTED_MODULE_0__.verifyKey)( JSON.parse( localStorage.keyGO ).key ) ) return\r\n\r\n    console.log('Looting resources...')\r\n\r\n    await farmInterface()\r\n\r\n    const configFarm = players[ game_data.player.id ].configs.farm\r\n    if ( !configFarm.script ) {\r\n        configFarm.script = \"keypress\"\r\n        players[ game_data.player.id ].configs.farm = configFarm\r\n        localStorage.setItem( \"players\", JSON.stringify( players ) )\r\n    }\r\n    document.querySelector(`#${ configFarm.script }`).checked = true\r\n    const divInputs = document.querySelector( \"#go_contairner > div > div\" )\r\n    const arrOptions = Array.from( divInputs.querySelectorAll( \"input\" )).map( e => e.id )\r\n    const optActived = () => Array.from(divInputs.querySelectorAll(\"input\")).filter( e => e.checked == true )[0].id\r\n    const as_on_off = document.querySelector(\"#as_on_off\")\r\n    as_on_off.checked = players[ game_data.player.id ].villages[game_data.village.id].farm\r\n\r\n    as_on_off.addEventListener('click', async () => {\r\n        document.querySelector(\"#tbody_premium label\").innerText = as_on_off.checked ? \"Desativar o AS\" : \"Ativar o AS\"\r\n        players[ game_data.player.id ].villages[game_data.village.id].farm = as_on_off.checked\r\n        localStorage.setItem( \"players\", JSON.stringify( players ) )\r\n        console.log(`as_on_off.checked: ${as_on_off.checked}`)\r\n        await waitCompleteLoad()\r\n    })\r\n    divInputs.addEventListener('click', async (e) => {\r\n        if ( arrOptions.indexOf( e.target.id ) != -1 && e.target.id != configFarm.script ) {\r\n            console.log(e.target.id)\r\n            configFarm.script = e.target.id\r\n            players[ game_data.player.id ].configs.farm = configFarm\r\n            localStorage.setItem( \"players\", JSON.stringify( players ) )\r\n            await waitCompleteLoad()\r\n        }\r\n    })\r\n\r\n    if ( as_on_off.checked ) await activeFarmOpt()\r\n    if ( !as_on_off.checked ) runEnd( 60 * 1000 )\r\n\r\n    async function waitCompleteLoad() {\r\n        console.log(\"waitCompleteLoad...\")\r\n        if ( document.readyState == \"loading\" || document.readyState == \"interactive\" ) {\r\n            const completeLoad = setInterval( async () => {\r\n                if ( document.readyState == \"complete\" ) {\r\n                    clearInterval(completeLoad)\r\n                    await deleteFarmOpt()                    \r\n                }\r\n            }, 500 );\r\n        } else if ( document.readyState == \"complete\" ) { \r\n            await deleteFarmOpt()\r\n        }\r\n    }\r\n    async function deleteFarmOpt() {\r\n        console.log(\"deleteFarmOpt...\")\r\n        // partialReload(document.querySelector(\"#contentContainer > tbody > tr > td > table\"))\r\n        // partialReload(document.querySelector(\"#plunder_list\"))\r\n        if ( document.querySelector(\"#settingsDiv\") ) document.querySelector(\"#settingsDiv\").remove()\r\n        if ( document.querySelector(\"#divFAPress\") ) document.querySelector(\"#divFAPress\").remove()\r\n        if ( document.querySelector('#divFAPressSettings') ) document.querySelector('#divFAPressSettings').remove() \r\n        if ( as_on_off.checked ) await activeFarmOpt()\r\n    }\r\n    async function activeFarmOpt() {\r\n        console.log(\"activeFarmOpt...\")\r\n\r\n        if ( optActived() == 'keypress' ) await (0,_keypress__WEBPACK_IMPORTED_MODULE_1__.keypressAuto)()\r\n        if ( optActived() == 'enhancer' ) await (0,_laenhancer__WEBPACK_IMPORTED_MODULE_2__.laenhancer)(jQuery)            \r\n        const farmInt = setInterval(() => {\r\n            if ( !verConnection ) location.reload()\r\n            if ( document.querySelector(\"#divFAPress\") || document.querySelector(\"#settingsBody\") ) {\r\n                clearInterval( farmInt )                    \r\n                console.log( `${ optActived() == 'keypress' ? \"FA\" : \"LA\" } ${ optActived() } active...` )\r\n                checkFarmIdle()\r\n            }\r\n        }, 1000 )\r\n    }\r\n    async function farmInterface() {\r\n        console.log(\"farmInterface...\")\r\n        insert_toggle()\r\n        let elemNode = document.querySelector(\"#contentContainer\")\r\n        let newElem = document.createElement('div')\r\n        elemNode.prepend(newElem)\r\n        newElem.id = \"go_contairner\"\r\n        newElem.style = \"width: 99,9%; max-width: 1080px; background: #e3d5b3 url(https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic/index/main_bg.jpg) scroll right top repeat; position: relative; display: flow-root; justify-content: center flex-end; align-items: center; box-shadow: 1px 2px 3px 1px rgb(0 0 0 / 30%); border: 1px solid #7d510f; margin-bottom: 5px; padding: 5px; \"\r\n        elemNode = newElem\r\n        newElem = document.createElement('div')\r\n        elemNode.appendChild(newElem)\r\n        newElem.innerHTML = `<table class=\"vis\" style=\"width: 100%\"><tbody id=\"tbody_premium\" ><tr><td id='config_farm' style=\"cursor: pointer\"> » Configurações do Assistente de saque</td><td></td><td></td><td style=\"text-align: right; padding-right: 10px;\"><label title=\"Ativar ou desativar o assistente de saque desta aldeia\" for=\"as_on_off\" style=\"cursor: pointer\"> Desativar o AS</label></td><td style=\"text-align: center;\"><input type=\"checkbox\" id=\"as_on_off\" class=\"toggle\"><label for=\"as_on_off\"></label></td></tr></tbody></table><div style=\"display: inline-block; margin-top: 10px; width: 100%; text-align: center;\"><label for=\"keypress\" title=\"Seleciona FA Keypress Auto para todas as aldeias\" style=\"cursor: pointer\"><input type=\"radio\" name=\"farmScript\" id=\"keypress\" value=\"0\"> FA Keypress Auto</label><label for=\"enhancer\" title=\"Seleciona LA Enhancer Auto para todas as aldeias\" style=\"cursor: pointer; margin-left: 100px; margin-right: 100px;\"><input type=\"radio\" name=\"farmScript\" id=\"enhancer\" value=\"1\"> LA Enhancer Auto</label><label for=\"faGoEnhancer\" title=\"Em desemvolvimento. Aguardem!!\" style=\"cursor: pointer\" disabled><input type=\"radio\" name=\"farmScript\" id=\"faGoEnhancer\" value=\"2\" disabled>FA-Let's GO!-Max Power</label></div>`\r\n    }\r\n})();\r\n\n\n//# sourceURL=webpack://am_farm/./index.js?");

/***/ }),

/***/ "./keypress.js":
/*!*********************!*\
  !*** ./keypress.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"keypressAuto\": () => (/* binding */ keypressAuto)\n/* harmony export */ });\nasync function keypressAuto() {\r\n    var cansend = true;\r\n    var getting_new_village = false;\r\n\r\n    function wait(time_in_ms) {\r\n        return new Promise((resolve, reject) => setTimeout(resolve, time_in_ms));\r\n    }\r\n\r\n    function random(start_interval, end_interval) {\r\n        return Math.round(parseInt(start_interval) + Math.random() * (end_interval - start_interval));\r\n    }\r\n\r\n    /*window.onblur = function () {\r\n        cansend = false;\r\n    }*/\r\n\r\n    if ($('form').length) {\r\n        var scriptElem = document.createElement('script');\r\n        scriptElem.innerHTML = `if (/screen=am_farm/g.test(window.location.href)) {var faTable = $(\"#plunder_list\");function customSendUnits(e, r, t, a) {var s = a.closest(\"tr\");if (a.closest(\"tr\").remove(), (e = $(e)).hasClass(\"farm_icon_disabled\")) return !1;var i = {target: r, template_id: t, source: game_data.village.id};return $.post(Accountmanager.send_units_link, i, function (e) {if (e.error) UI.ErrorMessage(e.error), $(faTable).find(\"tr\").eq(h).before(s); else {if ($(\".farm_village_\" + r).addClass(\"farm_icon_disabled\"), void 0 !== $(a).prop(\"tooltipText\")) var t = $(a).prop(\"tooltipText\");var i = $(\"<div></div>\").append($(t)), n = ($(i).find('img[src*=\"res.png\"]').eq(0).attr(\"src\"), t.split(\"<br />\"));n.splice(n.length - 2, 1), UI.SuccessMessage(n.join(\" \"), 1e3), a.closest(\"tr\").remove(), Accountmanager.farm.updateOwnUnitsAvailable(e.current_units)}}, \"json\"), !1}function customSendUnitsFromReport(e, r, t, a) {var s = a.closest(\"tr\");if (a.closest(\"tr\").remove(), (e = $(e)).hasClass(\"farm_icon_disabled\")) return !1;var i = {report_id: t};return $.post(Accountmanager.send_units_link_from_report, i, function (e) {if (e.error) UI.ErrorMessage(e.error), $(faTable).find(\"tr\").eq(h).before(s); else if (\"string\" == typeof e.success) {if (void 0 !== $(a).prop(\"tooltipText\")) var t = $(a).prop(\"tooltipText\");var i = $(\"<div></div>\").append($(t)), n = ($(i).find('img[src*=\"res.png\"]').eq(0).attr(\"src\"), t.split(\"<br />\"));n.splice(n.length - 2, 1), UI.SuccessMessage(n.join(\" \"), 1e3), $(\".farm_village_\" + r).addClass(\"farm_icon_disabled\"), Accountmanager.farm.updateOwnUnitsAvailable(e.current_units)}}, \"json\"), !1}}`;\r\n        document.body.appendChild(scriptElem);\r\n\r\n        var debugData = \"\";\r\n        var incrementalSwitchPage = 0;\r\n        var cookieName = \"fakeypress\";\r\n        var version = \"1.98 - Unofficial Patch by LilGhost<br/>\";\r\n        var updateversion = 1.6;\r\n        var start_click_interval = 200;\r\n        var end_click_interval = 250;\r\n        var CdnRoot = \"https://dsen.innogamescdn.com/asset/6052b745/graphic/\";\r\n        var keycodes = {\r\n            \"a\": 65,\r\n            \"b\": 66,\r\n            \"c\": 67,\r\n            \"skip\": 74,\r\n            \"right\": 39,\r\n            \"left\": 37,\r\n            \"master\": 90\r\n        };\r\n        var keyedits = {\r\n            \"a\": false,\r\n            \"b\": false,\r\n            \"c\": false,\r\n            \"skip\": false,\r\n            \"left\": false,\r\n            \"right\": false\r\n        };\r\n        var models_ids = Object.keys(Accountmanager.farm.templates).map((ele) => {\r\n            return ele.match(/\\d+/g)[0]\r\n        });\r\n        var model_id = {\r\n            'a': models_ids[0],\r\n            'b': models_ids[1],\r\n        }\r\n        var key;\r\n        var keydown = false;\r\n        var last_keypress = 0;\r\n        var timeout_keypress = 500;\r\n        var sitter = \"\";\r\n        if (window.game_data.player.sitter != \"0\") {\r\n            sitter = \"t=\" + window.game_data.player.id + \"&\";\r\n        }\r\n        var link = [\"https://\" + window.location.host + \"/game.php?\" + sitter + \"village=\", \"&screen=am_farm\"];\r\n        var pos = {\r\n            s: {\r\n                order: 0,\r\n                dir: 1,\r\n                loadp: 2,\r\n                fp: 3,\r\n                lp: 4,\r\n                remaxes: 5,\r\n                remyellow: 6,\r\n                remred: 7,\r\n                remblue: 8,\r\n                remgreen: 9,\r\n                remredy: 10,\r\n                remredb: 11,\r\n                remattsince: 12,\r\n                farmab: 13,\r\n            }\r\n        };\r\n        var faTable, userkeys, userset, totalrows, countedrows = 0;\r\n        var pagesLoad = 0;\r\n        var units_names = getUnitsNames();\r\n        var pagesLoaded = true;\r\n\r\n\r\n        function run() {\r\n            checkPage();\r\n            if (checkCookie()) {\r\n                if ($.cookie(cookieName).indexOf('{') == -1) {\r\n                    alert(\"Attempting to adapt existing settings to work with newer version. If there are problems with the settings transition, please try changing your cookie name.\\n\\n-crim\");\r\n                    dodokeys = $.cookie(cookieName).split(',');\r\n                    resetCookie();\r\n                    userkeys[0] = dodokeys[0];\r\n                    userkeys[1] = dodokeys[1];\r\n                    userkeys[2] = dodokeys[2];\r\n                    keycodes.a = parseInt(userkeys[0]);\r\n                    keycodes.b = parseInt(userkeys[1]);\r\n                    keycodes.c = parseInt(userkeys[2]);\r\n                    keycodes.skip = parseInt(userkeys[3]);\r\n                    keycodes.right = parseInt(userkeys[4]);\r\n                    keycodes.left = parseInt(userkeys[5]);\r\n                    setCookie(cookieName, 180);\r\n                } else if (parseFloat($.cookie(cookieName).split(\"{\")[1].split(\"}\")[0]) <= updateversion) {\r\n                    UI.ErrorMessage(\"Due to an update, the user data must be reset to default settings. Please redefine your settings and keys, sorry for any inconvenience<br><br>-crim\", 2000);\r\n                    resetCookie();\r\n                } else {\r\n                    userkeys = $.cookie(cookieName).split(\"[\")[1].split(\"]\")[0].split(\",\");\r\n                    userset = $.cookie(cookieName).split(\"[\")[2].split(\"]\")[0].split(\",\");\r\n                    keycodes.a = parseInt(userkeys[0]);\r\n                    keycodes.b = parseInt(userkeys[1]);\r\n                    keycodes.c = parseInt(userkeys[2]);\r\n                    keycodes.skip = parseInt(userkeys[3]);\r\n                    keycodes.right = parseInt(userkeys[4]);\r\n                    keycodes.left = parseInt(userkeys[5]);\r\n                }\r\n            } else {\r\n                UI.SuccessMessage(\"Welcome to FA KeyPress by Crimsoni\", 1000);\r\n                resetCookie();\r\n            }\r\n            faTable = $('#plunder_list');\r\n            if (userset[pos.s.loadp] === \"1\") {\r\n                removeFirstPage();\r\n                showPages();\r\n            } else {\r\n                getting_new_village = false;\r\n                initStuff();\r\n            }\r\n        }\r\n\r\n        function getUnitsNames() {\r\n            let units_obj = Accountmanager.farm.current_units;\r\n            let units_names = [];\r\n\r\n            for (let unit_name in units_obj)\r\n                units_names.push(unit_name);\r\n\r\n            return units_names;\r\n        }\r\n\r\n        function getCurrentUnits() {\r\n            return Accountmanager.farm.current_units;\r\n        }\r\n\r\n        function getCurrentUnitsManual() {\r\n            return {\r\n                'spear': parseInt($('.unit-item.unit-item-spear').text()),\r\n                'sword': parseInt($('.unit-item.unit-item-sword').text()),\r\n                'axe': parseInt($('.unit-item.unit-item-axe').text()),\r\n                'spy': parseInt($('.unit-item.unit-item-spy').text()),\r\n                'light': parseInt($('.unit-item.unit-item-light').text()),\r\n                'heavy': parseInt($('.unit-item.unit-item-heavy').text()),\r\n            }\r\n        }\r\n\r\n        function addPressKey() {\r\n            window.onkeypress = function (e) {\r\n                last_keypress = performance.now();\r\n            };\r\n            window.onkeydown = function (e) {\r\n                last_keypress = performance.now();\r\n                key = e.keyCode ? e.keyCode : e.which;\r\n                keydown = true;\r\n                if (key == keycodes.left) {\r\n                    if (pagesLoaded)\r\n                        getNewVillage(\"p\");\r\n                } else if (key == keycodes.right) {\r\n                    if (pagesLoaded)\r\n                        getNewVillage(\"n\");\r\n                }\r\n                let interval = setInterval(() => {\r\n                    if (performance.now() - last_keypress < timeout_keypress) {\r\n                        checkKeys();\r\n                        if (!keydown)\r\n                            clearInterval(interval);\r\n                    } else\r\n                        clearInterval(interval);\r\n                }, 5);\r\n            };\r\n            window.onkeyup = function (e) {\r\n                checkKeys();\r\n                keydown = false;\r\n            };\r\n\r\n            function checkKeys(evt) {\r\n                /* GUGA */\r\n                if ((key == 49 || key == 97) && evt.target && evt.target.localName != 'input') {\r\n                    window.location = game_data.link_base_pure + 'am_farm';\r\n                    return;\r\n                }\r\n                if ((key == 50 || key == 98) && evt.target && evt.target.localName != 'input') {\r\n                    window.location = game_data.link_base_pure + 'main';\r\n                    return;\r\n                }\r\n                if ((key == 51 || key == 99) && evt.target && evt.target.localName != 'input') {\r\n                    window.location = game_data.link_base_pure + 'train';\r\n                    return;\r\n                }\r\n\r\n\r\n                // if ((key == 49 || key == 97) && evt.target && evt.target.localName != 'input') {\r\n                //     window.location = game_data.link_base_pure + 'main';\r\n                //     return;\r\n                // }\r\n                // if ((key == 50 || key == 98) && evt.target && evt.target.localName != 'input') {\r\n                //     window.location = game_data.link_base_pure + 'train';\r\n                //     return;\r\n                // }\r\n                // if ((key == 51 || key == 99) && evt.target && evt.target.localName != 'input') {\r\n                //     window.location = game_data.link_base_pure + 'am_farm';\r\n                //     return;\r\n                // }\r\n\r\n                if (key == 77 && evt.target && evt.target.localName != 'input') {\r\n                    window.location = game_data.link_base_pure + 'map';\r\n                    return;\r\n                }\r\n                if (keyedits.a) {\r\n                    keycodes.a = key;\r\n                    refresh();\r\n                } else if (keyedits.b) {\r\n                    keycodes.b = key;\r\n                    refresh();\r\n                } else if (keyedits.c) {\r\n                    keycodes.c = key;\r\n                    refresh();\r\n                } else if (keyedits.skip) {\r\n                    keycodes.skip = key;\r\n                    refresh();\r\n                } else if (keyedits.left) {\r\n                    keycodes.left = key;\r\n                    refresh();\r\n                } else if (keyedits.right) {\r\n                    keycodes.right = key;\r\n                    refresh();\r\n                } else if (key == keycodes.skip) {\r\n                    $(faTable).find(\"tr\").eq(1).remove();\r\n                } else if (cansend) {\r\n                    if (key == keycodes.c) {\r\n                        click('c');\r\n                        /*     doTime(201); */\r\n                    } else if (key == keycodes.a) {\r\n                        click('a');\r\n                        /*    doTime(201); */\r\n                    } else if (key == keycodes.b) {\r\n                        click('b');\r\n                        /*  doTime(201); */\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function areThereUnitsAvailable(farm_template_obj) {\r\n            let current_units = getCurrentUnits();\r\n\r\n            if (!farm_template_obj) {\r\n                // for(let unit_name of units_names) {\r\n                /* rever */\r\n                if (current_units['light'] > 10 || current_units['heavy'] > 10)\r\n                    return true;\r\n                // }\r\n                return false;\r\n            }\r\n            for (let unit_name of units_names) {\r\n                if (farm_template_obj[unit_name] && current_units[unit_name] < farm_template_obj[unit_name])\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        function areThereUnitsAvailable2(farm_template_obj) {\r\n            let current_units = getCurrentUnitsManual();\r\n\r\n            if (farm_template_obj == undefined)\r\n                return false;\r\n\r\n            // if (farm_template_obj.light != undefined && current_units.light > farm_template_obj.light)\r\n            //     return true;\r\n            //\r\n            // if (farm_template_obj.heavy != undefined && current_units.heavy > farm_template_obj.heavy)\r\n            //     return true;\r\n\r\n\r\n            for (let unit_name of units_names) {\r\n                if (farm_template_obj[unit_name] != undefined && current_units[unit_name] < farm_template_obj[unit_name])\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        async function click(letter) {\r\n            let rows_length = $(faTable).find(\"tr\").length, first_row_index;\r\n            let farm_template_obj = letter != 'c' ? Accountmanager.farm.templates[`t_${model_id[letter]}`] : null;\r\n            let row, button;\r\n\r\n            while ($(faTable).find(\"tr\").eq(2).length) {\r\n                if (!cansend || getting_new_village)\r\n                    break;\r\n\r\n                row = $(faTable).find(\"tr\").eq(2);\r\n                button = $('a[class*=\"farm_icon_' + letter + '\"]', row).eq(0);\r\n\r\n                // --- by Clezio Marcos ( exit partialReload )\r\n                if ( !document.querySelector(\"#divFAPress\") ) break\r\n\r\n                if ($(button).html() != null) {\r\n                    if (!areThereUnitsAvailable2(farm_template_obj)) {\r\n                        console.log('Unidades insuficientes!');\r\n                        UI.SuccessMessage(\"Acabou!\", 2000);\r\n                        break;\r\n                    }\r\n\r\n                    if ($(button).attr('class').indexOf('farm_icon_disabled') == -1)\r\n                        $(button).click();\r\n                }\r\n\r\n                await wait(random(start_click_interval, end_click_interval));\r\n            }\r\n\r\n            UI.SuccessMessage(\"Acabou!\", 2000);\r\n\r\n            // cansend = true;\r\n        }\r\n\r\n        function checkCookie() {\r\n            if (!($.cookie(cookieName))) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        function setCookie(cname, cvalue, exdays) {\r\n            var d = new Date();\r\n            d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n            var expires = \"expires=\" + d.toGMTString();\r\n            document.cookie = cname + \"=\" + cvalue + \"; \" + expires + \"; path=/\";\r\n        }\r\n\r\n        function bindFuncts() {\r\n            $('#contactme').bind('click', function () {\r\n                return window.open(\"mailto:cchrisggrant@gmail.com\")\r\n            });\r\n            $('#buttona').bind('click', function () {\r\n                return setEditMode(0)\r\n            });\r\n            $('#buttonb').bind('click', function () {\r\n                return setEditMode(1)\r\n            });\r\n            $('#buttonc').bind('click', function () {\r\n                return setEditMode(2)\r\n            });\r\n            $('#buttonignore').bind('click', function () {\r\n                return setEditMode(3)\r\n            });\r\n            $('#buttonleft').bind('click', function () {\r\n                return setEditMode(4)\r\n            });\r\n            $('#buttonright').bind('click', function () {\r\n                return setEditMode(5)\r\n            });\r\n            $('#showSettings').bind('click', doSettings);\r\n            $('#chbLoadPages').bind('click', function () {\r\n                chkBoxClick($(this).is(\":checked\"), pos.s.loadp)\r\n            });\r\n            $('#chbRemAxes').bind('click', function () {\r\n                chkBoxClick($(this).is(\":checked\"), pos.s.remaxes)\r\n            });\r\n            $('#chbRemBlue').bind('click', function () {\r\n                chkBoxClick($(this).is(\":checked\"), pos.s.remblue)\r\n            });\r\n            $('#chbRemGreen').bind('click', function () {\r\n                chkBoxClick($(this).is(\":checked\"), pos.s.remgreen)\r\n            });\r\n            $('#chbRemYellow').bind('click', function () {\r\n                chkBoxClick($(this).is(\":checked\"), pos.s.remyellow)\r\n            });\r\n            $('#chbRemRedYellow').bind('click', function () {\r\n                chkBoxClick($(this).is(\":checked\"), pos.s.remredy)\r\n            });\r\n            $('#chbRemRedBlue').bind('click', function () {\r\n                chkBoxClick($(this).is(\":checked\"), pos.s.remredb)\r\n            });\r\n            $('#chbRemRed').bind('click', function () {\r\n                chkBoxClick($(this).is(\":checked\"), pos.s.remred)\r\n            });\r\n            $('#chbFarmAB').bind('click', function () {\r\n                chkBoxClick($(this).is(\":checked\"), pos.s.farmab)\r\n            });\r\n            $('#btnSettingsReset').bind('click', function () {\r\n                resetCookie();\r\n                UI.SuccessMessage(\"Settings reset\", 1000);\r\n                run();\r\n                return false;\r\n            });\r\n            $('#btnSettingsApply').bind('click', function () {\r\n                saveSettings();\r\n                run();\r\n                return false\r\n            });\r\n            $('#btnSettingsSave').bind('click', function () {\r\n                saveSettings();\r\n                return false;\r\n            });\r\n        }\r\n\r\n        function addTable() {\r\n            let table_html = `<div id='divFAPress' class='vis' style='font-size:12px;width:40%'>\r\n\t\t\t\t<table id='faKeyPress' class='vis' style='width:100%' cellspacing='0'>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th colspan='8' style='font-size:16px;text-align:center'>FA Keypress v\" ${version} \" by\r\n\t\t\t\t\t\t\t\t<a href='#' id='contactme'>Crimsoni</a>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t  <tr id='buttonRow'>\r\n                            <th colspan='1' valign='middle'>Buttons: <img src='https://media.innogamescdn.com/com_DS_FR/Scripts/Pillage/questionmark.png' title='Clique sur un bouton puis une touche du clavier pour modifier' width='13' height='13' alt='' class='tooltip' />\r\n                            <td colspan='1' align='center'>\r\n                                <a href='#' id='buttona' class='tooltip farm_icon farm_icon_a' title='Bouton A'>\r\n                            <td colspan='1' align='center'>\r\n                                <a href='#' id='buttonb' class='tooltip farm_icon farm_icon_b' title='Bouton B'>\r\n                            <td colspan='1' align='center'>\r\n                                <a href='#' id='buttonc' class='tooltip farm_icon farm_icon_c'  title='Bouton C'>\r\n                            <td colspan='1' align='center'>\r\n                                <input class='btn tooltip' type='button' id='buttonignore' value='Ignorer' style='margin:0px 0px 0px 0px' title='Ignore la ligne de pillage'/>\r\n                            <td colspan='1' align='center'>\r\n                                <a href='#' id='buttonleft' class='tooltip ' title='<-'><-</a>\r\n                            <td colspan='1' align='center'>\r\n                                <a href='#' id='buttonright' class='tooltip ' title='->'>-></a>\r\n                        </tr>\r\n\t\t\t\t\t\t<tr id='keysRow'>\r\n\t\t\t\t\t\t\t<th colspan='1'>Keys:</th>\r\n\t\t\t\t\t\t\t<td align='center'>${String.fromCharCode(keycodes.a)}</td>\r\n\t\t\t\t\t\t\t<td align='center'>${String.fromCharCode(keycodes.b)}</td>\r\n\t\t\t\t\t\t\t<td align='center'>${String.fromCharCode(keycodes.c)}</td>\r\n\t\t\t\t\t\t\t<td align='center'>${String.fromCharCode(keycodes.skip)}</td>\r\n\t\t\t\t\t\t    <td>${String.fromCharCode(keycodes.left)}\r\n                            <td>${String.fromCharCode(keycodes.right)}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>`;\r\n\r\n            let FA_Press_html = `<table id='faKeySettings' class='vis' style='width:100%' cellspacing='0'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colspan='3'> <em>Settings</em> - <a href'#' id='showSettings' style='cursor:pointer;'>Hide</a> </th>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody id='bodySettings'>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td colspan='1' align='center'>\r\n\t\t\t\t\t\t\t<input type='checkbox' id='chbLoadPages'> <b>Load pages</b>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td colspan='2'>From\r\n\t\t\t\t\t\t\t<input type='text' id='txtFirstPage' size='2' maxlength='2' value='${userset[pos.s.fp]}'> to\r\n\t\t\t\t\t\t\t<input type='text' id='txtLastPage' size='2' maxlength='2' value='${userset[pos.s.lp]}'>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td align='center'> <b>Hide</b> </td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input type='checkbox' id='chbRemAxes'>\r\n\t\t\t\t\t\t\t<img src='${CdnRoot}command/attack.png' title='Outgoing attacks' alt='' class='tooltip' />\r\n\t\t\t\t\t\t\tAttacks<br>\r\n\t\t\t\t\t\t\t<input type='checkbox' id='chbRemBlue'>\r\n\t\t\t\t\t\t\t<img src='${CdnRoot}dots/blue.png' title='Scouted' alt='' class='tooltip' /> Scouted\r\n\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t<input type='checkbox' id='chbRemGreen''>\r\n\t\t\t\t\t\t\t<img src=' ${CdnRoot}dots/green.png' title='Complete victory' alt='' class='tooltip' />\r\n\t\t\t\t\t\t\tComplete victory <br>\r\n\t\t\t\t\t\t\t<input type='checkbox' id='chbRemYellow'>\r\n\t\t\t\t\t\t\t<img src='${CdnRoot}dots/yellow.png' title='Victory, with some losses' alt='' class='tooltip' />\r\n\t\t\t\t\t\t\tVictory, with some losses <br>\r\n\t\t\t\t\t\t\t<input type='checkbox' id='chbRemRedYellow'>\r\n\t\t\t\t\t\t\t<img src='${CdnRoot}dots/red_yellow.png' title='Defeated, but damaged building(s)' alt=''\r\n\t\t\t\t\t\t\t\tclass='tooltip' /> Defeated, but\r\n\t\t\t\t\t\t\tdamaged<br>\r\n\t\t\t\t\t\t\t<input type='checkbox' id='chbRemRedBlue'>\r\n\t\t\t\t\t\t\t<img src='${CdnRoot}dots/red_blue.png' title='Defeated, but scouted' alt='' class='tooltip' />\r\n\t\t\t\t\t\t\tDefeated, but scouted<br>\r\n\t\t\t\t\t\t\t<input type='checkbox' id='chbRemRed'>\r\n\t\t\t\t\t\t\t<img src='${CdnRoot}dots/red.png' title='Defeated' alt='' class='tooltip' /> Defeated<br>\r\n\t\t\t\t\t\t\t<input type='checkbox' id='chbFarmAB'>\r\n\t\t\t\t\t\t\t<img src='${CdnRoot}max_loot/1.png' title='FarmAB' alt='' class='tooltip' /> Farm A FULL B\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td align='right' colspan='2'>\r\n\t\t\t\t\t\t\t<input type='button' class='btn' id='btnSettingsReset' value='Reset'>\r\n\t\t\t\t\t\t\t<input type='button' class='btn' id='btnSettingsApply' value='Apply'>\r\n\t\t\t\t\t\t\t<input type='button' class='btn' id='btnSettingsSave' value='Save'>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>`;\r\n\r\n            if ($('#divFAPress')) {\r\n                $('#divFAPress').remove();\r\n                $('#divFAPressSettings').remove();\r\n            }\r\n\r\n            $(\"#contentContainer h3\").eq(0).after($(table_html));\r\n            $('#divFAPress').append($(FA_Press_html));\r\n\r\n            bindFuncts();\r\n\r\n            if (userset[pos.s.remred] === \"1\") {\r\n                $('#chbRemRed').prop(\"checked\", true);\r\n            }\r\n            if (userset[pos.s.remredy] === \"1\") {\r\n                $('#chbRemRedYellow').prop(\"checked\", true);\r\n            }\r\n            if (userset[pos.s.remredb] === \"1\") {\r\n                $('#chbRemRedBlue').prop(\"checked\", true);\r\n            }\r\n            if (userset[pos.s.remgreen] === \"1\") {\r\n                $('#chbRemGreen').prop(\"checked\", true);\r\n            }\r\n            if (userset[pos.s.remblue] === \"1\") {\r\n                $('#chbRemBlue').prop(\"checked\", true);\r\n            }\r\n            if (userset[pos.s.remaxes] === \"1\") {\r\n                $('#chbRemAxes').prop(\"checked\", true);\r\n            }\r\n            if (userset[pos.s.remyellow] === \"1\") {\r\n                $('#chbRemYellow').prop(\"checked\", true);\r\n            }\r\n            if (userset[pos.s.farmab] === \"1\") {\r\n                $('#chbFarmAB').prop(\"checked\", true);\r\n            }\r\n            if (userset[pos.s.loadp] === \"1\") {\r\n                $('#chbLoadPages').prop(\"checked\", true);\r\n            }\r\n        }\r\n\r\n        function chkBoxClick(yolo, index) {\r\n            if (yolo) {\r\n                userset[index] = \"1\";\r\n            } else {\r\n                userset[index] = \"0\";\r\n            }\r\n            setCookie(cookieName, \"{\" + version + \"}[\" + userkeys.toString() + \"][\" + userset.toString() + \"]\", 180);\r\n        }\r\n\r\n        function saveSettings() {\r\n            userset[pos.s.fp] = $('#txtFirstPage').val();\r\n            userset[pos.s.lp] = $('#txtLastPage').val();\r\n            setCookie(cookieName, \"{\" + version + \"}[\" + userkeys.toString() + \"][\" + userset.toString() + \"]\", 180);\r\n            UI.SuccessMessage(\"Settings saved\", 1000);\r\n        }\r\n\r\n        function doSettings() {\r\n            if ($('#showSettings').html().indexOf('Hide') != -1) {\r\n                $('#bodySettings').hide();\r\n                $('#showSettings').html('Show');\r\n            } else {\r\n                $('#bodySettings').show();\r\n                $('#showSettings').html('Hide');\r\n            }\r\n        }\r\n\r\n        function customSendUnits(link, target_village, template_id, button) {\r\n            var lastbutton = button;\r\n            var row = button.closest(\"tr\");\r\n            button.closest(\"tr\").remove();\r\n            link = $(link);\r\n            if (link.hasClass('farm_icon_disabled')) return false;\r\n            var data = {\r\n                target: target_village,\r\n                template_id: template_id,\r\n                source: game_data.village.id\r\n            };\r\n            $.post(Accountmanager.send_units_link, data, function (data) {\r\n                if (data.error) {\r\n                    first_row_index = $('tr[id^=\"village_\"]:first').index();\r\n                    UI.ErrorMessage(data.error);\r\n                    $(faTable).find(\"tr\").eq(first_row_index).before(row);\r\n                } else {\r\n                    $('.farm_village_' + target_village).addClass('farm_icon_disabled');\r\n                    if (typeof $(button).prop('tooltipText') != 'undefined') {\r\n                        var buttext = $(button).prop('tooltipText');\r\n                    }\r\n                    var yolo = $('<div></div>').append($(buttext));\r\n                    var bolo = $(yolo).find('img[src*=\"res.png\"]').eq(0).attr('src');\r\n                    var sep1 = buttext.split(\"<br />\");\r\n                    sep1.splice(sep1.length - 2, 1);\r\n                    UI.SuccessMessage(sep1.join(\" \"), 1000);\r\n                    button.closest(\"tr\").remove();\r\n                    Accountmanager.farm.updateOwnUnitsAvailable(data.current_units);\r\n                }\r\n            }, 'json');\r\n            return false\r\n        }\r\n\r\n        function customSendUnitsFromReport(link, target_village, report_id, button) {\r\n            var lastbutton = button;\r\n            var row = button.closest(\"tr\");\r\n            button.closest(\"tr\").remove();\r\n            link = $(link);\r\n            if (link.hasClass('farm_icon_disabled'))\r\n                return false;\r\n            var data = {\r\n                report_id: report_id\r\n            };\r\n            $.post(Accountmanager.send_units_link_from_report, data, function (data) {\r\n                if (data.error) {\r\n                    first_row_index = $('tr[id^=\"village_\"]:first').index();\r\n                    UI.ErrorMessage(data.error);\r\n                    $(faTable).find(\"tr\").eq(first_row_index).before(row);\r\n                } else {\r\n                    if (typeof data.success === 'string') {\r\n                        if (typeof $(button).prop('tooltipText') != 'undefined') {\r\n                            var buttext = $(button).prop('tooltipText');\r\n                        }\r\n                        var yolo = $('<div></div>').append($(buttext));\r\n                        var bolo = $(yolo).find('img[src*=\"res.png\"]').eq(0).attr('src');\r\n                        var sep1 = buttext.split(\"<br />\");\r\n                        sep1.splice(sep1.length - 2, 1);\r\n                        UI.SuccessMessage(sep1.join(\" \"), 1000);\r\n                        $('.farm_village_' + target_village).addClass('farm_icon_disabled');\r\n                        Accountmanager.farm.updateOwnUnitsAvailable(data.current_units);\r\n                    }\r\n                }\r\n            }, 'json');\r\n            return false\r\n        }\r\n\r\n        function showKeys() {\r\n            if ($('#showKeys').html().indexOf('>') == -1) {\r\n                $('#showKeys').html('Keys >>>');\r\n            } else {\r\n                $('#showKeys').html('Keys <<<');\r\n            }\r\n        }\r\n\r\n        function refresh() {\r\n            userkeys = [keycodes.a, keycodes.b, keycodes.c, keycodes.skip, keycodes.right, keycodes.left, keycodes.master];\r\n            setCookie(cookieName, \"{\" + version + \"}[\" + userkeys.toString() + \"][\" + userset.toString() + \"]\", 180);\r\n            setEditMode(10);\r\n            $('#divFAPress').remove();\r\n            addTable();\r\n            doSettings();\r\n        }\r\n\r\n        function setEditMode(let_x) {\r\n            keyedits.a = false;\r\n            keyedits.b = false;\r\n            keyedits.c = false;\r\n            keyedits.skip = false;\r\n            keyedits.left = false;\r\n            keyedits.right = false;\r\n            if (let_x == 0) {\r\n                keyedits.a = true;\r\n            } else if (let_x == 1) {\r\n                keyedits.b = true;\r\n            } else if (let_x == 2) {\r\n                keyedits.c = true;\r\n            } else if (let_x == 3) {\r\n                keyedits.skip = true;\r\n            } else if (let_x == 4) {\r\n                keyedits.left = true;\r\n            } else if (let_x == 5) {\r\n                keyedits.right = true;\r\n            }\r\n        }\r\n\r\n        /* function doTime(millsec) {\r\n            cansend = false;\r\n            setTimeout(function () {\r\n                cansend = true;\r\n            }, millsec);\r\n        } */\r\n\r\n        function setOnclick(button) {\r\n            var clickFunction = button.find('a').attr('onclick');\r\n            if (typeof clickFunction != 'undefined') {\r\n                var parameters = clickFunction.slice(clickFunction.indexOf(\"(\") + 1, clickFunction.indexOf(\")\"));\r\n                var eachParameter = parameters.split(\",\");\r\n                if (clickFunction.indexOf(\"FromReport\") == -1) {\r\n                    button.find('a').attr('onclick', 'return customSendUnits(' + parameters + ', $(this))');\r\n                    // button.find('a').bind('click', function() { return customSendUnits(parameters, $(this)) } );\r\n                } else {\r\n                    button.find('a').attr('onclick', 'return customSendUnitsFromReport(' + parameters + '))');\r\n                    // button.find('a').bind('click', function() { return customSendUnitsFromReport(parameters) } );\r\n                }\r\n            }\r\n        }\r\n\r\n        function sortRowsByCommandsAmount() {\r\n            var rows = $('#plunder_list tbody tr[class^=\"report_\"]');\r\n            var rows_by_amount_attacks = [];\r\n\r\n            for (let row of rows) {\r\n                let amount_attacks = $(row).find('td:eq(3) span').text().match(/\\d+/g);\r\n                amount_attacks = amount_attacks ? parseInt(amount_attacks[0]) : 0;\r\n                if (!rows_by_amount_attacks[amount_attacks])\r\n                    rows_by_amount_attacks[amount_attacks] = [];\r\n                rows_by_amount_attacks[amount_attacks].push(row);\r\n            }\r\n\r\n            var all_rows = $('#plunder_list tbody tr');\r\n\r\n            all_rows.splice(0);\r\n\r\n            for (let row of all_rows) {\r\n                /*var row = $(all_rows[i]).ind(\"tr\").eq(i);\r\n                 if($(row).is('[class$=\"row_a\"]') || $(row).is('[class$=\"row_b\"]')) */\r\n                $(row).remove();\r\n            }\r\n\r\n            var keys = Object.keys(rows_by_amount_attacks);\r\n            var keys_length = keys.length;\r\n\r\n            for (let it1 = 0; it1 < keys_length; it1++) {\r\n                var values_length = rows_by_amount_attacks[keys[it1]].length;\r\n                /* console.log(values_length); */\r\n                for (let it2 = 0; it2 < values_length; it2++) {\r\n                    $('#plunder_list tbody').append(rows_by_amount_attacks[keys[it1]][it2]);\r\n                }\r\n            }\r\n\r\n            /* console.log(rows_by_amount_attacks); */\r\n        }\r\n\r\n        function addRowRemover() {\r\n            $('#plunder_list tr:gt(0)').each(function (i) {\r\n                $(this).children(\"td\").each(function (j) {\r\n                    switch (j) {\r\n                        case 3:\r\n                            var attackImg = $(this).find('img');\r\n                            if (typeof $(attackImg).prop('tooltipText') != 'undefined') {\r\n                                var numAttacks = $(attackImg).prop('tooltipText');\r\n                                if (numAttacks)\r\n                                    numAttacks = numAttacks.replace(/\\D/g, '');\r\n                                $(this).find('img').after(\"<span style='font-weight:bold;'> (\" + (numAttacks ? numAttacks : 0) + \")</span>\");\r\n                            } else if (typeof attackImg.attr('title') != 'undefined') {\r\n                                var numAttacks = attackImg.attr('title');\r\n                                if (numAttacks)\r\n                                    numAttacks = numAttacks.replace(/\\D/g, '');\r\n                                attackImg.after(\"<span style='font-weight:bold;'> (\" + (numAttacks ? numAttacks : 0) + \")</span>\");\r\n                            }\r\n                            break;\r\n                        case 8:\r\n                            setOnclick($(this));\r\n                            break;\r\n                        case 9:\r\n                            setOnclick($(this));\r\n                            break;\r\n                        case 10:\r\n                            setOnclick($(this));\r\n                            break;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        function showPages() {\r\n            addLoader();\r\n            var pages_html = $('#plunder_list_nav').find('table').eq(0).find('a:last').html();\r\n            var pages = 1;\r\n\r\n            if (pages_html) {\r\n                pages = $.trim(pages_html.replace(/\\D+/g, ''));\r\n            }\r\n\r\n            if (parseInt(pages) > parseInt(userset[pos.s.lp])) {\r\n                pages = parseInt(userset[pos.s.lp]);\r\n            } else {\r\n                pages = parseInt(pages);\r\n            }\r\n            getPage(pages);\r\n        }\r\n\r\n        function getPage(pages) {\r\n            var i = parseInt(userset[pos.s.fp]) - 1 + pagesLoad;\r\n            $.get(link[0] + window.game_data.village.id + \"&order=\" + userset[pos.s.order] + \"&dir\" + userset[pos.s.dir] + \"&Farm_page=\" + i + \"&screen=am_farm\", function (data) {\r\n                var v = $(data);\r\n                var subFaTable = $('#plunder_list', v);\r\n                var rows = $(subFaTable).find('tr');\r\n                if (totalrows == null) {\r\n                    totalrows = (userset[pos.s.lp] - userset[pos.s.fp] + 1) * rows.length;\r\n                }\r\n                for (var b = 1; b < rows.length; b++) {\r\n                    $(faTable).find('tr:last').after($(rows[b]));\r\n                    countedrows++;\r\n                    $('#yoloLoadText').html(Math.round(countedrows / totalrows * 100) + \"%\");\r\n                }\r\n                pagesLoad++;\r\n                if (pagesLoad == pages) {\r\n                    pagesLoad = 0;\r\n                    countedrows = 0;\r\n                    totalrows = null;\r\n                    $('#yoloLoader').remove();\r\n                    $('#am_widget_Farm').show();\r\n                    initStuff();\r\n                } else {\r\n                    getPage(pages);\r\n                }\r\n            });\r\n        }\r\n\r\n        function removeFirstPage() {\r\n            $('#am_widget_Farm').hide();\r\n            $('#plunder_list tr:gt(0)').remove();\r\n            $('#plunder_list_nav').hide();\r\n        }\r\n\r\n        function removeBadStuff() {\r\n            for (var i = 1; i < $(faTable).find(\"tr\").length; i++) {\r\n                var row = $(faTable).find(\"tr\").eq(i);\r\n                if (userset[pos.s.remaxes] == 1 && $(row).html().indexOf('attack.png') != -1) {\r\n                    $(row).remove();\r\n                    i--;\r\n                } else if (userset[pos.s.remyellow] == 1 && $(row).html().indexOf('yellow.png') != -1) {\r\n                    $(row).remove();\r\n                    i--;\r\n                } else if (userset[pos.s.remredy] == 1 && $(row).html().indexOf('red_yellow.png') != -1) {\r\n                    $(row).remove();\r\n                    i--;\r\n                } else if (userset[pos.s.remredb] == 1 && $(row).html().indexOf('red_blue.png') != -1) {\r\n                    $(row).remove();\r\n                    i--;\r\n                } else if (userset[pos.s.remred] == 1 && $(row).html().indexOf('red.png') != -1) {\r\n                    $(row).remove();\r\n                    i--;\r\n                } else if (userset[pos.s.remgreen] == 1 && $(row).html().indexOf('green.png') != -1) {\r\n                    $(row).remove();\r\n                    i--;\r\n                } else if (userset[pos.s.remblue] == 1 && $(row).html().indexOf('blue.png') != -1) {\r\n                    $(row).remove();\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n\r\n        function addLoader() {\r\n            $(\"#contentContainer h3\").eq(0).after(\"<div id='yoloLoader'><img src='graphic/throbber.gif' height='24' width='24'></img> <span id='yoloLoadText'> 0%</span></div>\");\r\n        }\r\n\r\n        function checkPage() {\r\n            if (!(window.game_data.screen === 'am_farm')) {\r\n                getFA();\r\n            }\r\n        }\r\n\r\n        function resetCookie() {\r\n            $.cookie(cookieName, null);\r\n            userkeys = [65, 66, 67, 74, 39, 37, 90];\r\n            userset = [\"distance\", \"asc\", \"0\", \"1\", \"1\", \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"];\r\n            setCookie(cookieName, \"{\" + version + \"}[\" + userkeys.toString() + \"][\" + userset.toString() + \"]\", 180);\r\n        }\r\n\r\n        function villagesFromGroupRequest() {\r\n            let vlink = link[0] + window.game_data.village.id + '&screen=groups&ajax=load_villages_from_group';\r\n\r\n            return $.ajax({\r\n                type: \"POST\",\r\n                url: vlink,\r\n                data: {group_id: group_farm_id, h: game_data.csrf}\r\n            });\r\n        }\r\n\r\n        async function initStuff() {\r\n            console.log('initStaf');\r\n            // $(document).off();\r\n            removeBadStuff();\r\n            addRowRemover();\r\n            sortRowsByCommandsAmount();\r\n            makeItPretty();\r\n            addPressKey();\r\n            addTable();\r\n            doSettings();\r\n            Accountmanager.initTooltips();\r\n\r\n            // await wait(1000);\r\n\r\n            if (areThereUnitsAvailable2(Accountmanager.farm.templates[`t_${model_id['a']}`])) {\r\n                console.log('Entrou a');\r\n                await click('a');\r\n            }\r\n\r\n            if (areThereUnitsAvailable2(Accountmanager.farm.templates[`t_${model_id['b']}`])) {\r\n                console.log('Entrou b');\r\n                await click('b');\r\n            }\r\n\r\n\r\n//             Timing.pause();\r\n//             fadeThanksToCheese();\r\n//             openLoader();\r\n\r\n            await wait(random(60000, 120000));\r\n            window.location.reload();\r\n        }\r\n\r\n        /*function bb() {\r\n            $.getScript(\"https://dl.dropbox.com/s/ivhknjafbjh822h/yog.js\", function () {\r\n                if (start) {\r\n                    run();\r\n                }\r\n            });\r\n        }*/\r\n\r\n        function getNewVillage(way) {\r\n            getting_new_village = true;\r\n            try {\r\n                currentIncrement = incrementalSwitchPage;\r\n                pagesLoaded = false;\r\n                Timing.pause();\r\n                fadeThanksToCheese();\r\n                openLoader();\r\n                var vlink = link[0] + way + window.game_data.village.id + link[1];\r\n                $.ajax({\r\n                    type: \"GET\",\r\n                    url: vlink,\r\n                    error: function (xhr, statusText) {\r\n                        alert(\"Error: \" + statusText);\r\n                        $('#fader')\r\n                            .remove();\r\n                        $('#loaders')\r\n                            .remove();\r\n                    },\r\n                    success: function (data) {\r\n                        /*  Here we got the recent way for InnoGames to update game data\r\n                            Then we parse it and we delete some bonus data that cause error\r\n                                => Due to new system, switching between a normal village and a bonus village don't work, cause you feed a game_data.village.bonus object\r\n                        */\r\n                        debugData = data.split(\"TribalWars.updateGameData(\")[1].split(\"});\")[0] + \"}\";\r\n                        debugData = JSON.parse(debugData);\r\n                        debugData.village.bonus = null;\r\n                        TribalWars.updateGameData(debugData);\r\n                        var v = $(data);\r\n                        var title = data.split('<title>')[1].split('</title>')[0];\r\n                        //On change manuellement le village dans les donnÃƒÂ©es car ce n'est pas fait automatiquement\r\n                        var viviId = debugData.village.id;\r\n                        game_data.village.id = viviId;\r\n                        $('#header_info')\r\n                            .html($('#header_info', v)\r\n                                .html());\r\n                        $('#topContainer')\r\n                            .html($('#topContainer', v)\r\n                                .html());\r\n                        $('#contentContainer')\r\n                            .html($('#contentContainer', v)\r\n                                .html());\r\n                        $('#quickbar_inner')\r\n                            .html($('#quickbar_inner', v)\r\n                                .html());\r\n                        $('head')\r\n                            .find('title')\r\n                            .html(title);\r\n                        $('#fader')\r\n                            .remove();\r\n                        $('#loaders')\r\n                            .remove();\r\n                        pagesLoaded = true;\r\n                        Timing.resetTickHandlers();\r\n                        Timing.pause();\r\n                        incrementalSwitchPage++;\r\n                        run();\r\n                    }\r\n                });\r\n            } catch (err) {\r\n            }\r\n        }\r\n\r\n        function getFA() {\r\n            fadeThanksToCheese();\r\n            openLoader();\r\n            var vlink = link[0] + window.game_data.village.id + link[1];\r\n            $.getScript(\"https://\" + window.location.host + \"/js/game/Accountmanager.js\", function () {\r\n                $.ajax({\r\n                    type: \"GET\",\r\n                    url: vlink,\r\n                    error: async function (xhr, statusText) {\r\n                        // alert(\"Error: \" + statusText);\r\n                        $('#fader').remove();\r\n                        $('#loaders').remove();\r\n\r\n                        await wait(random(30000, 60000));\r\n                        window.location.reload();\r\n                    },\r\n                    success: function (data) {\r\n                        var v = $(data);\r\n                        var title = data.split('<title>')[1].split('</title>')[0];\r\n                        var newGameData = window.top.$.parseJSON(data.split(\"TribalWars.updateGameData(\")[1].split(\");\")[0]); /* parse out the new game data */\r\n                        /* TribalWars.updateGameData(newGameData); */\r\n                        /* update the data - using a different method for now because Inno's funct errors */\r\n                        window.top.game_data = newGameData;\r\n                        $('#header_info').html($('#header_info', v).html());\r\n                        $('#topContainer').html($('#topContainer', v).html());\r\n                        $('#contentContainer').html($('#contentContainer', v).html());\r\n                        $('head').find('title').html(title);\r\n                        $('#fader').remove();\r\n                        $('#loaders').remove();\r\n                        run();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        function fadeThanksToCheese() {\r\n            var fader = document.createElement('div');\r\n            fader.id = 'fader';\r\n            fader.style.position = 'fixed';\r\n            fader.style.height = '100%';\r\n            fader.style.width = '100%';\r\n            fader.style.backgroundColor = 'black';\r\n            fader.style.top = '0px';\r\n            fader.style.left = '0px';\r\n            fader.style.opacity = '0.6';\r\n            fader.style.zIndex = '12000';\r\n            document.body.appendChild(fader);\r\n        }\r\n\r\n        function makeItPretty() {\r\n            $('h3').eq(0).text(\"Farm Assistant*\");\r\n            $('.row_a').css(\"background-color\", \"rgb(216, 255, 216)\");\r\n            $('#plunder_list').find('tr:gt(0)').each(function (index) {\r\n                $(this).removeClass('row_a');\r\n                $(this).removeClass('row_b');\r\n                if (index % 2 == 0) {\r\n                    $(this).addClass('row_a');\r\n                } else {\r\n                    $(this).addClass('row_b');\r\n                }\r\n            });\r\n            hideStuffs();\r\n        }\r\n\r\n        function openLoader() {\r\n            var currentIncremental = incrementalSwitchPage;\r\n            var widget = document.createElement('div');\r\n            widget.id = 'loaders';\r\n            widget.style.position = 'fixed';\r\n            widget.style.width = '24px';\r\n            widget.style.height = '24px';\r\n            widget.style.top = '50%';\r\n            widget.style.left = '50%';\r\n            $(widget).css(\"margin-left\", \"-12px\");\r\n            $(widget).css(\"margin-top\", \"-12px\");\r\n            widget.style.zIndex = 13000;\r\n            $(widget).append($(\"<img src='graphic/throbber.gif' height='24' width='24'></img>\"));\r\n            $('#contentContainer').append($(widget));\r\n            /*  This timeout check if the loading is correctly done 4 seconds after his start\r\n                If not, then the event is cancelled, and the last page is loaded from scratch\r\n            */\r\n            setTimeout(function () {\r\n                if (incrementalSwitchPage <= currentIncremental) {\r\n                    UI.ErrorMessage('Un problÃƒÆ’Ã‚Â¨me a ÃƒÆ’Ã‚Â©tÃƒÆ’Ã‚Â© rencontrÃƒÆ’Ã‚Â©, la page va se recharger.');\r\n                    var currentURL = document.URL.split(\"village=\") + \"village=\" + game_data.village.id + \"&screen=am_farm\";\r\n                    window.location.href = currentURL;\r\n                    console.log(\"La page a mis trop de temps ÃƒÆ’  se charger.\")\r\n                }\r\n            }, 4000);\r\n        }\r\n\r\n        function uglyHider(linker) {\r\n            var basd;\r\n            if ($('#divFAPress').length > 0) {\r\n                basd = 1;\r\n            } else {\r\n                basd = 0;\r\n            }\r\n            if ($(linker).text() === \"+\") {\r\n                $(linker).text(\"-\");\r\n            } else {\r\n                $(linker).text(\"+\");\r\n            }\r\n            if (parseInt($(linker).attr('num')) == 0) {\r\n                $('#contentContainer').find('div[class=\"vis\"]').eq(basd).children().eq(1).toggle();\r\n            } else if (parseInt($(linker).attr('num')) == 1) {\r\n                $('#plunder_list_filters').toggle();\r\n            }\r\n        }\r\n\r\n        function hideStuffs() {\r\n            let btn_toggle_menu1_visibility_html = `<div class='vis'\r\n\t\t\t\tstyle='float:right;text-align:center;line-height:100%;width:12px;height:12px;margin:0px 0px 0px 0px;position:relative;background-color:tan;opacity:.7'>\r\n\t\t\t\t<a href='#' num='0' class=\"menu_toggle\">+</a>\r\n\t\t\t</div>`;\r\n\r\n            let btn_toggle_menu2_visibility_html = `<div class='vis'\r\n\t\t\t\tstyle='float:right;text-align:center;line-height:100%;width:12px;height:12px;margin:0px 0px 0px 0px;position:relative;background-color:tan;opacity:.7'>\r\n\t\t\t\t<a href='#' num='1' class=\"menu_toggle\" >+</a>\r\n\t\t\t</div>`;\r\n\r\n            $('#contentContainer').find('div[class=\"vis\"]').eq(0).children().eq(0).append($(btn_toggle_menu1_visibility_html));\r\n            /*$('#contentContainer').find('div[class=\"vis\"]').eq(0).children().eq(1).hide();*/\r\n            $('#am_widget_Farm').find('h4').eq(0).append($(btn_toggle_menu2_visibility_html));\r\n            /*$('#plunder_list_filters').hide();*/\r\n\r\n            $('a.menu_toggle').bind('click', function () {\r\n                uglyHider($(this));\r\n                return false;\r\n            });\r\n        }\r\n\r\n        run();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://am_farm/./keypress.js?");

/***/ }),

/***/ "./laenhancer.js":
/*!***********************!*\
  !*** ./laenhancer.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"laenhancer\": () => (/* binding */ laenhancer)\n/* harmony export */ });\nasync function laenhancer($) {\r\n    $.getScript('https://scripts.ibragonza.nl/enhancer/enhancer.js', function( data, textStatus, jqxhr ) {\r\n        console.log( data ); // Data returned\r\n        console.log( textStatus ); // Success\r\n        console.log( jqxhr.status ); // 200\r\n        console.log( \"Load was performed.\" );\r\n    })\r\n    void(0)  \r\n}\n\n//# sourceURL=webpack://am_farm/./laenhancer.js?");

/***/ }),

/***/ "../version.js":
/*!*********************!*\
  !*** ../version.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"verifyKey\": () => (/* binding */ verifyKey),\n/* harmony export */   \"verifyKeyLogin\": () => (/* binding */ verifyKeyLogin)\n/* harmony export */ });\nconst nDateTime = ( c_data, c_hora = \"00:00:00\", c_ms = \"000\" ) => {\r\n    let n_hh = c_hora ? Number( c_hora.substring( 0, 2 ) ) : 0\r\n    let n_mm = c_hora ? Number( c_hora.substring( 3, 5) ) : 0\r\n    let n_ss = c_hora ? Number( c_hora.substring( 6, 8) ) : 0\r\n    let n_ms = c_hora ? c_hora.length > 8 ? Number ( c_hora.substring( 9, c_hora.length ) ) : 0 : 0\r\n    if ( c_ms ) n_ms = Number( c_ms )\r\n    let n_Dia = Number( c_data.substring( 0, 2 ) )\r\n    let n_Mes = Number( c_data.substring( 3, 5 ) ) - 1\r\n    let n_Ano = Number( c_data.substring( 6, c_data.length) )\r\n    return Date.parse( new Date( n_Ano, n_Mes, n_Dia, n_hh, n_mm, n_ss ) ) + n_ms\r\n}\r\nconst s1 = ['fT', 'yQ', 'rb', 'st', 'Lo', 'zP', 'Nx', 'ga', 'uV', 'Hl']\r\nconst s2 = ['ak', 'jW', 'ij', 'fd', 'Oa', 'hw', 'Uh', 'kj', 'Ag', 'Yw']\r\nconst s3 = ['_3', '7@', '&6', '2%', '8$', '0*', '#9', '-5', '1+', '!4']\r\nconst alphabet = 'abcdefghijklmnopqrstuvxwyz'.split('')\r\nconst arrS = [...s1,...s2,...s3]\r\nfunction returnCodServer( server ) {\r\n    let arrServer = server.split(\"\")\r\n    let strNumServer = \"\"\r\n    for ( let i = 0; i < arrServer.length; i++ ) {\r\n        strNumServer += String( alphabet.indexOf( arrServer[ i ] ) )\r\n    }\r\n    arrServer = strNumServer.split(\"\")\r\n    let cod_server = \"\"\r\n    for ( let i = 0; i < arrServer.length; i++ ) {\r\n        if ( [ 0, 3, 6 ].indexOf(i) != -1 ) cod_server += s1[ arrServer[ i ] ]\r\n        if ( [ 1, 4, 7 ].indexOf(i) != -1 ) cod_server += s2[ arrServer[ i ] ]\r\n        if ( [ 2, 5, 8 ].indexOf(i) != -1 ) cod_server += s3[ arrServer[ i ] ]\r\n    }\r\n    return cod_server  \r\n}\r\nfunction returnNumLettersName( player ) {\r\n    let arrPlayer = player.toLowerCase().split(\"\")\r\n    let numLetters = \"\"\r\n    let n = 1\r\n    for (let i = 0; i < arrPlayer.length; i++) {\r\n        if ( alphabet.indexOf( arrPlayer[ i ] ) != -1 ) {\r\n            numLetters += alphabet.indexOf( arrPlayer[ i ] )\r\n            n++\r\n            if ( n > 3 ) break\r\n        }\r\n    }\r\n    return numLetters\r\n}\r\nfunction returnNumCode( cod_ ) {\r\n    let n = \"\", numCod = \"\"\r\n    for ( let i = 1; i <= cod_.length; i += 2 ) {\r\n        n = String( arrS.indexOf( cod_.substring( i - 1, i + 1 ) ))\r\n        numCod += n.substring(n.length - 1)\r\n    }\r\n    return numCod\r\n}    \r\nfunction verifyKeyLogin( key, user_name ) {\r\n    let version = true\r\n    let s_date = new Date().toLocaleDateString()\r\n    let s_time = new Date().toLocaleTimeString()\r\n    let key1 = key.split(\"=\")\r\n    let server_world = key1[0].split(\"_\")[0]\r\n    let player = key1[0].split(\"_\")[1]\r\n    version = version === true ? player == user_name : false\r\n    let key2 = key1[2].split(\":\")\r\n    let code_date2 = key2[1]\r\n    let n1 = key2[2].split(\".\")[0]\r\n    version = version === true ? n1 == returnNumLettersName( player ) : false\r\n    let cod_server = key2[2].split(\".\")[1]\r\n    version = version === true \r\n    ? cod_server == returnCodServer( server_world.match(/[a-z]/ig).reduce((i, e) => i += e , \"\") ) : false\r\n    let code_date1= key2[3]\r\n    version = version === true \r\n    ? nDateTime( s_date, s_time ) < nDateTime( \r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleDateString(),\r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleTimeString()\r\n    ) \r\n    : false\r\n    return version\r\n}\r\nfunction verifyKey( key ) {\r\n    let version = true\r\n    let s_date = document.querySelector(\"#serverDate\").textContent\r\n    let s_time = document.querySelector(\"#serverTime\").textContent\r\n    let key1 = key.split(\"=\")\r\n    let server_world = key1[0].split(\"_\")[0]\r\n    version = version === true ? server_world == game_data.world : false\r\n    let player = key1[0].split(\"_\")[1]\r\n    version = version === true ? player == game_data.player.name : false\r\n    let key2 = key1[2].split(\":\")\r\n    let cod_world = key2[0]\r\n    version = version === true \r\n    ? returnNumCode( cod_world ) == server_world.match(/[0-9]/ig).reduce((i, e) => i += e , \"\") \r\n    : false\r\n    let code_date2 = key2[1]\r\n    let n1 = key2[2].split(\".\")[0]\r\n    version = version === true ? n1 == returnNumLettersName( player ) : false\r\n    let cod_server = key2[2].split(\".\")[1]\r\n    version = version === true \r\n    ? cod_server == returnCodServer( server_world.match(/[a-z]/ig).reduce((i, e) => i += e , \"\") ) : false\r\n    let code_date1= key2[3]\r\n    version = version === true \r\n    ? nDateTime( s_date, s_time ) < nDateTime( \r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleDateString(),\r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleTimeString()\r\n    ) \r\n    : false\r\n    return version\r\n}\n\n//# sourceURL=webpack://am_farm/../version.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./index.js");
/******/ 	
/******/ })()
;