/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _general_version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/version */ \"../general/version.js\");\n/* harmony import */ var _marketPremium__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./marketPremium */ \"./marketPremium.js\");\n\r\n\r\n\r\n\r\n'use strict'\r\n\r\nif ( document.readyState === \"loading\" ) {\r\n    document.addEventListener( \"DOMContentLoaded\", marketInit )\r\n} else {\r\n    marketInit()\r\n}\r\n\r\nfunction marketInit() {\r\n    console.log(\"MarketInit...\")\r\n    if ( (0,_general_version__WEBPACK_IMPORTED_MODULE_1__.returnVersion)() ) {\r\n        if ( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.verifyCurrentScreen)(\"market&mode=exchange\") ) (0,_marketPremium__WEBPACK_IMPORTED_MODULE_2__.marketPremium)()\r\n    }\r\n}\n\n//# sourceURL=webpack://market/./index.js?");

/***/ }),

/***/ "./marketPremium.js":
/*!**************************!*\
  !*** ./marketPremium.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"marketPremium\": () => (/* binding */ marketPremium)\n/* harmony export */ });\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n/* harmony import */ var _interfaces_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../interfaces/components */ \"../interfaces/components.js\");\n\r\n\r\n\r\n\r\nconst marketPremium = () => {\r\n    if ( game_data.screen == \"market\" && _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.screen_atual == \"market&mode=exchange\" ) {\r\n        // --- busca onfigurações salvas e se não tem seta as config padrões\r\n        if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].market_premium == undefined ) _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].market_premium = {}\r\n        if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].market_premium.config == undefined ) _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].market_premium.config = {\r\n            active : false,\r\n            option : 2,\r\n            sell : {\r\n                active: true,\r\n                storage_res: { \r\n                    wood: 1000,\r\n                    stone: 1000,\r\n                    iron: 1000\r\n                }, \r\n                sell_rate: {\r\n                    active: false,\r\n                    wood: 64,\r\n                    stone: 64,\r\n                    iron: 64\r\n                }\r\n            },\r\n            buy : { \r\n                active: true,\r\n                storage_max: 50,\r\n                buy_max: 5000,\r\n                buy_rate: {\r\n                    active: false,\r\n                    wood: 64,\r\n                    stone: 64,\r\n                    iron: 64\r\n                }\r\n            }\r\n        }\r\n        // --- salva as configurações\r\n        localStorage.setItem( \"players\", JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players ) )\r\n        const marketPremiumConfig = _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].market_premium.config\r\n        const resources = [ \"wood\", \"stone\", \"iron\" ]\r\n        const village = game_data.village\r\n        // --- botão enviar proposta de compra ou venda\r\n        const btn_premium = document.querySelector( \"input.btn-premium-exchange-buy\" )\r\n        const exchange = () => btn_premium.click()\r\n        // --- botão confirmar a troca\r\n        const confirm = async function() {\r\n            const a = setInterval(() => {\r\n                if ( !verConnection ) location.reload()\r\n                if ( document.querySelector(\"#premium_exchange button.btn.evt-confirm-btn.btn-confirm-yes\") ) {\r\n                    clearInterval( a )\r\n                    const btn_confirm = document.querySelector(\"#premium_exchange button.btn.evt-confirm-btn.btn-confirm-yes\")\r\n                    btn_confirm.click()\r\n                }\r\n            }, 1000 );\r\n            if ( document.querySelector(\"#premium_exchange button.btn.evt-confirm-btn.btn-confirm-yes\") ) await cancel()\r\n        }\r\n        // --- botão cancelar a troca\r\n        const cancel = async function() {\r\n            const a = setInterval(() => {\r\n                if ( !verConnection ) location.reload()\r\n                if ( document.querySelector(\"#premium_exchange  button.btn.evt-cancel-btn.btn-confirm-no\") ) {\r\n                    clearInterval( a )\r\n                    const btn_cancel = document.querySelector(\"#premium_exchange  button.btn.evt-cancel-btn.btn-confirm-no\")\r\n                    btn_cancel.click()    \r\n                }\r\n            }, 1000 );\r\n        }\r\n        // --- coleta a média diária dos 7 últimos dias e calcula a média dos 7 últimos dias\r\n        const readDataPremium = () => {\r\n            const objDailyAverage = {}\r\n            const objResurses = {}\r\n            const objMed = {}\r\n            const objMin = {}\r\n            const objMax = {}\r\n            const doc = document.querySelector( \"#content_value div.vis script\" ).innerText.replaceAll( '\\n','' ).replaceAll( \" \", \"\" )\r\n            let arrDoc = doc.split( \",details:\" )\r\n            for ( let i = 0; i < resources.length; i++ ) {\r\n                objDailyAverage[ resources[ i ] ] = JSON.parse( arrDoc[ i ].split( \",data:\" )[ 1 ] )\r\n            }\r\n            for (const key in objDailyAverage) {\r\n                if (Object.hasOwnProperty.call(objDailyAverage, key)) {\r\n                    objResurses[ key ] = []\r\n                    for (let i = 0; i < objDailyAverage[ key ].length; i++) {\r\n                        if ( objDailyAverage[key][i][1] * 1 != 0 ) {\r\n                            objResurses[ key ].push( objDailyAverage[key][i][1] * 1 )\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (const key in objResurses) {\r\n                if (Object.hasOwnProperty.call(objResurses, key)) {\r\n                    objMin[key] = objResurses[key][0]\r\n                    objMed[key] = 0\r\n                    objMax[key] = 0\r\n                    for (let i = 0; i < objResurses[key].length; i++) {\r\n                        objMed[key] += objResurses[key][i]\r\n                        if ( objResurses[key][i] > objMax[key] ) objMax[key] = objResurses[key][i]\r\n                        if ( objResurses[key][i] < objMin[key] ) objMin[key] = objResurses[key][i]\r\n                    }\r\n                    objMed[key] = objMed[key] / objResurses[key].length\r\n                }\r\n            }\r\n            return { res : objResurses, med: objMed, min: objMin, max: objMax } \r\n        }\r\n        // --- buscando dados da página...\r\n        const arr_premium = Array.from( document.querySelector( \"#premium_exchange_form > table > tbody\" ).querySelectorAll( \"tr\" ))\r\n        // --- onde será colocado a taxa praticada para a compra\r\n        const arrDivBuy = Array.from(arr_premium[4].querySelectorAll(\"td.center\")).map((e) => e.children[2])\r\n        // --- aonde será colocado a taxa praticada para venda\r\n        const arrDivSell = Array.from(arr_premium[5].querySelectorAll(\"td.center\")).map((e) => e.children[2])\r\n        let elem\r\n        const arrBuyRate = [], arrSellRate = []\r\n        for ( let i = 0; i < arrDivBuy.length; i++ ) {\r\n            elem = document.createElement(\"span\")\r\n            elem.style = \"color: blue\"\r\n            elem.textContent = \"1000\"\r\n            arrDivBuy[i].prepend(elem)\r\n            arrBuyRate[i] = elem\r\n            elem = document.createElement(\"span\")\r\n            elem.style = \"color: blue\"\r\n            elem.textContent = \"1000\"\r\n            arrDivSell[i].prepend(elem)\r\n            arrSellRate[i] = elem\r\n        }\r\n        // --- faz a leitura dos dados do mercado premium\r\n        const readPremium = () => {\r\n            // --- estoque\r\n            const arrStock = Array.from(arr_premium[1].querySelectorAll(\"td.center\")).map((e) => e.innerText.trim())\r\n            // --- capacidade\r\n            const arrCapacity = Array.from(arr_premium[2].querySelectorAll(\"td.center\")).map((e) => e.innerText.trim())\r\n            // --- taxas\r\n            const arrRate = Array.from(arr_premium[3].querySelectorAll(\"div.premium-exchange-sep\")).map((e) =>  e.innerText.trim()) // mad:0 , arg:3, fer:6\r\n            // --- inputs de compra\r\n            const arrBuy = Array.from(arr_premium[4].querySelectorAll(\"input.premium-exchange-input\"))\r\n            // --- custos de compra pps\r\n            const arrCost = Array.from(arr_premium[4].querySelectorAll(\"span.cost\")).map( e => e.innerText )\r\n            // --- inputs de venda\r\n            const arrSell = Array.from(arr_premium[5].querySelectorAll(\"input.premium-exchange-input\"))\r\n            const objPremium = { \r\n                wood: {\r\n                    stock: arrStock[0] * 1,     // --- estoque\r\n                    capacity: arrCapacity[0] * 1,  // --- capacidade\r\n                    rate: arrRate[0] * 1,      // --- taxa\r\n                    buy: (val) => arrBuy[0].value = val,     // --- compra\r\n                    getBuy: () => arrBuy[0].value,\r\n                    buy_cost: arrCost[0] * 1,\r\n                    buy_rate : (val) => arrBuyRate[0].textContent = `${val} `,\r\n                    sell: (val) => arrSell[0].value = val,     // --- venda\r\n                    getSell: () => arrSell[0].value,\r\n                    sell_rate: (val) => arrSellRate[0].textContent = `${val} `\r\n                },\r\n                stone: {\r\n                    stock: arrStock[1] * 1,\r\n                    capacity: arrCapacity[1] * 1,\r\n                    rate: arrRate[3] * 1,\r\n                    buy: (val) => arrBuy[1].value = val,\r\n                    getBuy: () => arrBuy[1].value,\r\n                    buy_cost: arrCost[1] * 1,\r\n                    buy_rate : (val) => arrBuyRate[1].textContent = `${val} `,\r\n                    sell: (val) => arrSell[1].value = val,\r\n                    getSell: () => arrSell[1].value,\r\n                    sell_rate: (val) => arrSellRate[1].textContent = `${val} `\r\n                },\r\n                iron: {\r\n                    stock: arrStock[2] * 1,\r\n                    capacity: arrCapacity[2] * 1,\r\n                    rate: arrRate[6] * 1,\r\n                    buy: (val) => arrBuy[2].value = val,\r\n                    getBuy: () => arrBuy[2].value,\r\n                    buy_cost: arrCost[2] * 1,\r\n                    buy_rate : (val) => arrBuyRate[2].textContent = `${val} `,\r\n                    sell: (val) => arrSell[2].value = val,\r\n                    getSell: () => arrSell[2].value,\r\n                    sell_rate: (val) => arrSellRate[2].textContent = `${val} `\r\n                }\r\n            }\r\n            return objPremium\r\n        }\r\n        // --- retorna objeto negociado(entrando e saindo)\r\n        function objBusiness( type = \"entry\" ) {\r\n            const tablesStatusBar = Array.from(document.querySelectorAll('#market_status_bar table'))\r\n            const objectBusiness = {}\r\n            if ( tablesStatusBar.length > 1 ) {\r\n                const thBusiness =  Array.from(tablesStatusBar[1].querySelectorAll(\"th\"))\r\n                const arrResources = Array.from( thBusiness[ type == \"entry\" ? 0 : 1 ].querySelectorAll( \"span.nowrap\" )).map(( e, i, a ) =>  e.children[ 0 ].classList[ 2 ] )\r\n                if ( thBusiness[ type == \"entry\" ? 0 : 1 ].querySelector( \"span.premium\" ) ) arrResources.push( \"premium\" )\r\n                const arrValues = thBusiness[ type == \"entry\" ? 0 : 1 ].textContent.split(\" \").filter( e => e * 1 > 0 )\r\n                for ( let resource = 0; resource < arrResources.length; resource++ ) {\r\n                    objectBusiness[arrResources[resource]] = arrValues[resource].replace(\".\",\"\") * 1\r\n                }    \r\n            }\r\n            return objectBusiness\r\n        }\r\n        function printBusinessResults() {\r\n            const premiumEntry = Number(objBusiness()[\"premium\"]) || 0\r\n            const premiumExit = Number(objBusiness(\"Exit\")[\"premium\"]) || 0\r\n            const totalResourceEntry = () => {\r\n                let x = 0\r\n                for (let res = 0; res < resources.length; res++) {\r\n                    x += objBusiness()[resources[res]] || 0\r\n                }\r\n                return x\r\n            }\r\n            const totalResourcesExit = () => {\r\n                let x = 0\r\n                for (let res = 0; res < resources.length; res++) {\r\n                    x += objBusiness(\"Exit\")[resources[res]] || 0\r\n                }\r\n                return x\r\n            }\r\n            let newElem\r\n            if ( !document.querySelector(\"#business_result\") ) {\r\n                newElem = document.createElement(\"table\")\r\n                document.querySelector(\"#content_value > table:nth-child(3) > tbody > tr > td:nth-child(2)\").prepend(newElem)\r\n                newElem.id = \"business_result\"\r\n            }\r\n            newElem = document.querySelector(\"#business_result\")\r\n            newElem.innerHTML = `<tbody>\r\n            <tr>\r\n                <th>\r\n                    <span class=\"nowrap\">Taxa Compra: <span style=\"color: blue;\">${ String( new Intl.NumberFormat('de-DE').format( parseInt( totalResourceEntry() / premiumExit ) || 0 )).trim() }</span></span>\r\n                    <span class=\"nowrap\">Taxa Venda: <span style=\"color: Blue;\">${ String( new Intl.NumberFormat('de-DE').format(parseInt( totalResourcesExit() / premiumEntry ) || 0 )).trim() } </span></span>\r\n                </th>\r\n                <th>\r\n                    <span class=\"nowrap\">Resource Ganhos: <span style=\"color: ${ (totalResourceEntry() - totalResourcesExit()) * 1 >= 0 ? \"blue\" : \"red\" };\">${ String( new Intl.NumberFormat('de-DE').format( totalResourceEntry() - totalResourcesExit() || 0 ) ).trim() } </span></span>\r\n                    <span class=\"nowrap\">Premium Ganhos: <span style=\"color: ${ ( premiumEntry - premiumExit ) >= 0 ? \"blue\" : \"red\" };\">${ String( premiumEntry - premiumExit || 0 ).trim() } </span></span>\r\n                </th>\r\n            </tr>\r\n            </tbody>`\r\n        }\r\n        // --- coeficiente aplicado sobre a quantidade de recursos em estoque( as taxas sobem de acordo com o estoque disponível )\r\n        const coStorage = ( total_res, storage ) => ( \r\n            parseInt( \r\n                ( ( \r\n                ( total_res * 1 ) / ( storage * 1 ) \r\n                ) * 0.35\r\n                ) + 1 \r\n            )\r\n        )\r\n        // --- coeficiente aplicado sobre a hora do dia e o quanto subiu a taxa ontem/anteontem ( 1 + ( h * (tx[d-1]/tx[d-2]) / 24 ) )\r\n        const coProgress = ( obj ) => (\r\n            obj.length < 2 ? 1 \r\n            : obj[ obj.length - 2 ] =  false ? 0 \r\n            : 1 + ( new Date().getHours() * ( ( obj[ obj.length - 1 ] / obj[ obj.length - 2 ] ) - 1 ) / 24 )\r\n        )\r\n        // --- calcula e retorna o valor base de compra ou venda de acordo com a opção do usuário\r\n        function return_base( mov, opt, key, objRateDaily ) {\r\n            // --- obj c médias dos últimos 7 dias\r\n            const objHistory = readDataPremium()\r\n            let dMin, dMax, dMed\r\n            if ( (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString(), new Date().toLocaleTimeString() ) >= (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString(), \"04:00:00\" ) ) {\r\n                // --- menor valor do dia\r\n                dMin = objRateDaily[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) ][ key ].min\r\n                // --- maior valor do dia\r\n                dMax = objRateDaily[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) ][ key ].max\r\n            } else {\r\n                // --- menor valor do dia\r\n                dMin = objRateDaily[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) - 24 * 3600 * 1000 ][ key ].min\r\n                // --- maior valor do dia\r\n                dMax = objRateDaily[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) - 24 * 3600 * 1000 ][ key ].max\r\n            }\r\n            // --- média do dia\r\n            dMed = ( dMax + dMin ) / 2\r\n            // --- total de recursos(estoque + entrando)\r\n            let total_res = ( ( village[ key ] * 1 ) + ( objBusiness()[ key ] * 1 || 0 ) )\r\n            // --- capacidade de estoque\r\n            let storage = village.storage_max\r\n            // --- valor base para cada tipo de jogo\r\n            let base\r\n            if ( mov == 'buy' ) {\r\n                // --- compra\r\n                if ( opt == 0 ) base = ( objHistory.med[ key ] < 64 ? ( 64 + dMin ) / 2 : ( objHistory.med[ key ] + dMin ) / 2 ) * 1.30\r\n                if ( opt == 1 ) base = ( objHistory.max[ key ] < 64 ? ( 64 + dMax ) / 2 : ( objHistory.max[ key ] + dMax ) / 2 ) * 1.10\r\n                if ( opt == 2 ) base = ( objHistory.med[ key ] < 64 ? ( 64 + dMax + dMed ) / 3 : ( objHistory.med[ key ] + dMax + dMed ) / 3 ) //* 1.10\r\n                base = parseInt( base * 1.10 * coProgress( objHistory.res[ key ] ) * coStorage( total_res, storage ) )\r\n            } else {\r\n                // --- venda\r\n                if ( opt == 0 ) base = ( objHistory.med[ key ] < 64 ? ( 64 + dMin ) / 2 : ( objHistory.med[ key ] + dMin ) / 2 )\r\n                if ( opt == 1 ) base = ( objHistory.max[ key ] < 64 ? ( 64 + dMax ) / 2 : ( objHistory.max[ key ] + dMax ) / 2 ) //* 1 / 1.20\r\n                if ( opt == 2 ) base = ( objHistory.med[ key ] < 64 ? ( 64 + dMax + dMed ) / 3 : ( objHistory.med[ key ] + dMax + dMed ) / 3 ) //* 1 / 1.10\r\n                base = parseInt( base * ( 1 / 1.10 ) * coProgress( objHistory.res[ key ] ) * coStorage( total_res, storage ) )\r\n            }\r\n            return base < 65 ? 65 : base\r\n        }\r\n        // --- executa a oferta\r\n        const setExchange = ( opt, key ) => {\r\n            const objPremium = readPremium()\r\n            // --- valor de retorno caso envie a opção de compra ou venda\r\n            let action = [false]\r\n            // --- capacidade de estoque\r\n            let storage = village.storage_max\r\n            // --- declarando\r\n            let limit_max, limit, base\r\n            console.log( `Evaluating ${key} market...` )\r\n            console.log( `Rate Now : ${objPremium[key].rate}` )\r\n            // --- salva e a maior e menor taxa do dia\r\n            const objRateDaily = saveRateDaily( objPremium[key].rate, key )\r\n            console.log( objRateDaily )\r\n            // ----------------------- VENDA DE RECURSOS -----------------------\r\n            console.log( `Sell Active: ${marketPremiumConfig.sell.active}` )\r\n            console.log(`${key} disnível : ${Number(document.all[ key ].innerText) * 1}`)\r\n            // --- venda de recursos quando tem recursos para vender e usuário determinar\r\n            if ( marketPremiumConfig.sell.active && ( Number(document.all[ key ].innerText) * 1 ) + 1000 - objPremium[ key ].rate >= marketPremiumConfig.sell.storage_res[ key ] && objPremium[key].capacity > objPremium[key].stock ) {\r\n                objPremium[ key ].buy(\"\")\r\n                // --- valor base para cada tipo de jogo\r\n                if ( !marketPremiumConfig.sell.sell_rate.active ) {\r\n                    base = return_base( \"sell\", opt, key, objRateDaily )\r\n                } else {\r\n                    base = marketPremiumConfig.sell.sell_rate[ key ] * 1\r\n                }\r\n                let dMin, dMax, dMed\r\n                if ( (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString(), new Date().toLocaleTimeString() ) >= (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString(), \"01:00:00\" ) ) {\r\n                    // --- menor valor do dia\r\n                    dMin = objRateDaily[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) ][ key ].min\r\n                    // --- maior valor do dia\r\n                    dMax = objRateDaily[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) ][ key ].max\r\n                } else {\r\n                    // --- menor valor do dia\r\n                    dMin = objRateDaily[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) - 24 * 3600 * 1000 ][ key ].min\r\n                    // --- maior valor do dia\r\n                    dMax = objRateDaily[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) - 24 * 3600 * 1000 ][ key ].max\r\n                }\r\n                // --- média do dia\r\n                dMed = ( dMax + dMin ) / 2\r\n                // --- total de mercadores\r\n                let totalMerchant = document.querySelector(\"#market_merchant_total_count\").textContent * 1\r\n                console.log( `Total de comerciantes: ${totalMerchant}` )\r\n                // --- mercador por taxa\r\n                let merchantPerRate = objPremium[ key ].rate <= base * 1 / 1.05 \r\n                                    ? totalMerchant - ( game_data.village.trader_away * 1 )\r\n                                    : parseInt( totalMerchant / 2 ) - ( game_data.village.trader_away * 1 )\r\n                console.log( `Mercadores disponíveis na taxa atual: ${merchantPerRate}` )\r\n                // --- total mercadores disponíveis\r\n                let atHandMerchant = totalMerchant - ( game_data.village.trader_away * 1 ) >= merchantPerRate ? merchantPerRate : totalMerchant - ( game_data.village.trader_away * 1 )\r\n                console.log(`Total de mercadores disponíveis : ${atHandMerchant}`)\r\n                // --- limit max\r\n                limit_max = ( Number(document.all[ key ].innerText) * 1 ) - ( ( marketPremiumConfig.sell.storage_res[ key ] * 1 ) )\r\n                // --- limit de venda por vez\r\n                limit = Math.round( objPremium[ key ].rate * 10 / 1000 ) >= atHandMerchant \r\n                        ? ( atHandMerchant * 1000 ) - ( objPremium[ key ].rate * 1.12 )\r\n                        : ( Math.round( objPremium[ key ].rate * 10 / 1000 ) * 1000 ) - ( objPremium[ key ].rate * 1.12 )\r\n                // --- quando tem mercador e recursos manda a oferta - sprinter só c armazem acima de 90% de recursos\r\n                console.log( ( opt > 0 || ( opt == 0 && ( storage * 1 / 1.1 < Number(document.all[ key ].innerText) * 1 ) ) ) && limit > 0 && limit_max >= objPremium[ key ].rate * 1.12 )\r\n                if ( ( opt > 0 || ( opt == 0 && ( storage * 1 / 1.1 < Number(document.all[ key ].innerText) * 1 ) ) ) && limit > 0 && limit_max >= objPremium[ key ].rate * 1.12 ) {\r\n                    if ( objPremium[ key ].rate * 1 <= base ) {\r\n                        objPremium[ key ].sell( \r\n                            limit_max > limit \r\n                            ? parseInt( ( limit  / objPremium[ key ].rate ) * objPremium[ key ].rate ) - ( objPremium[ key ].rate ) \r\n                            : parseInt( ( limit_max / objPremium[ key ].rate ) * objPremium[ key ].rate ) - ( objPremium[ key ].rate )\r\n                        )\r\n                        if ( objPremium[ key ].getSell() > 0 ) {\r\n                            exchange()\r\n                            objPremium[ key ].sell(\"\")\r\n                            action = [true, \"sell\"]    \r\n                        }\r\n                        return action\r\n                    }\r\n                }\r\n            }\r\n            // ----------------------- COMPRA DE RECURSOS -----------------------\r\n            console.log( `Buy Active: ${marketPremiumConfig.buy.active}` )\r\n            // --- compra de recursos quando tem capacidade de estoque e usuário determinar\r\n            if ( marketPremiumConfig.buy.active && objPremium[ key ].stock * 1 > objPremium[ key ].rate * 1 ) {\r\n                objPremium[ key ].sell(\"\")\r\n                // --- total de recursos(estoque + entrando)\r\n                let total_res = ( ( village[ key ] * 1 ) + ( objBusiness()[ key ] * 1 || 0 ) )\r\n                // --- compra até % da capacidade do armazém que usuário determinar de 30 a 90%\r\n                limit_max = ( storage * ( ( marketPremiumConfig.buy.storage_max * 1 ) / 100 ) ) - total_res * 1\r\n                // --- compra no máximo 10% por vez ou o máximo que o player determinar\r\n                limit = storage * 0.1 > marketPremiumConfig.buy.buy_max * 1 ? marketPremiumConfig.buy.buy_max * 1 : storage * 0.1\r\n                // --- valor base para cada tipo de jogo\r\n                if ( !marketPremiumConfig.buy.buy_rate.active ) {\r\n                    base = return_base( \"buy\", opt, key, objRateDaily )\r\n                } else {\r\n                    base = marketPremiumConfig.buy.buy_rate[ key ] * 1\r\n                }\r\n                // --- só negocia quando tem capacidade no armazém e oferta condiz\r\n                if ( limit_max * 1 > 0 ) {\r\n                    if ( objPremium[ key ].rate * 1 >= base ) {\r\n                        // --- preenche a oferta de compra max até 90%\r\n                        objPremium[ key ].buy( \r\n                            objPremium[ key ].stock * 1 > limit_max * 1\r\n                            ? limit_max * 1 < limit * 1\r\n                            ? parseInt( limit_max * 1 )\r\n                            : parseInt( limit * 1 )\r\n                            : objPremium[ key ].stock * 1 < limit * 1\r\n                            ? parseInt( objPremium[ key ].stock * 1 )\r\n                            : parseInt( limit * 1 )\r\n                        )\r\n                        // --- manda opção de compra se tem pps para isso\r\n                        if ( game_data.player.pp * 1 > objPremium[ key ].buy_cost * 1 && objPremium[ key ].getBuy() > 0 ) {\r\n                            exchange()\r\n                            objPremium[ key ].buy(\"\")\r\n                            action = [true, \"buy\"]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return action\r\n        }\r\n        // --- salva a maior e menor taxas diárias\r\n        function saveRateDaily( rate, res ) {\r\n            let rD  = _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].market_premium.rate_daily\r\n            if ( !rD[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) ] ) {\r\n                rD[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) ] = {\r\n                    wood: {\r\n                        min: 2000,\r\n                        max: 0    \r\n                    },\r\n                    stone: {\r\n                        min: 2000,\r\n                        max: 0    \r\n                    },\r\n                    iron: {\r\n                        min: 2000,\r\n                        max: 0    \r\n                    }\r\n                }\r\n                // --- apaga registros abaixo de 7 dias\r\n                let n = (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) - ( 8 * 24 * 3600 * 1000 )\r\n                for (const key in rD) {\r\n                    if (Object.hasOwnProperty.call(rD, key)) {\r\n                        if ( key <= n ) delete rD[ key ]\r\n                    }\r\n                }\r\n            }    \r\n            let min = rD[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) ][res].min\r\n            let max = rD[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) ][res].max\r\n            rD[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) ][res].min = rate * 1 >= min * 1 ? min * 1 : rate * 1\r\n            rD[ (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( new Date().toLocaleDateString() ) ][res].max = rate * 1 <= max * 1 ? max * 1 : rate * 1\r\n            _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[ game_data.player.id ].market_premium.rate_daily = rD\r\n            localStorage.setItem( \"players\", JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players ) )\r\n            return rD\r\n        }\r\n        // --- criar interface\r\n        function marketPremiumInterface() {\r\n            console.log( marketPremiumConfig )\r\n            ;(0,_interfaces_components__WEBPACK_IMPORTED_MODULE_2__.insert_toggle)()\r\n            // --- CRIA A INTERFACE do MERCADO PREMIUM ---\r\n            // --- div principal\r\n            let elemNode = document.querySelector(\"#contentContainer\")\r\n            let newElem = document.createElement('div')\r\n            elemNode.prepend(newElem)\r\n            newElem.id = \"go_contairner\"\r\n            newElem.style = \"width: 99,9%; max-width: 1080px; background: #e3d5b3 url(https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic/index/main_bg.jpg) scroll right top repeat; position: relative; display: flow-root; justify-content: center flex-end; align-items: center; box-shadow: 1px 2px 3px 1px rgb(0 0 0 / 30%); border: 1px solid #7d510f; margin-bottom: 5px; padding: 5px; \"\r\n            // --- div c botão para selecionar CONFIGURAÇÃO e ativar/desativar MERCADO PREMIUM\r\n            elemNode = newElem\r\n            newElem = document.createElement('div')\r\n            elemNode.appendChild(newElem)\r\n            newElem.innerHTML = `<table class=\"vis\" style=\"width: 100%\"><tbody id=\"tbody_premium\" ><tr><td><a id='config_premium' style=\"cursor: pointer\"> » Configurações do mercado premium</a></td><td></td><td><span id=\"icon_info\" class=\"icon info-small\" style=\"cursor: pointer;\"></span></td><td style=\"text-align: right; padding-right: 10px;\"><label title=\"Ativar ou desativar o mercado premium\" for=\"premium_on_off\" style=\"cursor: pointer\"> Ativar mercado premium</label></td><td style=\"text-align: center;\"><input type=\"checkbox\" id=\"premium_on_off\" class=\"toggle\"><label for=\"premium_on_off\"></label></td></tr></tbody></table><div id=\"info_box\" class=\"info_box\" hidden><p style=\"margin: auto; line-height: 16px; color: darkblue;\">Let's Go utiliza as médias mínimas e máximas do histórico da sua região nos últimos sete(7) dias, buscando as melhores e mais atuais taxas de compra e venda para cada tipo de perfil.<br>As taxas também variam de acordo com o volume de recursos em estoque, fazendo com que compre mais recursos quando o estoque está baixo e venda mais quando está alto.<br>A quantidade de mercador usada na venda é proporcional ao preço mínimo do dia pelo preço atual, buscando deixar sempre uma reserva para quando atingir a menor taxa.<br><br><strong>Sprinter</strong> é indicado para o jogador que busca ser o primeiro do mundo, compra recursos e TORRA pps rapidamente. Trabalha com taxas baixas e só irá vender recursos com estoque acima de 90% de sua capacidade.<br><br><strong>Trade Premium</strong> é pra um perfil conservador, quem não quer arriscar comprar recursos. Trabalha com taxas mais altas, fazendo com que venda muito e compre pouco.<br><br><strong>Maximum Trade</strong> o máximo comércio é mais agressivo, comercializando um volume maior pois trabalha com taxas médias e uma diferença menor entre as taxas de compra e venda.<br><br>Escolha entre os perfis de mercado e deixe \"Let's Go\" trabalhar por você!</p></div><div id=\"error_box\" class=\"error_box\" hidden>\r\n            <div class=\"content\">Atenção!! Esta opção gasta pps rapidamente!! Confirmar a alteração?? <button id=\"confirm_sprinter\" class=\"btn evt-confirm-btn btn-confirm-yes\">Confirmar</button> <button id=\"cancel_sprinter\" class=\"btn evt-cancel-btn btn-confirm-no\" autofocus>Cancelar</button></div></div><div style=\"display: inline-block; margin-top: 10px; width: 100%; text-align: center;\"><label for=\"sprinter\" title=\"Priorizar a compra de recursos para uma evolução acelerada no jogo.\" style=\"cursor: pointer\"><input type=\"radio\" name=\"type_premium\" id=\"sprinter\" value=\"0\"> Sprinter</label><label for=\"trade_premium\" title=\"Prioriza a compra de pontos premium.\" style=\"cursor: pointer; margin-left: 100px; margin-right: 100px;\"><input type=\"radio\" name=\"type_premium\" id=\"trade_premium\" value=\"1\"> Trade Premium</label><label for=\"trade_all\" title=\"'Trade All' busca obter tanto recursos quanto premium.\" style=\"cursor: pointer\"><input type=\"radio\" name=\"type_premium\" id=\"trade_all\" value=\"2\"> Maximum Trade</label></div>`\r\n            setOption()\r\n            document.querySelector(\"#premium_on_off\").checked = marketPremiumConfig.active == true ? true : false  \r\n            document.querySelector(\"#tbody_premium > tr > td:nth-child(4) > label\").textContent = marketPremiumConfig.active == true ? \" Desativar mercado premium\" : \" Ativar mercado premium\"\r\n            // --- cria div aonde vai a tabela DE CONFIGURAÇÃO\r\n            elemNode = document.querySelector( '#go_contairner' )\r\n            newElem = document.createElement('div')\r\n            elemNode.appendChild( newElem )\r\n            newElem.id = \"view_config_premium\"\r\n            newElem.style = \"width: 100%\"\r\n            newElem.hidden = true\r\n            let html = `<table style=\"width: 100%;\" class=\"ui-sortable\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td valign=\"top\" style=\"width: 50%;\"><div class=\"vis\" style=\"height: 174px;\"><h4>Compra de recursos</h4><div class=\"widget_content\"><table style=\"width: 99%; border-collapse: separate; margin: 2px; display: inline-table;\" class=\"vis\"><tbody><tr><td colspan=\"2\" style=\"padding: 2px 2px; margin-top: 0px; display: block;\"><input type=\"checkbox\" class=\"toggle\" name=\"buy_active\" id=\"buy_active\"><label for=\"buy_active\"></label><label for=\"buy_active\" title='${ marketPremiumConfig.buy.active ? \"Selecione para desativar a compra de recursos\" : \"Selecione para ativar a compra de recursos\" }' style=\"cursor: pointer\">${ marketPremiumConfig.buy.active ? \" Desativar compra de recursos\" : \" Ativar compra de recursos\" }</label></td></tr><tr><td colspan=\"2\" style=\"padding: 2px 2px; margin-top: 2px; display: block;\"><label for=\"storage_max\" title=\"Limite máximo do armazem( 10 a 90% ).\" style=\"margin-left: 5px; cursor: pointer\">Comprar até o limite de <input type=\"number\" min=\"10\" max=\"90\" id=\"storage_max\" value=\"${ marketPremiumConfig.buy.storage_max }\">% do armazém.</label></td></tr><tr><td colspan=\"2\" style=\"padding: 2px 2px; margin-top: 2px; display: block;\"><label for=\"buy_max\" title=\"Compra sempre 10% do armazém por vez até a quantidade máxima por compra.\" style=\"margin-left: 5px; cursor: pointer\">Quantidade máxima <input type=\"number\" id=\"buy_max\" min=\"64\" max=\"${ document.querySelector('#market_merchant_total_count').textContent * 1000 }\" value=\"${ marketPremiumConfig.buy.buy_max }\"> recursos por compra.</label></td></tr>`\r\n            html += `<tr style=\"display: grid; margin-top: 2px;\"><td style=\"padding: 2px 2px;\"><input type=\"checkbox\" class=\"toggle\" id=\"select_buy\"><label for=\"select_buy\"></label><label for=\"select_buy\" title='${ marketPremiumConfig.buy.buy_rate.active ? \"Ative para definir as taxas de compra manualmente.\" : \"Desative para usar as taxas de compra dos modelos Let's Go!.\" }' style=\"cursor: pointer\">${ marketPremiumConfig.buy.buy_rate.active ? \" Desativar taxas de compras próprias\" : \" Ativar taxas de compra próprias\" }</label></td><td id=\"td_buy_rate\" colspan=\"2\" style=\"display: inline-flex; align-items: center; padding: 2px 5px; height: 46px; margin-top: 2px;\">  Taxas de Compra: <label for=\"buy_rate_wood\" title=\"Taxa mínima de compra - Madeira\" style=\"cursor: pointer; margin-left: 24px;\"> Madeira : <input type=\"number\" style=\"width: 80px;\" id=\"buy_rate_wood\" min=\"64\" max=\"2000\" value=\"${ marketPremiumConfig.buy.buy_rate.wood }\"></label><label for=\"buy_rate_stone\" title=\"Taxa mínima de compra - Argila\" style=\"cursor: pointer\"> Argila: <input type=\"number\" style=\"width: 80px;\" id=\"buy_rate_stone\" min=\"64\" max=\"2000\" value=\"${ marketPremiumConfig.buy.buy_rate.stone }\"></label><label for=\"buy_rate_iron\" title=\"Taxa mínima de compra - Ferro\" style=\"cursor: pointer\"> Ferro: <input type=\"number\" style=\"width: 80px;\" id=\"buy_rate_iron\" min=\"64\" max=\"2000\" value=\"${ marketPremiumConfig.buy.buy_rate.iron }\"><label></td></tr></tbody></table></div></div></td>`\r\n            html += `<td valign=\"top\" style=\"width: 50%;\"><div class=\"vis\" style=\"height: 174px;\"><h4>Venda de recursos</h4><div class=\"widget_content\"><table style=\"width: 99%; border-collapse: separate; margin: 2px; display: inline-table;\" class=\"vis\"><tbody><tr><td colspan=\"2\" style=\"padding: 2px 2px; margin-top: 0px; display: block;\"><input type=\"checkbox\" class=\"toggle\" name=\"sell_active\" id=\"sell_active\"><label for=\"sell_active\"></label><label for=\"sell_active\" title='${ marketPremiumConfig.sell.active ? \"Selecione para desativar a venda de recursos\" : \"Selecione para aivar a venda de recursos\" }' style=\"cursor: pointer\">${ marketPremiumConfig.sell.active ? \" Desativar venda de recursos\" : \" Ativar venda de recursos\" }</label></td></tr><tr><td colspan=\"2\" style=\"display: inline-flex; align-items: center; padding: 1px 5px; height: 46px; margin-top: 2px;\">  Reserva de recursos: <label for=\"res_wood\" title=\"Reserva de madeira\" style=\"cursor: pointer\"> Madeira:<input type=\"number\" id=\"res_wood\" min=\"0\" max=\"\" style=\"width: 80px;\" value=\"${ marketPremiumConfig.sell.storage_res.wood }\"></label><label for=\"res_stone\" title=\"Reserva de argila\" style=\"cursor: pointer\"> Argila:<input type=\"number\" id=\"res_stone\" min=\"0\" max=\"\" style=\"width: 80px;\" value=\"${ marketPremiumConfig.sell.storage_res.stone }\"></label><label for=\"res_iron\" title=\"Quantidade máxima por compra\" style=\"cursor: pointer\"> Ferro:<input type=\"number\" id=\"res_iron\" min=\"64\" max=\"\" style=\"width: 80px;\" value=\"${ marketPremiumConfig.sell.storage_res.iron }\"></label></td></tr>`\r\n            html += `<tr style=\"display: grid; margin-top: 2px;\"><td style=\"padding: 2px 2px;\"><input type=\"checkbox\" class=\"toggle\" id=\"select_sell\"><label for=\"select_sell\"></label><label for=\"select_sell\" title='${ marketPremiumConfig.sell.sell_rate.active  ? \"Ative para definir as taxas de venda manualmente.\" : \"Desative para usar as taxas de venda dos modelos Let's Go!.\" }' style=\"cursor: pointer\">${ marketPremiumConfig.sell.sell_rate.active ?  \" Desativar taxas de vendas próprias\" : \" Ativar taxas de vendas próprias\" }</label></td><td id=\"td_sell_rate\" colspan=\"2\" style=\"display: inline-flex; align-items: center; padding: 2px 5px; height: 46px; margin-top: 2px;\">  Taxas de Venda: <label for=\"sell_rate_wood\" title=\"Taxa de maxima de venda - Madeira\" style=\"cursor: pointer; margin-left: 24px;\"> Madeira: <input type=\"number\" style=\"width: 80px;\" id=\"sell_rate_wood\" min=\"64\" max=\"2000\" value=\"${ marketPremiumConfig.sell.sell_rate.wood }\"></label><label for=\"sell_rate_stone\" title=\"Taxa máxima de venda - Argila\" style=\"cursor: pointer\"> Argila : <input type=\"number\" style=\"width: 80px;\" id=\"sell_rate_stone\" min=\"64\" max=\"2000\"  value=\"${ marketPremiumConfig.sell.sell_rate.stone }\"></label><label for=\"sell_rate_iron\" title=\"Taxa máxima de venda - Ferro\" style=\"cursor: pointer\"> Ferro: <input type=\"number\" style=\"width: 80px;\" id=\"sell_rate_iron\" min=\"64\" max=\"2000\" value=\"${ marketPremiumConfig.sell.sell_rate.iron }\"><label></td></tr></tbody></table></div></div></td></tr></tbody></table><div style=\"padding:5px; text-align: center\"><input id=\"btn_save_config\" type=\"button\" class=\"btn\" value=\"Salvar configurações\" title=\"Salvar as configurações do mercado premium\"></div>`\r\n            newElem.innerHTML = html\r\n\r\n            document.querySelector(\"#buy_active\").checked = marketPremiumConfig.buy.active == true ? true : false\r\n            document.querySelector(\"#select_buy\").checked = marketPremiumConfig.buy.buy_rate.active == true ? true : false\r\n            document.querySelector(\"#sell_active\").checked = marketPremiumConfig.sell.active == true ? true : false\r\n            document.querySelector(\"#select_sell\").checked = marketPremiumConfig.sell.sell_rate.active == true ? true : false\r\n\r\n            select_buy( marketPremiumConfig.buy.buy_rate.active )\r\n            select_sell( marketPremiumConfig.sell.sell_rate.active )\r\n        }\r\n        // --- setar a opção escolhida na tela\r\n        function setOption() {\r\n            let opt = Array.from( document.getElementsByName(\"type_premium\") )\r\n            opt[ marketPremiumConfig.option ].checked = true\r\n            console.log( marketPremiumConfig, opt )\r\n        }\r\n        // --- ordena pelo maior(trade e Maximum Trade) ou menor(sprinter) armazem\r\n        function orderResources( opt ) {\r\n            let obj = {}\r\n            for (let i = 0; i < resources.length; i++) {\r\n                obj[ village[resources[ i ]] ] = resources[ i ]\r\n            }\r\n            if ( opt == 0 ) {\r\n                let obj_b = objBusiness()\r\n                for (const key in obj) {\r\n                    if ( obj_b[ obj[ key ] ] != undefined ) {\r\n                        obj[ ( key * 1 ) + ( obj_b[ obj[ key ] ] * 1 || 0 ) ] = obj[ key ]\r\n                        delete obj[ key ]    \r\n                    }\r\n                }\r\n            }\r\n            let arr_v = Object.keys( obj ).sort(( a, b ) => opt > 0 ? b - a : a - b )\r\n            let arr_r = []\r\n            for (const key in arr_v) {\r\n                arr_r.push( obj[ arr_v[ key ] ] )\r\n            }\r\n            return arr_r\r\n        }\r\n        // --- fica rodando entre os recursos e concretiza a troca\r\n        async function marketPremiumActive() {\r\n            let count = 0\r\n            let order = resources\r\n            const marketActive = setInterval( async () => {\r\n                if ( !verConnection ) location.reload()\r\n                // --- data e hora do servidor\r\n                let s_data = document.querySelector(\"#serverDate\").textContent\r\n                let s_hora = document.querySelector(\"#serverTime\").textContent\r\n                // --- quando entra um comando agendado\r\n                if ( return_key_command() - (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( s_data, s_hora ) < 80 * 1000 ) {\r\n                    clearInterval( marketActive )\r\n                    run_schedule()\r\n                }\r\n                print_rate()\r\n                printBusinessResults()\r\n                if ( count == 0 ) {\r\n                    order = orderResources( marketPremiumConfig.option )\r\n                }\r\n                console.log(\r\n                    `Market premium ${marketPremiumConfig.active}`,\r\n                    `Market Premium Option ${marketPremiumConfig.option}`\r\n                    )\r\n                // --- se teve problemas em finalizar\r\n                await cancel()\r\n                if ( marketPremiumConfig.active == false ) {\r\n                    clearInterval( marketActive )\r\n                } else {\r\n                    let action = [false]\r\n                    // --- avalia e retorna true e mandou proposta de compra ou venda\r\n                    action = setExchange( marketPremiumConfig.option, order[count] )\r\n                    // --- efetiva a troca\r\n                    if ( action[0] == true && action.length > 1 ) {\r\n                        await checkBeforeCommitAction(action)\r\n                    }\r\n                    count = count == 2 ? 0 : count + 1\r\n                }\r\n            }, ( random( 6, 12 ) * 1000 ) + ( setMillis( 500 ) ) )\r\n        }\r\n        async function checkBeforeCommitAction(action) {\r\n            const actInt = setInterval( async () => {\r\n                if (document.querySelector(\"#confirmation-msg\")) {\r\n                    clearInterval(actInt)\r\n                    if ( document.querySelector(\"#confirmation-msg tr.row_a\").textContent.split(\"  \").indexOf(\"0\") !== -1 ) return\r\n                    if ( action[1] == \"sell\" && !!document.querySelector(\"#confirmation-msg > div\").innerText.match(/[0-9]{1,2}[:]{1}[0-9]{2}[:]{1}[0-9]{2}/ig) ) {\r\n                        await confirm()\r\n                    }\r\n                    if ( action[1] == \"buy\" && !document.querySelector(\"#confirmation-msg > div\").innerText.match(/[0-9]{1,2}[:]{1}[0-9]{2}[:]{1}[0-9]{2}/ig)) {\r\n                        await confirm()\r\n                    }        \r\n                }\r\n            }, 1);\r\n        }\r\n        // --- apresenta as taxas atuais escolhidas\r\n        function print_rate() {\r\n            const objPremium = readPremium()\r\n                for (const key in objPremium) {\r\n                if (Object.hasOwnProperty.call(objPremium, key)) {\r\n                    const objRateDaily = saveRateDaily( objPremium[ key ].rate, key )\r\n                    if ( marketPremiumConfig.buy.buy_rate.active ) {\r\n                        objPremium[ key ].buy_rate( Number(marketPremiumConfig.buy.buy_rate[ key ]) )\r\n                    } else {\r\n                        objPremium[ key ].buy_rate( return_base( \"buy\", marketPremiumConfig.option, key, objRateDaily) )\r\n                    }\r\n                    if ( marketPremiumConfig.sell.sell_rate.active ) {\r\n                        objPremium[ key ].sell_rate( Number( marketPremiumConfig.sell.sell_rate[ key ]) )\r\n                    } else {\r\n                        objPremium[ key ].sell_rate( return_base( \"sell\", marketPremiumConfig.option, key, objRateDaily) )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // --- habilita ou desabilita a taxa de compra manual\r\n        function select_buy( active ) {\r\n            if ( active == false ) {\r\n                document.querySelector(\"#buy_rate_wood\").disabled = true\r\n                document.querySelector(\"#buy_rate_stone\").disabled = true\r\n                document.querySelector(\"#buy_rate_iron\").disabled = true\r\n            } else {\r\n                document.querySelector(\"#buy_rate_wood\").disabled = false\r\n                document.querySelector(\"#buy_rate_stone\").disabled = false\r\n                document.querySelector(\"#buy_rate_iron\").disabled = false\r\n            }\r\n        }\r\n        // --- habilita ou desabilita as taxas de venda manual\r\n        function select_sell( active ) {\r\n            if ( active == false ) {\r\n                document.querySelector(\"#sell_rate_wood\").disabled = true\r\n                document.querySelector(\"#sell_rate_stone\").disabled = true\r\n                document.querySelector(\"#sell_rate_iron\").disabled = true\r\n            } else {\r\n                document.querySelector(\"#sell_rate_wood\").disabled = false\r\n                document.querySelector(\"#sell_rate_stone\").disabled = false\r\n                document.querySelector(\"#sell_rate_iron\").disabled = false\r\n            }\r\n        }\r\n        // --- executa eventos do usuário nas configurações\r\n        function marketEventClick( e ) {\r\n            let atualize = false\r\n            let info_box = document.querySelector( \"#info_box\" )\r\n            if ( e.target.id == \"icon_info\" ) {\r\n                info_box.hidden = info_box.hidden == false ? true : false\r\n            } else {\r\n                if ( info_box.hidden == false ) info_box.hidden = true\r\n            }\r\n            let error_box = document.querySelector(\"#error_box\")\r\n            if ( e.target.id == \"sprinter\" ) {\r\n                error_box.hidden = false\r\n                document.querySelector(\"#cancel_sprinter\").autofocus = true\r\n            } else {\r\n                if ( e.target.id == \"confirm_sprinter\" ) {\r\n                    marketPremiumConfig.option = 0\r\n                    atualize = true\r\n                } else if ( e.target.id != \"trade_premium\" && e.target.id != \"trade_all\" && e.target.id != \"sprinter\" ) {\r\n                    if ( error_box.hidden == false ) setOption()\r\n                }\r\n                error_box.hidden = true\r\n            }\r\n            if ( e.target.id == \"config_premium\" ) {\r\n                let div_config = document.querySelector( \"#view_config_premium\" )\r\n                div_config.hidden = div_config.hidden == true ? false : true\r\n            } else if ( e.target.id == \"premium_on_off\" ) {\r\n                if ( objHistory.max['wood'] != null ) {\r\n                    marketPremiumConfig.active = marketPremiumConfig.active == true ? false : true\r\n                    atualize = true\r\n                } else {\r\n                    UI.ErrorMessage(\"Só é possível ativar o mercado premium a partir do segundo dia de mundo!\", 5000 )\r\n                    e.target.checked = false\r\n                }\r\n                e.path[2].childNodes[3].childNodes[0].innerText = e.target.checked == true ? \" Desativar mercado premium\" : \" Ativar mercado premium\"\r\n            } else if ( e.target.id == \"trade_premium\" || e.target.id == \"trade_all\" ) {\r\n                marketPremiumConfig.option = e.target.value\r\n                atualize = true\r\n            } else if ( e.target.id == \"buy_active\") {\r\n                e.path[1].childNodes[2].innerText = e.target.checked == true ? \" Desativar compra de recursos\" : \" Ativar compra de recursos\"\r\n                e.path[1].childNodes[2].attributes[1].value = e.target.checked == true ? \"Selecione para desativar a compra de recursos\" : \"Selecione para ativar a compra de recursos\"\r\n            } else if ( e.target.id == \"sell_active\") {\r\n                e.path[1].childNodes[2].attributes[1].value = e.target.checked == true ? \"Selecione para desativar a venda de recursos\" : \"Selecione para ativar a venda de recursos\"\r\n                e.path[1].childNodes[2].innerText = e.target.checked == true ? \" Desativar venda de recursos\" : \" Ativar venda de recursos\"\r\n            } else if ( e.target.id == \"select_buy\") {\r\n                select_buy(e.target.checked)\r\n                e.path[1].childNodes[2].attributes[1].value = e.target.checked == false ? \"Ative para definir as taxas de compra manualmente.\" : \"Desative para usar as taxas de compra dos modelos Let's Go!.\"\r\n                e.path[1].childNodes[2].innerText = e.target.checked == true ? \" Desativar taxas de compras próprias\" : \" Ativar taxas de compra próprias\"\r\n            } else if ( e.target.id == \"select_sell\") {\r\n                select_sell(e.target.checked)\r\n                e.path[1].childNodes[2].attributes[1].value = e.target.checked == false ? \"Ative para definir as taxas de venda manualmente.\" : \"Desative para usar as taxas de venda dos modelos Let's Go!.\"\r\n                e.path[1].childNodes[2].innerText = e.target.checked == true ?  \" Desativar taxas de vendas próprias\" : \" Ativar taxas de vendas próprias\"\r\n            } else if ( e.target.id == \"btn_save_config\") {\r\n                // --- buy\r\n                marketPremiumConfig.buy.active = document.querySelector(\"#buy_active\").checked\r\n                marketPremiumConfig.buy.storage_max = Number( document.querySelector(\"#storage_max\").value )\r\n                marketPremiumConfig.buy.buy_max = Number( document.querySelector(\"#buy_max\").value )\r\n                marketPremiumConfig.buy.buy_rate.active = document.querySelector(\"#select_buy\").checked\r\n                marketPremiumConfig.buy.buy_rate.wood = Number( document.querySelector(\"#buy_rate_wood\").value ),\r\n                marketPremiumConfig.buy.buy_rate.stone = Number( document.querySelector(\"#buy_rate_stone\").value ),\r\n                marketPremiumConfig.buy.buy_rate.iron = Number( document.querySelector(\"#buy_rate_iron\").value )\r\n                // --- sell\r\n                marketPremiumConfig.sell.active = document.querySelector(\"#sell_active\").checked\r\n                marketPremiumConfig.sell.storage_res.wood = Number(document.querySelector(\"#res_wood\").value )\r\n                marketPremiumConfig.sell.storage_res.stone = Number(document.querySelector(\"#res_stone\").value )\r\n                marketPremiumConfig.sell.storage_res.iron = Number(document.querySelector(\"#res_iron\").value )\r\n                marketPremiumConfig.sell.sell_rate.active = document.querySelector(\"#select_sell\").checked\r\n                marketPremiumConfig.sell.sell_rate.wood = Number(document.querySelector(\"#sell_rate_wood\").value )\r\n                marketPremiumConfig.sell.sell_rate.stone = Number(document.querySelector(\"#sell_rate_stone\").value )\r\n                marketPremiumConfig.sell.sell_rate.iron = Number(document.querySelector(\"#sell_rate_iron\").value )\r\n                UI.SuccessMessage( \"Configurações aplicadas com sucesso!\", 3000 )\r\n                setTimeout(() => document.querySelector( \"#view_config_premium\" ).hidden = true, 5000)\r\n                atualize = true\r\n            }\r\n            if ( atualize == true ) {\r\n                _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players[game_data.player.id].market_premium.config = marketPremiumConfig\r\n                localStorage.setItem(\"players\", JSON.stringify( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.players ))\r\n                print_rate()\r\n                printBusinessResults()\r\n                marketPremiumActive()\r\n            }\r\n        }\r\n        // --- inicio ---- apresenta a interface\r\n        marketPremiumInterface()\r\n        // --- captura eventos do usuário\r\n        document.addEventListener( \"click\", marketEventClick )\r\n        // --- apresenta dados no console\r\n        const objHistory = readDataPremium()\r\n        console.table(objHistory.min)\r\n        console.table(objHistory.med)\r\n        console.table(objHistory.max)\r\n        // --- apresenta as taxas escolhidas\r\n        print_rate()\r\n        printBusinessResults()\r\n        // --- quando ativo o mercado premium começa a interagir\r\n        if ( objHistory.max['wood'] != null ) {\r\n            if ( marketPremiumConfig.active == true ) marketPremiumActive()\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://market/./marketPremium.js?");

/***/ }),

/***/ "../general/init_login.js":
/*!********************************!*\
  !*** ../general/init_login.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"right_login_wrap\": () => (/* binding */ right_login_wrap),\n/* harmony export */   \"user_name\": () => (/* binding */ user_name)\n/* harmony export */ });\nconst right_login_wrap = !document.querySelector( \"#home div.right.login div.wrap\" ) ? false : document.querySelector( \"#home div.right.login div.wrap\" )\r\nconst user_name = !right_login_wrap ? false : right_login_wrap.querySelector(\"h2\").innerText == \"Login\" ? false : right_login_wrap.querySelector(\"h2\").innerText.split(\" \")[1]\r\n\n\n//# sourceURL=webpack://market/../general/init_login.js?");

/***/ }),

/***/ "../general/init_tw.js":
/*!*****************************!*\
  !*** ../general/init_tw.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cansed\": () => (/* binding */ cansed),\n/* harmony export */   \"dateServer\": () => (/* binding */ dateServer),\n/* harmony export */   \"fake_limit\": () => (/* binding */ fake_limit),\n/* harmony export */   \"farm_active\": () => (/* binding */ farm_active),\n/* harmony export */   \"link_ir_aldeia\": () => (/* binding */ link_ir_aldeia),\n/* harmony export */   \"link_mesma_aldeia\": () => (/* binding */ link_mesma_aldeia),\n/* harmony export */   \"link_troca_aldeia\": () => (/* binding */ link_troca_aldeia),\n/* harmony export */   \"loyalty_per_hour\": () => (/* binding */ loyalty_per_hour),\n/* harmony export */   \"mdf\": () => (/* binding */ mdf),\n/* harmony export */   \"n_aldeias\": () => (/* binding */ n_aldeias),\n/* harmony export */   \"players\": () => (/* binding */ players),\n/* harmony export */   \"premium_active\": () => (/* binding */ premium_active),\n/* harmony export */   \"scav_active\": () => (/* binding */ scav_active),\n/* harmony export */   \"screen_atual\": () => (/* binding */ screen_atual),\n/* harmony export */   \"screens\": () => (/* binding */ screens),\n/* harmony export */   \"timeServer\": () => (/* binding */ timeServer),\n/* harmony export */   \"timeZone\": () => (/* binding */ timeZone),\n/* harmony export */   \"type_comm\": () => (/* binding */ type_comm),\n/* harmony export */   \"units_speed\": () => (/* binding */ units_speed),\n/* harmony export */   \"verConnection\": () => (/* binding */ verConnection),\n/* harmony export */   \"verifyCurrentScreen\": () => (/* binding */ verifyCurrentScreen),\n/* harmony export */   \"world_delay\": () => (/* binding */ world_delay),\n/* harmony export */   \"world_speed\": () => (/* binding */ world_speed),\n/* harmony export */   \"world_tech\": () => (/* binding */ world_tech)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"../general/util.js\");\n/**\r\n * Inicialização de diversas constantes globais do projeto\r\n**/\r\n\r\n\r\n\r\n// --- retorna data do servidor - pagina\r\nconst dateServer = () => document.querySelector(\"#serverDate\").textContent\r\n\r\n// --- retorna hora do servidor - página\r\nconst timeServer = () => document.querySelector(\"#serverTime\").textContent\r\n\r\n// --- retorna diferença em segundos entre a data e hora do servidor e do sistema\r\nconst timeZone = () => Math.round( ( (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( dateServer(), timeServer() ) - Date.now() ) / 1000 ) + 1\r\n\r\n// --- retorna se está connectado ou não no jogo\r\nconst verConnection = typeof( game_data ) == undefined || !document.querySelector(\"#topContainer\") ? false : true\r\n\r\n// --- se pagina ou aba em foco\r\nconst cansed = false\r\n\r\n// --- conta premium ativa\r\nconst premium_active = game_data.features.Premium.active\r\n\r\n// --- numero de aldeias\r\nconst n_aldeias = game_data.player.villages\r\n\r\n// --- farm ativo\r\nconst farm_active = game_data.features.FarmAssistent.active\r\n\r\n// --- player em MDF\r\nconst mdf = window.location.search.indexOf( 't=' ) == -1 ? '' : window.location.search.substring( window.location.search.indexOf( 't=' ), window.location.search.indexOf( '&' ) )\r\n\r\n// --- link para troca de screen e aldeia\r\nconst link_troca_aldeia = `/game.php?${mdf}&village=n${game_data.village.id}&screen=`\r\n\r\n// --- link para troca de screen na mesma aldeia\r\nconst link_mesma_aldeia = `/game.php?${mdf}&village=${game_data.village.id}&screen=`\r\n\r\n// --- link ir aldeia e screen informados\r\nconst link_ir_aldeia = ( village_id, screen ) => `/game.php?${mdf}&village=${ village_id }&screen=${screen}`\r\n\r\n// --- screen atual\r\nconst screen_atual = location.href.substring( location.href.indexOf( 'screen' ) + 7 )\r\nconst verifyCurrentScreen = screen => window.self.location.search.indexOf( screen ) != -1\r\n\r\n// --- tipos de commandos\r\nconst type_comm = [ \"Ataque\", \"Apoio\", \"NT-2 Nobres\", \"NT-3 Nobres\", \"NT-4 Nobres\", \"NT-5 Nobres\", \"Snip\", \"Farm Player\" ]\r\n\r\n// --- scavenge\r\nconst scav_active = localStorage.scav_active == undefined ? false : localStorage.scav_active == 'true' ? true : false\r\n\r\n// --- screns aonde irá rodar programações\r\nconst screens = [ \"am_farm\", \"main\", \"train\", \"place&mode=scavenge\" ]\r\n\r\n// -------------------------- configurações do mundo -----------------------------\r\n\r\n// --- velocidade do mundo\r\nconst world_speed = !localStorage.world_speed ? 0 : Number( localStorage.world_speed )\r\n\r\n// --- velocidade das unidades\r\nconst units_speed = !localStorage.units_speed ? 0 : Number( localStorage.units_speed )\r\n\r\n// --- delay do mundo\r\nconst world_delay = !localStorage.world_delay ? 0 : Number( localStorage.world_delay )\r\n\r\n// --- lealdade por hora\r\nconst loyalty_per_hour = !localStorage.loyalty_per_hour ? 0 : Number( localStorage.loyalty_per_hour )\r\n\r\n// --- limite de fake\r\nconst fake_limit = !localStorage.fake_limit ? 0 : Number( localStorage.fake_limit )\r\n\r\n// --- tipo de pesquisa\r\nconst world_tech = !localStorage.world_tech ? 0 : Number( localStorage.world_tech )\r\n\r\n// --------------------------- Objeto principal do projeto ------------------------\r\nconst players = localStorage.players ? JSON.parse( localStorage.getItem( \"players\" ) ) : {\r\n    [ game_data.player.id ] : {\r\n        villageIDs : [],\r\n        villages : {},\r\n        schedules : {},\r\n        configs : {\r\n            n_loop : 0,\r\n            n_atk : 0,\r\n            active : true,\r\n            farm : { active: true, season: 150, timer: 30 },\r\n            msg : { place : true },\r\n            scav: true,\r\n            main: true,\r\n            train: true,\r\n            command : true,\r\n            overview : 60,\r\n            map : 60,\r\n            report : 60,\r\n            mail : 120,\r\n            market : 60,\r\n            ranking: 60,\r\n            ally: 60,\r\n            forum : 120,\r\n            info_player : 60,\r\n            mentor : 120,\r\n            premium : 60,\r\n            transfer : 300,\r\n            settings : 60,\r\n            place_command : 60,\r\n            place: 60,\r\n            event : 120\r\n        },\r\n        market_premium : {\r\n            config : {\r\n                active : false,\r\n                option : 2,\r\n                sell : {\r\n                    active: true,\r\n                    storage_res: { \r\n                        wood: 1000,\r\n                        stone: 1000,\r\n                        iron: 1000\r\n                    }, \r\n                    sell_rate: {\r\n                        active: false,\r\n                        wood: 64,\r\n                        stone: 64,\r\n                        iron: 64\r\n                    }\r\n                },\r\n                buy : { \r\n                    active: true,\r\n                    storage_max: 30,\r\n                    buy_max: 1000,\r\n                    buy_rate: {\r\n                        active: false,\r\n                        wood: 64,\r\n                        stone: 64,\r\n                        iron: 64\r\n                    }\r\n                }\r\n            },\r\n            rate_daily : {}\r\n        },\r\n    }\r\n}\n\n//# sourceURL=webpack://market/../general/init_tw.js?");

/***/ }),

/***/ "../general/util.js":
/*!**************************!*\
  !*** ../general/util.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cTimeToSeg\": () => (/* binding */ cTimeToSeg),\n/* harmony export */   \"nDateTime\": () => (/* binding */ nDateTime),\n/* harmony export */   \"nSegStrHora\": () => (/* binding */ nSegStrHora),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"setMillis\": () => (/* binding */ setMillis),\n/* harmony export */   \"sleep\": () => (/* binding */ sleep),\n/* harmony export */   \"strTimeToSec\": () => (/* binding */ strTimeToSec),\n/* harmony export */   \"waitCompleteLoad\": () => (/* binding */ waitCompleteLoad)\n/* harmony export */ });\n\r\n/**\r\n * Uso geral\r\n * Calcula o numero de segundos de uma string hora\r\n * \r\n * @param {String} string - uma string hora (hh:mm:ss)\r\n * @returns Number - segundos\r\n */\r\nconst strTimeToSec = string => {\r\n    let hora = Number( string.substring( 0, string.length - 6 ) ) * 3600\r\n    let min = Number( string.substring( string.length - 5, string.length - 3 ) ) * 60\r\n    return Number( string.substring( string.length - 2, string.length ) ) + hora + min\r\n}\r\n\r\n/**\r\n * Uso geral\r\n * @param {String} c_data \r\n * @param {String} c_hora \r\n * @param {String} c_ms \r\n * @returns Number - milesegundos representando as string data e/ou hora e/ou milisegundos informado\r\n */\r\nconst nDateTime = ( c_data, c_hora = \"00:00:00\", c_ms = \"000\" ) => {\r\n    let n_hh = c_hora ? Number( c_hora.substring( 0, 2 ) ) : 0\r\n    let n_mm = c_hora ? Number( c_hora.substring( 3, 5) ) : 0\r\n    let n_ss = c_hora ? Number( c_hora.substring( 6, 8) ) : 0\r\n    let n_ms = c_hora ? c_hora.length > 8 ? Number ( c_hora.substring( 9, c_hora.length ) ) : 0 : 0\r\n    if ( c_ms ) n_ms = Number( c_ms )\r\n    let n_Dia = Number( c_data.substring( 0, 2 ) )\r\n    let n_Mes = Number( c_data.substring( 3, 5 ) ) - 1\r\n    let n_Ano = Number( c_data.substring( 6, c_data.length) )\r\n    return Date.parse( new Date( n_Ano, n_Mes, n_Dia, n_hh, n_mm, n_ss ) ) + n_ms\r\n}\r\n/**\r\n * Uso Geral\r\n * @param {Number} s - numero de segundos\r\n * @returns String - no formato 'hh:mm:ss'\r\n */\r\nconst nSegStrHora = ( s ) => {\r\n    let h = parseInt( s / 3600 )\r\n    let m = parseInt( ( s - ( h * 3600 ) ) / 60 )\r\n    s = parseInt( s - ( h * 3600 ) - ( m * 60 ) )\r\n    if ( h < 10 ) h = '0' + h\r\n    if ( m < 10 ) m = '0' + m\r\n    if ( s < 10 ) s = '0' + s\r\n    return `${h}:${m}:${s}`\r\n}\r\n\r\n/**\r\n * Uso Geral\r\n * @param {String} c_hora \r\n * @returns Number - de segundos da hora\r\n */\r\nconst cTimeToSeg = ( c_hora ) => {\r\n    let l = c_hora.length\r\n    let n_hh = Number( c_hora.substring( 0, l - 6 ) )\r\n    let n_mm = Number( c_hora.substring( l - 5, l - 3 ) )\r\n    let n_ss = Number( c_hora.substring( l - 2, l ) )\r\n    \r\n    return Number(( n_hh * 3600 ) + ( n_mm * 60 ) + n_ss)\r\n}\r\n\r\n/**\r\n * Uso geral\r\n * @param {Number} min - milisegundos\r\n * @param {Number} max - milisegundos\r\n * @returns Number - Aleatório entre min e max\r\n */\r\nconst random = ( min, max ) => {\r\n    min = Math.ceil( min );\r\n    max = Math.floor( max );\r\n    return Math.floor( Math.random() * ( max - min + 1 ) ) + min;\r\n}\r\n\r\nvar millis = 0 //utilizado na função setMillis\r\n/**\r\n * Uso geral\r\n * \r\n * @param {Number} added_time \r\n * @returns Number - retorna um numero acrescido\r\n */\r\nfunction setMillis( added_time = 200 ) {\r\n    let tmp = millis;\r\n    millis += added_time;\r\n    return tmp;\r\n}\r\n\r\n/**\r\n * Uso Geral\r\n * Faz uma pausa na execussão \r\n * @param {Number} seg \r\n * @returns \r\n */\r\nasync function sleep(seg) {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve()\r\n        }, seg * 1000);\r\n    });\r\n}\r\n\r\nasync function waitCompleteLoad( fnCalback ) {\r\n    console.log(\"waitCompleteLoad...\")\r\n    if ( document.readyState == \"loading\" || document.readyState == \"interactive\" ) {\r\n        const completeLoad = setInterval( async () => {\r\n            if ( document.readyState == \"complete\" ) {\r\n                clearInterval(completeLoad)\r\n                fnCalback\r\n            }\r\n        }, 1);\r\n    } else if ( document.readyState == \"complete\" ) {\r\n        fnCalback\r\n    }\r\n}\n\n//# sourceURL=webpack://market/../general/util.js?");

/***/ }),

/***/ "../general/version.js":
/*!*****************************!*\
  !*** ../general/version.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"returnVersion\": () => (/* binding */ returnVersion)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"../general/util.js\");\n/* harmony import */ var _init_login__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init_login */ \"../general/init_login.js\");\n\r\n\r\n\r\nconst s1 = ['fT', 'yQ', 'rb', 'st', 'Lo', 'zP', 'Nx', 'ga', 'uV', 'Hl']\r\nconst s2 = ['ak', 'jW', 'ij', 'fd', 'Oa', 'hw', 'Uh', 'kj', 'Ag', 'Yw']\r\nconst s3 = ['_3', '7@', '&6', '2%', '8$', '0*', '#9', '-5', '1+', '!4']\r\nconst alphabet = 'abcdefghijklmnopqrstuvxwyz'.split('')\r\nconst arrS = [...s1,...s2,...s3]\r\n\r\nconst returnVersion = () => {\r\n    console.log(\"returnVersion...\")\r\n    if ( !localStorage.keyGO ) return false\r\n    if ( !JSON.parse( localStorage.keyGO ).key ) return false\r\n    if ( !_init_login__WEBPACK_IMPORTED_MODULE_1__.right_login_wrap && window.self.location.host.split(\".\")[0] != \"www\" ) {\r\n        return verifyKey( JSON.parse( localStorage.keyGO ).key )\r\n    } else {\r\n        if ( !_init_login__WEBPACK_IMPORTED_MODULE_1__.user_name ) return false\r\n        return verifyKeyLogin( JSON.parse( localStorage.keyGO ).key, _init_login__WEBPACK_IMPORTED_MODULE_1__.user_name )\r\n    }\r\n}\r\nfunction returnCodServer( server ) {\r\n    console.log(\"returnCodServer...\")\r\n    let arrServer = server.split(\"\")\r\n    let strNumServer = \"\"\r\n    for ( let i = 0; i < arrServer.length; i++ ) {\r\n        strNumServer += String( alphabet.indexOf( arrServer[ i ] ) )\r\n    }\r\n    arrServer = strNumServer.split(\"\")\r\n    let cod_server = \"\"\r\n    for ( let i = 0; i < arrServer.length; i++ ) {\r\n        if ( [ 0, 3, 6 ].indexOf(i) != -1 ) cod_server += s1[ arrServer[ i ] ]\r\n        if ( [ 1, 4, 7 ].indexOf(i) != -1 ) cod_server += s2[ arrServer[ i ] ]\r\n        if ( [ 2, 5, 8 ].indexOf(i) != -1 ) cod_server += s3[ arrServer[ i ] ]\r\n    }\r\n    return cod_server  \r\n}\r\nfunction returnNumLettersName( player ) {\r\n    console.log(\"returnNumLettersName...\")\r\n    let arrPlayer = player.toLowerCase().split(\"\")\r\n    let numLetters = \"\"\r\n    let n = 1\r\n    for (let i = 0; i < arrPlayer.length; i++) {\r\n        if ( alphabet.indexOf( arrPlayer[ i ] ) != -1 ) {\r\n            numLetters += alphabet.indexOf( arrPlayer[ i ] )\r\n            n++\r\n            if ( n > 3 ) break\r\n        }\r\n    }\r\n    return numLetters\r\n}\r\nfunction returnNumCode( cod_ ) {\r\n    console.log(\"returnNumCode...\")\r\n    let n = \"\", numCod = \"\"\r\n    for ( let i = 1; i <= cod_.length; i += 2 ) {\r\n        n = String( arrS.indexOf( cod_.substring( i - 1, i + 1 ) ))\r\n        numCod += n.substring(n.length - 1)\r\n    }\r\n    return numCod\r\n}    \r\nfunction verifyKeyLogin( key, user_name ) {\r\n    console.log(\"verifyKeyLogin...\")\r\n    let version = true\r\n    let s_date = new Date().toLocaleDateString()\r\n    let s_time = new Date().toLocaleTimeString()\r\n    let key1 = key.split(\"=\")\r\n    let server_world = key1[0].split(\"_\")[0]\r\n    let player = key1[0].split(\"_\")[1]\r\n    version = version === true ? player == user_name : false\r\n    let key2 = key1[2].split(\":\")\r\n    let code_date2 = key2[1]\r\n    let n1 = key2[2].split(\".\")[0]\r\n    version = version === true ? n1 == returnNumLettersName( player ) : false\r\n    let cod_server = key2[2].split(\".\")[1]\r\n    version = version === true \r\n    ? cod_server == returnCodServer( server_world.match(/[a-z]/ig).reduce((i, e) => i += e , \"\") ) : false\r\n    let code_date1= key2[3]\r\n    version = version === true \r\n    ? (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( s_date, s_time ) < (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( \r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleDateString(),\r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleTimeString()\r\n    ) \r\n    : false\r\n    return version\r\n}\r\nfunction verifyKey( key ) {\r\n    console.log(\"verifyKey...\")\r\n    let version = true\r\n    let s_date = document.querySelector(\"#serverDate\").textContent\r\n    let s_time = document.querySelector(\"#serverTime\").textContent\r\n    let key1 = key.split(\"=\")\r\n    let server_world = key1[0].split(\"_\")[0]\r\n    version = version === true ? server_world == game_data.world : false\r\n    let player = key1[0].split(\"_\")[1]\r\n    version = version === true ? player == game_data.player.name : false\r\n    let key2 = key1[2].split(\":\")\r\n    let cod_world = key2[0]\r\n    version = version === true \r\n    ? returnNumCode( cod_world ) == server_world.match(/[0-9]/ig).reduce((i, e) => i += e , \"\") \r\n    : false\r\n    let code_date2 = key2[1]\r\n    let n1 = key2[2].split(\".\")[0]\r\n    version = version === true ? n1 == returnNumLettersName( player ) : false\r\n    let cod_server = key2[2].split(\".\")[1]\r\n    version = version === true \r\n    ? cod_server == returnCodServer( server_world.match(/[a-z]/ig).reduce((i, e) => i += e , \"\") ) : false\r\n    let code_date1= key2[3]\r\n    version = version === true \r\n    ? (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( s_date, s_time ) < (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( \r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleDateString(),\r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleTimeString()\r\n    ) \r\n    : false\r\n    return version\r\n}\n\n//# sourceURL=webpack://market/../general/version.js?");

/***/ }),

/***/ "../interfaces/components.js":
/*!***********************************!*\
  !*** ../interfaces/components.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"error_box\": () => (/* binding */ error_box),\n/* harmony export */   \"go_container\": () => (/* binding */ go_container),\n/* harmony export */   \"insert_toggle\": () => (/* binding */ insert_toggle),\n/* harmony export */   \"jig_status\": () => (/* binding */ jig_status),\n/* harmony export */   \"statusGo\": () => (/* binding */ statusGo),\n/* harmony export */   \"toggleOnOff\": () => (/* binding */ toggleOnOff)\n/* harmony export */ });\n\r\n/**\r\n * Uso Geral TW\r\n * Mostra mensagem de erro no html\r\n * @param {String} msg - texto da mensagem\r\n * @param {number} t - tempo em ms  que a msg vai ficar visível\r\n */\r\nconst error_box = ( msg, t = 5000) => {\r\n    if (document.querySelector( \"#content_value\" )) {\r\n        let elemNode = document.querySelector( \"#content_value\" )\r\n        let newElem = document.createElement( 'div' )\r\n        elemNode.prepend( newElem )\r\n        newElem.className = \" error_box \"\r\n        newElem.innerHTML = `<div class=\"content\"> ${ msg }</div>`\r\n        setTimeout(() => newElem.remove() , t )    \r\n    }\r\n}\r\n\r\n/**\r\n * Cria a DIV(go_container) aonde será injetada os componentes de cada screen\r\n */\r\nconst go_container = () => \"width: auto; max-width: 1080px; background: #F7EED3 url(https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic/index/main_bg.jpg) scroll right top repeat; position: relative; display: flow-root; justify-content: center flex-end; align-items: center; box-shadow: 1px 2px 3px 1px rgb(0 0 0 / 30%); border: 1px solid #7d510f; margin-bottom: 5px; padding: 5px;\"\r\n\r\n/**\r\n * Cria menu NotPremium e div aonde será apresentado status\r\n */\r\nconst jig_status = () => {\r\n    if (!document.querySelector( \"#status\" )) {\r\n        let area\r\n        if ( !premium_active && document.querySelector( \"#main_layout > tbody > tr.shadedBG > td.maincell > br\" )) {\r\n            area = document.createElement( 'table' )\r\n            document.querySelector( \"#main_layout > tbody > tr.shadedBG > td.maincell > br\" ).insertAdjacentElement( 'afterend', area )\r\n            area.id =\"quickbar_outer\"\r\n            area.width = \"100%\"\r\n            area.style = `align=\"center\"`\r\n            area.cellspacing =\"0\"\r\n            let html = `<tbody><tr><td><table id=\"quickbar_inner\" style=\"border-collapse: collapse;\" width=\"100%\"><tbody><tr class=\"topborder\"><td class=\"left\"></td><td class=\"main\"></td><td class=\"right\"></td></tr><tr><td class=\"left\"></p></td><td id=\"quickbar_contents\" class=\"main\"><ul class=\"menu quickbar\"><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"1\"><span><a id=\"m1\" class=\"quickbar_link\" href=\"${link_mesma_aldeia}main\" title=\"Atalho 1\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/main.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/main.png\">Principal</a></span></li><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"2\"><span><a id=\"m2\" class=\"quickbar_link\" href=\"${link_mesma_aldeia}train\" title=\"Atalho 2\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/barracks.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/barracks.png\">Recrutar</a></span></li><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"3\"><span><a id=\"m3\" class=\"quickbar_link\" href=\"${link_mesma_aldeia}snob\" title=\"Atalho 3\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/snob.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/snob.png\">Academia</a></span></li>`\r\n            html +=`<li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"4\"><span><a id=\"m4\" class=\"quickbar_link\" href=\"${link_mesma_aldeia}market\" title=\"Atalho 4\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/market.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/market.png\">Mercado</a></span></li><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"5\"><span><a id=\"m5\" class=\"quickbar_link\" href=\"${link_mesma_aldeia}smith\" title=\"Atalho 5\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/smith.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/smith.png\">Ferreiro</a></span></li>`\r\n            if (scav_active) html +=`<li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"6\"><span><a id=\"m6\" class=\"quickbar_link\" href=\"${link_mesma_aldeia}place&mode=scavenge\" title=\"Atalho 6\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/e2454ccc/graphic/buildings/storage.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/e2454ccc/graphic/buildings/storage.png\">Coleta</a></span></li>`\r\n            html +=`<li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"0\"><span><a id=\"m0\" class=\"quickbar_link\" href=\"${link_mesma_aldeia}place\" title=\"Atalho 0\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/place.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/place.png\">Praça</a></span></li></ul></td><td class=\"right\"></td></tr><tr class=\"bottomborder\"><td class=\"left\"></td><td class=\"main\"></td><td class=\"right\"></td></tr><tr><td class=\"shadow\" colspan=\"3\"><div class=\"leftshadow\"></div><div class=\"rightshadow\"></div></td></tr></tbody></table></td></tr></tbody>`\r\n            area.innerHTML = html\r\n            // --- cria as setas para trocas de aldeias\r\n            if ( n_aldeias > 1 ) {\r\n                area = document.createElement('td')\r\n                document.querySelector(\"#menu_row2\").prepend(area)\r\n                area.className = \"box-item icon-box arrowCell\"\r\n                html = `<a id=\"village_switch_right\" class=\"village_switch_link\" href=\"/game.php?${mdf}&village=n${ game_data.village.id }&screen=${ game_data.screen }${ game_data.mode ? '&mode=' : '' }${ game_data.mode ? game_data.mode : '' }\" accesskey=\"d\"><span class=\"arrowRight\"></span></a>`\r\n                area.innerHTML = html\r\n                area = document.createElement('td')\r\n                document.querySelector(\"#menu_row2\").prepend(area)\r\n                area.className = \"box-item icon-box separate arrowCell\"\r\n                html = `<a id=\"village_switch_left\" class=\"village_switch_link\" href=\"/game.php?${mdf}&village=p${ game_data.village.id }&screen=${ game_data.screen }${ game_data.mode ? '&mode=' : '' }${ game_data.mode ? game_data.mode : '' }\" accesskey=\"a\"><span class=\"arrowLeft\"></span></a>`\r\n                area.innerHTML = html\r\n            // --- muda link para outra visualização\r\n            } else document.querySelector( \"#menu_row > td:nth-child(2) > a\" ).href = \"/game.php?village=55871&amp;screen=overview_villages\"\r\n            document.addEventListener('keydown', (e) => {\r\n                console.log(e)\r\n                console.log(e.key)\r\n                console.log(e.target.localName)\r\n                if ( document.querySelector( `#m${e.key}` ) && ( e.target.localName != 'input' && e.target.localName != 'textarea' ) ) self.location = document.querySelector( `#m${e.key}` ).href\r\n            })\r\n        }\r\n        if (document.querySelector(\"#quickbar_inner > tbody > tr:nth-child(2) > td.left\")) {\r\n            area = document.createElement('div')\r\n            document.querySelector(\"#quickbar_inner > tbody > tr:nth-child(2) > td.left\").prepend(area)\r\n            area.id = \"status\"    \r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Botão liga/desliga Let's Go!\r\n */\r\nconst toggleOnOff = () => {\r\n    let html\r\n    let elemNode\r\n    let newElem\r\n    if ( !document.querySelector( 'showOnOff' ) && document.querySelector(\"#quickbar_inner > tbody > tr:nth-child(2) > td.right\") ) {\r\n        elemNode = document.querySelector( \"head\" )\r\n        newElem = document.createElement( 'style' )\r\n        elemNode.appendChild( newElem )\r\n        html = `input.toggle_go { display: none; } input.toggle_go + label { display: inline-block; position: relative; box-shadow: inset 0 0 0px 0.1px black; height: 36px; width: 14px; background-color: red; border-radius: 7px; cursor: pointer; } input.toggle_go + label:before { content: \"\"; display: block; height: 14px; width: 14px; border-radius: 7px; background: rgba(191, 87, 17, 0); transition: 0.2s ease-in-out; } input.toggle_go + label:after { content: \"\"; position: absolute; height: 14px; width: 14px; top: 0; left: 0 px; border-radius: 7px; background: rgb(82, 73, 73); box-shadow: inset 0 0 0 2px red, 2px 4px rgba(59, 55, 55, 0.3); transition: 0.2s ease-in-out; } input.toggle_go:checked + label:before { box-shadow: inset 0 0 0px 0.1px black; height: 36px; background: #13bf11; } input.toggle_go:checked + label:after { top: 22px; box-shadow: inset 0 0 0 2px #13bf11, 2px 4px rgba(59, 55, 55, 0.3); }`\r\n        newElem.innerHTML = html\r\n        elemNode = document.querySelector(\"#quickbar_inner > tbody > tr:nth-child(2) > td.right\")\r\n        newElem = document.createElement( 'div' )\r\n        elemNode.appendChild( newElem )\r\n        newElem.innerHTML = `<input type=\"checkbox\" class=\"toggle_go\" name=\"active_go\" id=\"active_go\"><label for=\"active_go\" ></label>`\r\n        newElem.style = \"margin-right: 4pt;\"\r\n        newElem.id = \"showOnOff\"\r\n        newElem = document.querySelector( \"#active_go\" )\r\n        newElem.checked = players[ game_data.player.id ].configs.active\r\n        newElem.onclick = () => {\r\n            // salva no localStorage\r\n            players[ game_data.player.id ].configs.active = newElem.checked ? true : false\r\n            // --- Busca os dados do localStorage\r\n            localStorage.setItem( 'players', JSON.stringify( players ) )\r\n            statusGo( players[ game_data.player.id ].configs.active )\r\n            run_schedule()\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Uso geral\r\n * Apresentar um elemento com status de uso do programa (ativo/desligado/pausado)\r\n */\r\nconst statusGo = status => {\r\n    if ( document.querySelector( \"#status\" ) && document.querySelector( \"#active_go\" ) ) {\r\n        let area = document.querySelector( \"#status\" )\r\n        let elem = document.querySelector( \"#active_go\" )\r\n        area.style =\"width: 82px; height: 82px; margin: -2px -35px -4px 2px; color: orange; display: flex; align-items: center; text-align: center;\"\r\n        switch ( status ) {\r\n            case true:\r\n                area.innerHTML = `<strong> ♻️\\n Let's Go!\\n ON! </strong>`\r\n                area.style.color = \"#13bf11\"\r\n                elem.className = \"toggle_go\"\r\n                elem.checked = status\r\n                console.log( \"♻️ Let's Go! ON\" )\r\n                break\r\n            case false:\r\n                area.innerHTML = `<strong> ⛔️ Let's Go! OFF! </strong>`\r\n                area.style.color = \"red\"\r\n                elem.className = \"toggle_go\"\r\n                elem.checked = status\r\n                console.log( \"⛔️ Let's Go OFF!\" )\r\n                break\r\n            case \"await\":\r\n                area.innerHTML = `<strong> ⏳ Let's Go! STOP! </strong>`\r\n                area.style.color = \"orange\"\r\n                elem.className = \"toggle_go\"  //\"toggle_be\"\r\n                elem.checked = players[game_data.player.id].configs.active // status\r\n                console.log( \"⏳ Let's Go STOP!\" )\r\n                break\r\n            case \"command\":\r\n                area.innerHTML = `<strong> ⚔️ Let's Go! Command! </strong>`\r\n                area.style.color = \"blue\"\r\n                elem.className = \"togle_go\"  // \"toggle_be\"\r\n                elem.checked = players[game_data.player.id].configs.active\r\n                console.log( \"⚔️ Let's Go Command!\" )\r\n                break\r\n            default:\r\n                break\r\n        }    \r\n    }\r\n}\r\n\r\nconst insert_toggle = () => {\r\n    if ( !document.querySelector( '#toggle' ) ) {\r\n        let elemNode = document.querySelector(\"head\")\r\n        let newElem = document.createElement('style')\r\n        elemNode.appendChild( newElem )\r\n        newElem.id = 'toggle'\r\n        newElem.innerHTML = `input.toggle { display: none; } input.toggle + label { display: inline-block; position: relative; box-shadow: inset 0 0 0px 0.1px black;; height: 12px; width: 24px; background-color: red; border-radius: 6px; margin-left: 1px; margin-top: 5px;  cursor: pointer;} input.toggle + label:before { content: \"\"; display: block; height: 12px; width: 12px; border-radius: 6px; background: rgba(191, 87, 17, 0); transition: 0.2s ease-in-out; } input.toggle + label:after { content: \"\"; position: absolute; height: 12px; width: 12px; top: 0; left: -2px; border-radius: 6px; background: rgb(82, 73, 73); box-shadow: inset 0 0 0 2px red, 2px 4px rgba(59, 55, 55, 0.3); transition: 0.2s ease-in-out; } input.toggle:checked + label:before { box-shadow: inset 0 0 0px 0.1px black; width: 24px; background: #13bf11; } input.toggle:checked + :after { left: 12px; box-shadow: inset 0 0 0 2px #13bf11, 2px 4px rgba(59, 55, 55, 0.3); }`\r\n    }\r\n}\n\n//# sourceURL=webpack://market/../interfaces/components.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./index.js");
/******/ 	
/******/ })()
;
